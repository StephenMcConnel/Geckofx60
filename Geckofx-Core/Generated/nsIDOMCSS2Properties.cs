// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMCSS2Properties.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    /// The nsIDOMCSS2Properties interface is a datatype for additional
    /// reflection of data already provided in nsIDOMCSSStyleDeclaration in
    /// the Document Object Model.
    ///
    /// For more information on this interface please see
    /// http://www.w3.org/TR/DOM-Level-2-Style
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("35b2c7f0-b56c-11e1-afa6-0800200c9a66")]
	public interface nsIDOMCSS2Properties
	{
		
		/// <summary>
        /// The nsIDOMCSS2Properties interface is a datatype for additional
        /// reflection of data already provided in nsIDOMCSSStyleDeclaration in
        /// the Document Object Model.
        ///
        /// For more information on this interface please see
        /// http://www.w3.org/TR/DOM-Level-2-Style
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBackgroundAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackground);
		
		/// <summary>
        /// The nsIDOMCSS2Properties interface is a datatype for additional
        /// reflection of data already provided in nsIDOMCSSStyleDeclaration in
        /// the Document Object Model.
        ///
        /// For more information on this interface please see
        /// http://www.w3.org/TR/DOM-Level-2-Style
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBackgroundAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackground);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBackgroundAttachmentAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackgroundAttachment);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBackgroundAttachmentAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackgroundAttachment);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBackgroundColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackgroundColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBackgroundColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackgroundColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBackgroundImageAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackgroundImage);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBackgroundImageAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackgroundImage);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBackgroundPositionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackgroundPosition);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBackgroundPositionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackgroundPosition);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBackgroundRepeatAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackgroundRepeat);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBackgroundRepeatAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackgroundRepeat);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorder);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorder);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderCollapseAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderCollapse);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderCollapseAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderCollapse);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderSpacingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderSpacing);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderSpacingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderSpacing);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderTopAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderTop);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderTopAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderTop);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderRightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderRight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderRightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderRight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderBottomAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderBottom);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderBottomAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderBottom);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderLeftAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderLeft);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderLeftAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderLeft);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderTopColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderTopColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderTopColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderTopColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderRightColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderRightColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderRightColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderRightColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderBottomColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderBottomColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderBottomColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderBottomColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderLeftColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderLeftColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderLeftColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderLeftColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderTopStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderTopStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderTopStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderTopStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderRightStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderRightStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderRightStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderRightStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderBottomStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderBottomStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderBottomStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderBottomStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderLeftStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderLeftStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderLeftStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderLeftStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderTopWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderTopWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderTopWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderTopWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderRightWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderRightWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderRightWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderRightWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderBottomWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderBottomWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderBottomWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderBottomWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderLeftWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderLeftWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderLeftWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderLeftWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderRadiusAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderRadius);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderRadiusAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderRadius);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderTopLeftRadiusAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderTopLeftRadius);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderTopLeftRadiusAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderTopLeftRadius);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderTopRightRadiusAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderTopRightRadius);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderTopRightRadiusAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderTopRightRadius);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderBottomLeftRadiusAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderBottomLeftRadius);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderBottomLeftRadiusAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderBottomLeftRadius);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderBottomRightRadiusAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderBottomRightRadius);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderBottomRightRadiusAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderBottomRightRadius);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBottomAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBottom);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBottomAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBottom);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBoxShadowAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBoxShadow);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBoxShadowAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBoxShadow);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetCaptionSideAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aCaptionSide);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCaptionSideAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aCaptionSide);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetClearAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aClear);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetClearAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aClear);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetClipAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aClip);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetClipAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aClip);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetContentAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aContent);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetContentAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aContent);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetCounterIncrementAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aCounterIncrement);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCounterIncrementAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aCounterIncrement);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetCounterResetAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aCounterReset);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCounterResetAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aCounterReset);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetCursorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aCursor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCursorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aCursor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetDirectionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aDirection);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetDirectionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aDirection);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetDisplayAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aDisplay);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetDisplayAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aDisplay);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetEmptyCellsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aEmptyCells);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetEmptyCellsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aEmptyCells);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetCssFloatAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aCssFloat);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCssFloatAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aCssFloat);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetFontAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFont);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFontAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFont);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetFontFamilyAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFontFamily);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFontFamilyAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFontFamily);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetFontSizeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFontSize);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFontSizeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFontSize);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetFontSizeAdjustAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFontSizeAdjust);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFontSizeAdjustAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFontSizeAdjust);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetFontStretchAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFontStretch);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFontStretchAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFontStretch);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetFontStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFontStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFontStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFontStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetFontVariantAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFontVariant);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFontVariantAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFontVariant);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetFontWeightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFontWeight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFontWeightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFontWeight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetHeightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aHeight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetHeightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aHeight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetLeftAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aLeft);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetLeftAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aLeft);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetLetterSpacingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aLetterSpacing);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetLetterSpacingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aLetterSpacing);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetLineHeightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aLineHeight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetLineHeightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aLineHeight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetListStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aListStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetListStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aListStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetListStyleImageAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aListStyleImage);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetListStyleImageAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aListStyleImage);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetListStylePositionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aListStylePosition);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetListStylePositionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aListStylePosition);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetListStyleTypeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aListStyleType);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetListStyleTypeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aListStyleType);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMarginAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMargin);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMarginAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMargin);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMarginTopAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarginTop);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMarginTopAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarginTop);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMarginRightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarginRight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMarginRightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarginRight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMarginBottomAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarginBottom);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMarginBottomAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarginBottom);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMarginLeftAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarginLeft);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMarginLeftAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarginLeft);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMarkerOffsetAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarkerOffset);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMarkerOffsetAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarkerOffset);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMarksAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarks);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMarksAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarks);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMaxHeightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMaxHeight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMaxHeightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMaxHeight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMaxWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMaxWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMaxWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMaxWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMinHeightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMinHeight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMinHeightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMinHeight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMinWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMinWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMinWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMinWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetOrphansAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOrphans);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOrphansAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOrphans);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetOutlineAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOutline);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOutlineAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOutline);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetOutlineColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOutlineColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOutlineColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOutlineColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetOutlineStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOutlineStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOutlineStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOutlineStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetOutlineWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOutlineWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOutlineWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOutlineWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetOverflowAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOverflow);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOverflowAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOverflow);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetPaddingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPadding);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPaddingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPadding);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetPaddingTopAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPaddingTop);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPaddingTopAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPaddingTop);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetPaddingRightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPaddingRight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPaddingRightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPaddingRight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetPaddingBottomAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPaddingBottom);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPaddingBottomAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPaddingBottom);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetPaddingLeftAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPaddingLeft);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPaddingLeftAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPaddingLeft);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetPageAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPage);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPageAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPage);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetPageBreakAfterAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPageBreakAfter);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPageBreakAfterAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPageBreakAfter);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetPageBreakBeforeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPageBreakBefore);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPageBreakBeforeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPageBreakBefore);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetPageBreakInsideAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPageBreakInside);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPageBreakInsideAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPageBreakInside);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetPositionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPosition);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPositionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPosition);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetQuotesAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aQuotes);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetQuotesAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aQuotes);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetRightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aRight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetRightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aRight);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetSizeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aSize);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetSizeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aSize);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetTableLayoutAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTableLayout);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetTableLayoutAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTableLayout);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetTextAlignAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTextAlign);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetTextAlignAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTextAlign);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetTextDecorationAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTextDecoration);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetTextDecorationAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTextDecoration);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetTextIndentAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTextIndent);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetTextIndentAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTextIndent);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetTextOverflowAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTextOverflow);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetTextOverflowAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTextOverflow);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetTextShadowAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTextShadow);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetTextShadowAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTextShadow);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetTextTransformAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTextTransform);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetTextTransformAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTextTransform);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetTopAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTop);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetTopAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTop);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetUnicodeBidiAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aUnicodeBidi);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetUnicodeBidiAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aUnicodeBidi);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetVerticalAlignAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aVerticalAlign);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetVerticalAlignAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aVerticalAlign);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetVisibilityAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aVisibility);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetVisibilityAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aVisibility);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetWhiteSpaceAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aWhiteSpace);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetWhiteSpaceAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aWhiteSpace);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetWidowsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aWidows);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetWidowsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aWidows);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetWordSpacingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aWordSpacing);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetWordSpacingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aWordSpacing);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetZIndexAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aZIndex);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetZIndexAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aZIndex);
		
		/// <summary>
        ///SVG CSS properties </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetClipPathAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aClipPath);
		
		/// <summary>
        ///SVG CSS properties </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetClipPathAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aClipPath);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetClipRuleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aClipRule);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetClipRuleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aClipRule);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetColorInterpolationAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aColorInterpolation);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetColorInterpolationAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aColorInterpolation);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetColorInterpolationFiltersAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aColorInterpolationFilters);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetColorInterpolationFiltersAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aColorInterpolationFilters);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetDominantBaselineAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aDominantBaseline);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetDominantBaselineAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aDominantBaseline);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetFillAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFill);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFillAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFill);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetFillOpacityAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFillOpacity);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFillOpacityAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFillOpacity);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetFillRuleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFillRule);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFillRuleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFillRule);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetFilterAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFilter);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFilterAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFilter);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetFloodColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFloodColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFloodColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFloodColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetFloodOpacityAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFloodOpacity);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFloodOpacityAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aFloodOpacity);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetImageRenderingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aImageRendering);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetImageRenderingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aImageRendering);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetLightingColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aLightingColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetLightingColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aLightingColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMarkerAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarker);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMarkerAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarker);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMarkerEndAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarkerEnd);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMarkerEndAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarkerEnd);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMarkerMidAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarkerMid);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMarkerMidAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarkerMid);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMarkerStartAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarkerStart);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMarkerStartAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMarkerStart);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMaskAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMask);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMaskAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMask);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetShapeRenderingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aShapeRendering);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetShapeRenderingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aShapeRendering);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetStopColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStopColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetStopColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStopColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetStopOpacityAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStopOpacity);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetStopOpacityAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStopOpacity);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetStrokeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStroke);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetStrokeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStroke);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetStrokeDasharrayAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStrokeDasharray);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetStrokeDasharrayAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStrokeDasharray);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetStrokeDashoffsetAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStrokeDashoffset);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetStrokeDashoffsetAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStrokeDashoffset);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetStrokeLinecapAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStrokeLinecap);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetStrokeLinecapAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStrokeLinecap);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetStrokeLinejoinAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStrokeLinejoin);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetStrokeLinejoinAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStrokeLinejoin);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetStrokeMiterlimitAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStrokeMiterlimit);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetStrokeMiterlimitAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStrokeMiterlimit);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetStrokeOpacityAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStrokeOpacity);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetStrokeOpacityAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStrokeOpacity);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetStrokeWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStrokeWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetStrokeWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aStrokeWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetTextAnchorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTextAnchor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetTextAnchorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTextAnchor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetTextRenderingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTextRendering);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetTextRenderingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aTextRendering);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetVectorEffectAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aVectorEffect);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetVectorEffectAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aVectorEffect);
		
		/// <summary>
        ///Mozilla extension CSS properties </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozAppearanceAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAppearance);
		
		/// <summary>
        ///Mozilla extension CSS properties </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozAppearanceAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAppearance);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBackgroundClipAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackgroundClip);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBackgroundClipAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackgroundClip);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBackgroundInlinePolicyAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBackgroundInlinePolicy);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBackgroundInlinePolicyAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBackgroundInlinePolicy);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBackgroundOriginAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackgroundOrigin);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBackgroundOriginAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackgroundOrigin);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBindingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBinding);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBindingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBinding);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBorderBottomColorsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderBottomColors);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBorderBottomColorsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderBottomColors);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBorderLeftColorsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderLeftColors);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBorderLeftColorsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderLeftColors);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBorderRightColorsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderRightColors);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBorderRightColorsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderRightColors);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBorderTopColorsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderTopColors);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBorderTopColorsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderTopColors);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBoxAlignAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBoxAlign);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBoxAlignAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBoxAlign);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBoxDirectionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBoxDirection);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBoxDirectionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBoxDirection);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBoxFlexAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBoxFlex);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBoxFlexAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBoxFlex);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBoxOrientAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBoxOrient);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBoxOrientAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBoxOrient);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBoxOrdinalGroupAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBoxOrdinalGroup);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBoxOrdinalGroupAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBoxOrdinalGroup);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBoxPackAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBoxPack);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBoxPackAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBoxPack);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBoxSizingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBoxSizing);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBoxSizingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBoxSizing);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozColumnCountAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozColumnCount);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozColumnCountAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozColumnCount);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozColumnWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozColumnWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozColumnWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozColumnWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozColumnGapAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozColumnGap);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozColumnGapAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozColumnGap);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozFloatEdgeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozFloatEdge);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozFloatEdgeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozFloatEdge);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozFontFeatureSettingsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozFontFeatureSettings);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozFontFeatureSettingsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozFontFeatureSettings);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozFontLanguageOverrideAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozFontLanguageOverride);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozFontLanguageOverrideAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozFontLanguageOverride);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozForceBrokenImageIconAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozForceBrokenImageIcon);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozForceBrokenImageIconAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozForceBrokenImageIcon);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozImageRegionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozImageRegion);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozImageRegionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozImageRegion);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozMarginEndAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozMarginEnd);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozMarginEndAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozMarginEnd);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozMarginStartAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozMarginStart);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozMarginStartAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozMarginStart);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozOrientAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozOrient);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozOrientAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozOrient);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozOutlineRadiusAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozOutlineRadius);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozOutlineRadiusAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozOutlineRadius);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozOutlineRadiusTopleftAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozOutlineRadiusTopleft);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozOutlineRadiusTopleftAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozOutlineRadiusTopleft);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozOutlineRadiusToprightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozOutlineRadiusTopright);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozOutlineRadiusToprightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozOutlineRadiusTopright);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozOutlineRadiusBottomleftAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozOutlineRadiusBottomleft);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozOutlineRadiusBottomleftAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozOutlineRadiusBottomleft);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozOutlineRadiusBottomrightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozOutlineRadiusBottomright);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozOutlineRadiusBottomrightAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozOutlineRadiusBottomright);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozPaddingEndAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozPaddingEnd);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozPaddingEndAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozPaddingEnd);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozPaddingStartAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozPaddingStart);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozPaddingStartAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozPaddingStart);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozUserFocusAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozUserFocus);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozUserFocusAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozUserFocus);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozUserInputAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozUserInput);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozUserInputAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozUserInput);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozUserModifyAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozUserModify);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozUserModifyAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozUserModify);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozUserSelectAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozUserSelect);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozUserSelectAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozUserSelect);
		
		/// <summary>
        ///CSS3 properties </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetOpacityAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOpacity);
		
		/// <summary>
        ///CSS3 properties </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOpacityAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOpacity);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetOutlineOffsetAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOutlineOffset);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOutlineOffsetAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOutlineOffset);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozTextAlignLastAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTextAlignLast);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozTextAlignLastAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTextAlignLast);
		
		/// <summary>
        ///Mozilla extensions </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetOverflowXAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOverflowX);
		
		/// <summary>
        ///Mozilla extensions </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOverflowXAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOverflowX);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetOverflowYAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOverflowY);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOverflowYAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aOverflowY);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetImeModeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aImeMode);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetImeModeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aImeMode);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBorderEndAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderEnd);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBorderEndAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderEnd);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBorderEndColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderEndColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBorderEndColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderEndColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBorderEndStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderEndStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBorderEndStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderEndStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBorderEndWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderEndWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBorderEndWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderEndWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBorderStartAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderStart);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBorderStartAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderStart);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBorderStartColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderStartColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBorderStartColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderStartColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBorderStartStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderStartStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBorderStartStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderStartStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBorderStartWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderStartWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBorderStartWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderStartWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozStackSizingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozStackSizing);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozStackSizingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozStackSizing);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderImageAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderImage);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderImageAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderImage);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozColumnsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozColumns);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozColumnsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozColumns);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozColumnRuleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozColumnRule);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozColumnRuleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozColumnRule);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozColumnRuleWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozColumnRuleWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozColumnRuleWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozColumnRuleWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozColumnRuleStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozColumnRuleStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozColumnRuleStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozColumnRuleStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozColumnRuleColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozColumnRuleColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozColumnRuleColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozColumnRuleColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetWordBreakAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aWordBreak);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetWordBreakAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aWordBreak);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetWordWrapAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aWordWrap);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetWordWrapAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aWordWrap);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozHyphensAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozHyphens);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozHyphensAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozHyphens);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozTransformAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTransform);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozTransformAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTransform);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozTransformOriginAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTransformOrigin);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozTransformOriginAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTransformOrigin);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozPerspectiveAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozPerspective);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozPerspectiveAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozPerspective);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozPerspectiveOriginAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozPerspectiveOrigin);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozPerspectiveOriginAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozPerspectiveOrigin);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBackfaceVisibilityAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBackfaceVisibility);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBackfaceVisibilityAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBackfaceVisibility);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozTransformStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTransformStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozTransformStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTransformStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozWindowShadowAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozWindowShadow);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozWindowShadowAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozWindowShadow);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBackgroundSizeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackgroundSize);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBackgroundSizeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBackgroundSize);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozTextBlinkAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTextBlink);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozTextBlinkAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTextBlink);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozTextDecorationColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTextDecorationColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozTextDecorationColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTextDecorationColor);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozTextDecorationLineAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTextDecorationLine);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozTextDecorationLineAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTextDecorationLine);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozTextDecorationStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTextDecorationStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozTextDecorationStyleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTextDecorationStyle);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozTransitionPropertyAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTransitionProperty);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozTransitionPropertyAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTransitionProperty);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozTransitionDurationAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTransitionDuration);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozTransitionDurationAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTransitionDuration);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozTransitionDelayAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTransitionDelay);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozTransitionDelayAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTransitionDelay);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozTransitionTimingFunctionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTransitionTimingFunction);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozTransitionTimingFunctionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTransitionTimingFunction);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozTransitionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTransition);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozTransitionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTransition);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetPointerEventsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPointerEvents);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPointerEventsAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aPointerEvents);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozTabSizeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTabSize);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozTabSizeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTabSize);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetResizeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aResize);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetResizeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aResize);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozAnimationNameAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimationName);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozAnimationNameAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimationName);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozAnimationDurationAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimationDuration);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozAnimationDurationAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimationDuration);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozAnimationDelayAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimationDelay);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozAnimationDelayAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimationDelay);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozAnimationTimingFunctionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimationTimingFunction);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozAnimationTimingFunctionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimationTimingFunction);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozAnimationDirectionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimationDirection);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozAnimationDirectionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimationDirection);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozAnimationFillModeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimationFillMode);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozAnimationFillModeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimationFillMode);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozAnimationIterationCountAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimationIterationCount);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozAnimationIterationCountAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimationIterationCount);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozAnimationPlayStateAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimationPlayState);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozAnimationPlayStateAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimationPlayState);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozAnimationAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimation);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozAnimationAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozAnimation);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozTextSizeAdjustAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTextSizeAdjust);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozTextSizeAdjustAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozTextSizeAdjust);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderImageSourceAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderImageSource);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderImageSourceAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderImageSource);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderImageSliceAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderImageSlice);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderImageSliceAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderImageSlice);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderImageWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderImageWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderImageWidthAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderImageWidth);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderImageOutsetAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderImageOutset);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderImageOutsetAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderImageOutset);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBorderImageRepeatAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderImageRepeat);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBorderImageRepeatAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aBorderImageRepeat);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozBorderImageAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderImage);
		
		/// <summary>
        /// raises(DOMException) on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozBorderImageAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aMozBorderImage);
	}
}
