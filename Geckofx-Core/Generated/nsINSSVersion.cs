// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsINSSVersion.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;

	
	
	/// <summary>nsINSSVersion </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("a8a53a2b-75cc-4c68-a9bb-9791dbddaa00")]
	public interface nsINSSVersion
	{
		
		/// <summary>
        ///Minimal required versions as used at build time </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNSPR_MinVersionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aNSPR_MinVersion);
		
		/// <summary>Member GetNSS_MinVersionAttribute </summary>
		/// <param name='aNSS_MinVersion'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNSS_MinVersionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aNSS_MinVersion);
		
		/// <summary>Member GetNSSUTIL_MinVersionAttribute </summary>
		/// <param name='aNSSUTIL_MinVersion'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNSSUTIL_MinVersionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aNSSUTIL_MinVersion);
		
		/// <summary>Member GetNSSSSL_MinVersionAttribute </summary>
		/// <param name='aNSSSSL_MinVersion'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNSSSSL_MinVersionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aNSSSSL_MinVersion);
		
		/// <summary>Member GetNSSSMIME_MinVersionAttribute </summary>
		/// <param name='aNSSSMIME_MinVersion'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNSSSMIME_MinVersionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aNSSSMIME_MinVersion);
		
		/// <summary>
        ///Versions of libraries currently in use </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNSPR_VersionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aNSPR_Version);
		
		/// <summary>Member GetNSS_VersionAttribute </summary>
		/// <param name='aNSS_Version'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNSS_VersionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aNSS_Version);
		
		/// <summary>Member GetNSSUTIL_VersionAttribute </summary>
		/// <param name='aNSSUTIL_Version'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNSSUTIL_VersionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aNSSUTIL_Version);
		
		/// <summary>Member GetNSSSSL_VersionAttribute </summary>
		/// <param name='aNSSSSL_Version'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNSSSSL_VersionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aNSSSSL_Version);
		
		/// <summary>Member GetNSSSMIME_VersionAttribute </summary>
		/// <param name='aNSSSMIME_Version'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNSSSMIME_VersionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aNSSSMIME_Version);
	}
}
