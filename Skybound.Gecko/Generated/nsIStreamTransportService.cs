// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIStreamTransportService.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIStreamTransportService.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIStreamTransportService </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("8268D474-EFBF-494f-A152-E8A8616F4E52")]
	public interface nsIStreamTransportService
	{
		
		/// <summary>Member CreateInputTransport </summary>
		/// <param name='aStream'> </param>
		/// <param name='aStartOffset'> </param>
		/// <param name='aReadLimit'> </param>
		/// <param name='aCloseWhenDone'> </param>
		/// <returns>A nsITransport</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsITransport CreateInputTransport([MarshalAs(UnmanagedType.Interface)] nsIInputStream  aStream, System.Int32  aStartOffset, System.Int32  aReadLimit, System.Boolean  aCloseWhenDone);
		
		/// <summary>Member CreateOutputTransport </summary>
		/// <param name='aStream'> </param>
		/// <param name='aStartOffset'> </param>
		/// <param name='aWriteLimit'> </param>
		/// <param name='aCloseWhenDone'> </param>
		/// <returns>A nsITransport</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsITransport CreateOutputTransport([MarshalAs(UnmanagedType.Interface)] nsIOutputStream  aStream, System.Int32  aStartOffset, System.Int32  aWriteLimit, System.Boolean  aCloseWhenDone);
	}
}
