// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIServerSocket.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIServerSocket.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIServerSocket </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("a5b64be0-d563-46bb-ae95-132e46fcd42f")]
	public interface nsIServerSocket
	{
		
		/// <summary>Member Init </summary>
		/// <param name='aPort'> </param>
		/// <param name='aLoopbackOnly'> </param>
		/// <param name='aBackLog'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Init(System.Int32  aPort, System.Boolean  aLoopbackOnly, System.Int32  aBackLog);
		
		/// <summary>Member InitWithAddress </summary>
		/// <param name='aAddr'> </param>
		/// <param name='aBackLog'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InitWithAddress(System.IntPtr  aAddr, System.Int32  aBackLog);
		
		/// <summary>Member Close </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Close();
		
		/// <summary>Member AsyncListen </summary>
		/// <param name='aListener'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AsyncListen([MarshalAs(UnmanagedType.Interface)] nsIServerSocketListener  aListener);
		
		/// <summary>Member GetPortAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetPortAttribute();
		
		/// <summary>Member GetAddress </summary>
		/// <returns>A System.IntPtr</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr GetAddress();
	}
	
	/// <summary>nsIServerSocketListener </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("836d98ec-fee2-4bde-b609-abd5e966eabd")]
	public interface nsIServerSocketListener
	{
		
		/// <summary>Member OnSocketAccepted </summary>
		/// <param name='aServ'> </param>
		/// <param name='aTransport'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnSocketAccepted([MarshalAs(UnmanagedType.Interface)] nsIServerSocket  aServ, [MarshalAs(UnmanagedType.Interface)] nsISocketTransport  aTransport);
		
		/// <summary>Member OnStopListening </summary>
		/// <param name='aServ'> </param>
		/// <param name='aStatus'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnStopListening([MarshalAs(UnmanagedType.Interface)] nsIServerSocket  aServ, System.Int32  aStatus);
	}
}
