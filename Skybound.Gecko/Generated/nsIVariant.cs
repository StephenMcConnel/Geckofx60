// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIVariant.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIVariant.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIDataType </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("4d12e540-83d7-11d5-90ed-0010a4e73d9a")]
	public interface nsIDataType
	{
	}
	
	/// <summary>nsIVariant </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("81e4c2de-acac-4ad6-901a-b5fb1b851a0d")]
	public interface nsIVariant
	{
		
		/// <summary>Member GetDataTypeAttribute </summary>
		/// <returns>A System.UInt16 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt16  GetDataTypeAttribute();
		
		/// <summary>Member GetAsInt8 </summary>
		/// <returns>A System.Byte</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		byte GetAsInt8();
		
		/// <summary>Member GetAsInt16 </summary>
		/// <returns>A System.Int16</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		short GetAsInt16();
		
		/// <summary>Member GetAsInt32 </summary>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetAsInt32();
		
		/// <summary>Member GetAsInt64 </summary>
		/// <returns>A System.Int64</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		long GetAsInt64();
		
		/// <summary>Member GetAsUint8 </summary>
		/// <returns>A System.Byte</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		byte GetAsUint8();
		
		/// <summary>Member GetAsUint16 </summary>
		/// <returns>A System.UInt16</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		ushort GetAsUint16();
		
		/// <summary>Member GetAsUint32 </summary>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetAsUint32();
		
		/// <summary>Member GetAsUint64 </summary>
		/// <returns>A System.UInt64</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		ulong GetAsUint64();
		
		/// <summary>Member GetAsFloat </summary>
		/// <returns>A System.Double</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		double GetAsFloat();
		
		/// <summary>Member GetAsDouble </summary>
		/// <returns>A System.Double</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		double GetAsDouble();
		
		/// <summary>Member GetAsBool </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool GetAsBool();
		
		/// <summary>Member GetAsChar </summary>
		/// <returns>A System.Char</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		char GetAsChar();
		
		/// <summary>Member GetAsWChar </summary>
		/// <returns>A System.Char</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		char GetAsWChar();
		
		/// <summary>Member GetAsID </summary>
		/// <param name='retval'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetAsID(out System.IntPtr retval);
		
		/// <summary>Member GetAsAString </summary>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetAsAString();
		
		/// <summary>Member GetAsDOMString </summary>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetAsDOMString();
		
		/// <summary>Member GetAsACString </summary>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetAsACString();
		
		/// <summary>Member GetAsAUTF8String </summary>
		/// <returns>A nsAUTF8String</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAUTF8String GetAsAUTF8String();
		
		/// <summary>Member GetAsString </summary>
		/// <returns>A System.String</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		string GetAsString();
		
		/// <summary>Member GetAsWString </summary>
		/// <returns>A System.String</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		string GetAsWString();
		
		/// <summary>Member GetAsISupports </summary>
		/// <returns>A nsISupports</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports GetAsISupports();
		
		/// <summary>Member GetAsJSVal </summary>
		/// <returns>A System.IntPtr</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr GetAsJSVal();
		
		/// <summary>Member GetAsInterface </summary>
		/// <param name='iid'> </param>
		/// <returns>A System.IntPtr </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr  GetAsInterface(out System.Guid iid);
		
		/// <summary>Member GetAsArray </summary>
		/// <param name='type'> </param>
		/// <param name='iid'> </param>
		/// <param name='count'> </param>
		/// <param name='ptr'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetAsArray(out System.UInt16  type, out System.Guid iid, out System.UInt32  count, out System.IntPtr  ptr);
		
		/// <summary>Member GetAsStringWithSize </summary>
		/// <param name='size'> </param>
		/// <returns>A System.String </returns>
		[return: MarshalAs(UnmanagedType.LPStr, SizeParamIndex=0)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.String  GetAsStringWithSize(out System.UInt32  size);
		
		/// <summary>Member GetAsWStringWithSize </summary>
		/// <param name='size'> </param>
		/// <returns>A System.String</returns>
		[return: MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler", SizeParamIndex=0)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		string GetAsWStringWithSize(out System.UInt32  size);
	}
	
	/// <summary>nsIWritableVariant </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("5586a590-8c82-11d5-90f3-0010a4e73d9a")]
	public interface nsIWritableVariant : nsIVariant
	{
		
		/// <summary>Member GetDataTypeAttribute </summary>
		/// <returns>A System.UInt16 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.UInt16  GetDataTypeAttribute();
		
		/// <summary>Member GetAsInt8 </summary>
		/// <returns>A System.Byte</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new byte GetAsInt8();
		
		/// <summary>Member GetAsInt16 </summary>
		/// <returns>A System.Int16</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new short GetAsInt16();
		
		/// <summary>Member GetAsInt32 </summary>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new int GetAsInt32();
		
		/// <summary>Member GetAsInt64 </summary>
		/// <returns>A System.Int64</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new long GetAsInt64();
		
		/// <summary>Member GetAsUint8 </summary>
		/// <returns>A System.Byte</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new byte GetAsUint8();
		
		/// <summary>Member GetAsUint16 </summary>
		/// <returns>A System.UInt16</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new ushort GetAsUint16();
		
		/// <summary>Member GetAsUint32 </summary>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new uint GetAsUint32();
		
		/// <summary>Member GetAsUint64 </summary>
		/// <returns>A System.UInt64</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new ulong GetAsUint64();
		
		/// <summary>Member GetAsFloat </summary>
		/// <returns>A System.Double</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new double GetAsFloat();
		
		/// <summary>Member GetAsDouble </summary>
		/// <returns>A System.Double</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new double GetAsDouble();
		
		/// <summary>Member GetAsBool </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool GetAsBool();
		
		/// <summary>Member GetAsChar </summary>
		/// <returns>A System.Char</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new char GetAsChar();
		
		/// <summary>Member GetAsWChar </summary>
		/// <returns>A System.Char</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new char GetAsWChar();
		
		/// <summary>Member GetAsID </summary>
		/// <param name='retval'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new int GetAsID(out System.IntPtr retval);
		
		/// <summary>Member GetAsAString </summary>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsAString GetAsAString();
		
		/// <summary>Member GetAsDOMString </summary>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsAString GetAsDOMString();
		
		/// <summary>Member GetAsACString </summary>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsAString GetAsACString();
		
		/// <summary>Member GetAsAUTF8String </summary>
		/// <returns>A nsAUTF8String</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsAUTF8String GetAsAUTF8String();
		
		/// <summary>Member GetAsString </summary>
		/// <returns>A System.String</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new string GetAsString();
		
		/// <summary>Member GetAsWString </summary>
		/// <returns>A System.String</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new string GetAsWString();
		
		/// <summary>Member GetAsISupports </summary>
		/// <returns>A nsISupports</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsISupports GetAsISupports();
		
		/// <summary>Member GetAsJSVal </summary>
		/// <returns>A System.IntPtr</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.IntPtr GetAsJSVal();
		
		/// <summary>Member GetAsInterface </summary>
		/// <param name='iid'> </param>
		/// <returns>A System.IntPtr </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.IntPtr  GetAsInterface(out System.Guid iid);
		
		/// <summary>Member GetAsArray </summary>
		/// <param name='type'> </param>
		/// <param name='iid'> </param>
		/// <param name='count'> </param>
		/// <param name='ptr'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new int GetAsArray(out System.UInt16  type, out System.Guid iid, out System.UInt32  count, out System.IntPtr  ptr);
		
		/// <summary>Member GetAsStringWithSize </summary>
		/// <param name='size'> </param>
		/// <returns>A System.String </returns>
		[return: MarshalAs(UnmanagedType.LPStr, SizeParamIndex=0)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.String  GetAsStringWithSize(out System.UInt32  size);
		
		/// <summary>Member GetAsWStringWithSize </summary>
		/// <param name='size'> </param>
		/// <returns>A System.String</returns>
		[return: MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler", SizeParamIndex=0)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new string GetAsWStringWithSize(out System.UInt32  size);
		
		/// <summary>Member GetWritableAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetWritableAttribute();
		
		/// <summary>Member SetWritableAttribute </summary>
		/// <param name='aWritable'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetWritableAttribute(System.Boolean  aWritable);
		
		/// <summary>Member SetAsInt8 </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsInt8(byte aValue);
		
		/// <summary>Member SetAsInt16 </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsInt16(System.Int16  aValue);
		
		/// <summary>Member SetAsInt32 </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsInt32(System.Int32  aValue);
		
		/// <summary>Member SetAsInt64 </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsInt64(System.Int64  aValue);
		
		/// <summary>Member SetAsUint8 </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsUint8(byte aValue);
		
		/// <summary>Member SetAsUint16 </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsUint16(System.UInt16  aValue);
		
		/// <summary>Member SetAsUint32 </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsUint32(System.UInt32  aValue);
		
		/// <summary>Member SetAsUint64 </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsUint64(System.UInt64  aValue);
		
		/// <summary>Member SetAsFloat </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsFloat(double aValue);
		
		/// <summary>Member SetAsDouble </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsDouble(double aValue);
		
		/// <summary>Member SetAsBool </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsBool(System.Boolean  aValue);
		
		/// <summary>Member SetAsChar </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsChar(System.Char  aValue);
		
		/// <summary>Member SetAsWChar </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsWChar(System.Char  aValue);
		
		/// <summary>Member SetAsID </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsID(System.IntPtr aValue);
		
		/// <summary>Member SetAsAString </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsAString([MarshalAs(UnmanagedType.LPStruct)] nsAString aValue);
		
		/// <summary>Member SetAsDOMString </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsDOMString([MarshalAs(UnmanagedType.LPStruct)] nsAString aValue);
		
		/// <summary>Member SetAsACString </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsACString([MarshalAs(UnmanagedType.LPStruct)] nsAString  aValue);
		
		/// <summary>Member SetAsAUTF8String </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsAUTF8String([MarshalAs(UnmanagedType.LPStruct)] nsAUTF8String  aValue);
		
		/// <summary>Member SetAsString </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsString([MarshalAs(UnmanagedType.LPStr)] System.String  aValue);
		
		/// <summary>Member SetAsWString </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsWString([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string aValue);
		
		/// <summary>Member SetAsISupports </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsISupports([MarshalAs(UnmanagedType.Interface)] nsISupports  aValue);
		
		/// <summary>Member SetAsInterface </summary>
		/// <param name='iid'> </param>
		/// <param name='iface'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsInterface(ref System.Guid iid, System.IntPtr  iface);
		
		/// <summary>Member SetAsArray </summary>
		/// <param name='type'> </param>
		/// <param name='iid'> </param>
		/// <param name='count'> </param>
		/// <param name='ptr'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsArray(System.UInt16  type, System.Guid iid, System.UInt32  count, System.IntPtr  ptr);
		
		/// <summary>Member SetAsStringWithSize </summary>
		/// <param name='size'> </param>
		/// <param name='str'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsStringWithSize(System.UInt32  size, [MarshalAs(UnmanagedType.LPStr, SizeParamIndex=0)] System.String  str);
		
		/// <summary>Member SetAsWStringWithSize </summary>
		/// <param name='size'> </param>
		/// <param name='str'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsWStringWithSize(System.UInt32  size, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler", SizeParamIndex=0)] string str);
		
		/// <summary>Member SetAsVoid </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsVoid();
		
		/// <summary>Member SetAsEmpty </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsEmpty();
		
		/// <summary>Member SetAsEmptyArray </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAsEmptyArray();
		
		/// <summary>Member SetFromVariant </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFromVariant([MarshalAs(UnmanagedType.Interface)] nsIVariant  aValue);
	}
}
