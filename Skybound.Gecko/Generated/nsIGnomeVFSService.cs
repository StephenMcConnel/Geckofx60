// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIGnomeVFSService.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIGnomeVFSService.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIGnomeVFSMimeApp </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("66009894-9877-405b-9321-bf30420e34e6")]
	public interface nsIGnomeVFSMimeApp
	{
		
		/// <summary>Member GetIdAttribute </summary>
		/// <param name='aId'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetIdAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aId);
		
		/// <summary>Member GetNameAttribute </summary>
		/// <param name='aName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNameAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aName);
		
		/// <summary>Member GetCommandAttribute </summary>
		/// <param name='aCommand'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetCommandAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aCommand);
		
		/// <summary>Member GetCanOpenMultipleFilesAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetCanOpenMultipleFilesAttribute();
		
		/// <summary>Member GetExpectsURIsAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetExpectsURIsAttribute();
		
		/// <summary>Member GetSupportedURISchemesAttribute </summary>
		/// <returns>A nsIUTF8StringEnumerator </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIUTF8StringEnumerator  GetSupportedURISchemesAttribute();
		
		/// <summary>Member GetRequiresTerminalAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetRequiresTerminalAttribute();
		
		/// <summary>Member Launch </summary>
		/// <param name='uri'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Launch([MarshalAs(UnmanagedType.LPStruct)] nsAString  uri);
	}
	
	/// <summary>nsIGnomeVFSService </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("d1ac73a6-2ceb-4164-8142-215afe7fe8a6")]
	public interface nsIGnomeVFSService
	{
		
		/// <summary>Member GetMimeTypeFromExtension </summary>
		/// <param name='extension'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetMimeTypeFromExtension([MarshalAs(UnmanagedType.LPStruct)] nsAString  extension);
		
		/// <summary>Member GetAppForMimeType </summary>
		/// <param name='mimeType'> </param>
		/// <returns>A nsIGnomeVFSMimeApp</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIGnomeVFSMimeApp GetAppForMimeType([MarshalAs(UnmanagedType.LPStruct)] nsAString  mimeType);
		
		/// <summary>Member GetDescriptionForMimeType </summary>
		/// <param name='mimeType'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetDescriptionForMimeType([MarshalAs(UnmanagedType.LPStruct)] nsAString  mimeType);
		
		/// <summary>Member ShowURI </summary>
		/// <param name='uri'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ShowURI([MarshalAs(UnmanagedType.Interface)] nsIURI  uri);
		
		/// <summary>Member ShowURIForInput </summary>
		/// <param name='uri'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ShowURIForInput([MarshalAs(UnmanagedType.LPStruct)] nsAString  uri);
	}
}
