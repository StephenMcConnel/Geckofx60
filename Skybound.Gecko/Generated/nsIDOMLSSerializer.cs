// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMLSSerializer.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIDOMLSSerializer </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("96ea4792-d362-4c28-a8c2-0337790d648a")]
	public interface nsIDOMLSSerializer
	{
		
		/// <summary>Member GetDomConfigAttribute </summary>
		/// <returns>A nsIDOMDOMConfiguration</returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMDOMConfiguration GetDomConfigAttribute();
		
		/// <summary>Member GetNewLineAttribute </summary>
		/// <param name='aNewLine'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNewLineAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aNewLine);
		
		/// <summary>Member SetNewLineAttribute </summary>
		/// <param name='aNewLine'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetNewLineAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aNewLine);
		
		/// <summary>Member GetFilterAttribute </summary>
		/// <returns>A nsIDOMLSSerializerFilter</returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMLSSerializerFilter GetFilterAttribute();
		
		/// <summary>Member SetFilterAttribute </summary>
		/// <param name='aFilter'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFilterAttribute([MarshalAs(UnmanagedType.Interface)] nsIDOMLSSerializerFilter aFilter);
		
		/// <summary>Member Write </summary>
		/// <param name='nodeArg'> </param>
		/// <param name='destination'> </param>
		/// <returns>A System.Boolean</returns>
		[return: MarshalAs(UnmanagedType.Bool)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool Write([MarshalAs(UnmanagedType.Interface)] nsIDOMNode nodeArg, [MarshalAs(UnmanagedType.Interface)] nsIDOMLSOutput destination);
		
		/// <summary>Member WriteToURI </summary>
		/// <param name='nodeArg'> </param>
		/// <param name='uri'> </param>
		/// <returns>A System.Boolean</returns>
		[return: MarshalAs(UnmanagedType.Bool)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool WriteToURI([MarshalAs(UnmanagedType.Interface)] nsIDOMNode nodeArg, [MarshalAs(UnmanagedType.LPStruct)] nsAString uri);
		
		/// <summary>Member WriteToString </summary>
		/// <param name='nodeArg'> </param>
		/// <returns>A nsAString</returns>
		[return: MarshalAs(UnmanagedType.LPStruct)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString WriteToString([MarshalAs(UnmanagedType.Interface)] nsIDOMNode nodeArg);
	}
}
