// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIPlaintextEditor.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIPlaintextEditor.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIPlaintextEditor </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("05d312ef-8914-494e-91c9-2be8ed7f8e29")]
	public interface nsIPlaintextEditor
	{
		
		/// <summary>Member GetTextLengthAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetTextLengthAttribute();
		
		/// <summary>Member GetMaxTextLengthAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetMaxTextLengthAttribute();
		
		/// <summary>Member SetMaxTextLengthAttribute </summary>
		/// <param name='aMaxTextLength'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMaxTextLengthAttribute(System.Int32  aMaxTextLength);
		
		/// <summary>Member GetWrapWidthAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetWrapWidthAttribute();
		
		/// <summary>Member SetWrapWidthAttribute </summary>
		/// <param name='aWrapWidth'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetWrapWidthAttribute(System.Int32  aWrapWidth);
		
		/// <summary>Member SetWrapColumn </summary>
		/// <param name='aWrapColumn'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetWrapColumn(System.Int32  aWrapColumn);
		
		/// <summary>Member GetNewlineHandlingAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetNewlineHandlingAttribute();
		
		/// <summary>Member SetNewlineHandlingAttribute </summary>
		/// <param name='aNewlineHandling'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetNewlineHandlingAttribute(System.Int32  aNewlineHandling);
		
		/// <summary>Member InsertText </summary>
		/// <param name='aStringToInsert'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InsertText([MarshalAs(UnmanagedType.LPStruct)] nsAString aStringToInsert);
		
		/// <summary>Member InsertLineBreak </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InsertLineBreak();
	}
}
