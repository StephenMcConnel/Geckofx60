// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIRecyclingAllocator.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIRecyclingAllocator.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIRecyclingAllocator </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("d064a04c-9cee-4319-be31-64d565bccba9")]
	public interface nsIRecyclingAllocator : nsIMemory
	{
		
		/// <summary>Member Alloc </summary>
		/// <param name='size'> </param>
		/// <returns>A System.IntPtr</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.IntPtr Alloc(System.UInt32  size);
		
		/// <summary>Member Realloc </summary>
		/// <param name='ptr'> </param>
		/// <param name='newSize'> </param>
		/// <returns>A System.IntPtr</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.IntPtr Realloc(System.IntPtr  ptr, System.UInt32  newSize);
		
		/// <summary>Member Free </summary>
		/// <param name='ptr'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Free(System.IntPtr  ptr);
		
		/// <summary>Member HeapMinimize </summary>
		/// <param name='immediate'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void HeapMinimize(System.Boolean  immediate);
		
		/// <summary>Member IsLowMemory </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool IsLowMemory();
		
		/// <summary>Member Init </summary>
		/// <param name='nblocks'> </param>
		/// <param name='recycleAfter'> </param>
		/// <param name='id'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Init(System.UInt32  nblocks, System.UInt32  recycleAfter, [MarshalAs(UnmanagedType.LPStr)] System.String  id);
	}
}
