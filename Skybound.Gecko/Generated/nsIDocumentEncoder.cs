// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIDocumentEncoder.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIDocumentEncoder.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIDocumentEncoderNodeFixup </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("c0da5b87-0ba7-4d7c-8cb3-fcb02af4253d")]
	public interface nsIDocumentEncoderNodeFixup
	{
		
		/// <summary>Member FixupNode </summary>
		/// <param name='aNode'> </param>
		/// <param name='aSerializeCloneKids'> </param>
		/// <returns>A nsIDOMNode</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMNode FixupNode([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aNode, out System.Boolean  aSerializeCloneKids);
	}
	
	/// <summary>nsIDocumentEncoder </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("7222bdf1-c2b9-41f1-a40a-a3d65283a95b")]
	public interface nsIDocumentEncoder
	{
		
		/// <summary>Member Init </summary>
		/// <param name='aDocument'> </param>
		/// <param name='aMimeType'> </param>
		/// <param name='aFlags'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Init([MarshalAs(UnmanagedType.Interface)] nsIDOMDocument  aDocument, [MarshalAs(UnmanagedType.LPStruct)] nsAString aMimeType, System.UInt32  aFlags);
		
		/// <summary>Member NativeInit </summary>
		/// <param name='aDocument'> </param>
		/// <param name='aMimeType'> </param>
		/// <param name='aFlags'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void NativeInit(System.IntPtr aDocument, [MarshalAs(UnmanagedType.LPStruct)] nsAString aMimeType, System.UInt32  aFlags);
		
		/// <summary>Member SetSelection </summary>
		/// <param name='aSelection'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetSelection([MarshalAs(UnmanagedType.Interface)] nsISelection  aSelection);
		
		/// <summary>Member SetRange </summary>
		/// <param name='aRange'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetRange([MarshalAs(UnmanagedType.Interface)] nsIDOMRange  aRange);
		
		/// <summary>Member SetNode </summary>
		/// <param name='aNode'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetNode([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aNode);
		
		/// <summary>Member SetContainerNode </summary>
		/// <param name='aContainer'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetContainerNode([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aContainer);
		
		/// <summary>Member SetNativeContainerNode </summary>
		/// <param name='aContainer'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetNativeContainerNode(System.IntPtr aContainer);
		
		/// <summary>Member SetCharset </summary>
		/// <param name='aCharset'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCharset([MarshalAs(UnmanagedType.LPStruct)] nsAString  aCharset);
		
		/// <summary>Member SetWrapColumn </summary>
		/// <param name='aWrapColumn'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetWrapColumn(System.UInt32  aWrapColumn);
		
		/// <summary>Member GetMimeTypeAttribute </summary>
		/// <param name='aMimeType'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMimeTypeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aMimeType);
		
		/// <summary>Member EncodeToStream </summary>
		/// <param name='aStream'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void EncodeToStream([MarshalAs(UnmanagedType.Interface)] nsIOutputStream  aStream);
		
		/// <summary>Member EncodeToString </summary>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString EncodeToString();
		
		/// <summary>Member EncodeToStringWithContext </summary>
		/// <param name='aContextString'> </param>
		/// <param name='aInfoString'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString EncodeToStringWithContext([MarshalAs(UnmanagedType.LPStruct)] nsAString aContextString, [MarshalAs(UnmanagedType.LPStruct)] nsAString aInfoString);
		
		/// <summary>Member SetNodeFixup </summary>
		/// <param name='aFixup'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetNodeFixup([MarshalAs(UnmanagedType.Interface)] nsIDocumentEncoderNodeFixup  aFixup);
	}
}
