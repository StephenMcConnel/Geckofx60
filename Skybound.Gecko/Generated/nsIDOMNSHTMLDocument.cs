// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMNSHTMLDocument.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIDOMNSHTMLDocument </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("95cd5ad4-ae8a-4f0e-b168-35e03d5e0b9a")]
	public interface nsIDOMNSHTMLDocument
	{
		
		/// <summary>Member GetWidthAttribute </summary>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetWidthAttribute();
		
		/// <summary>Member GetHeightAttribute </summary>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetHeightAttribute();
		
		/// <summary>Member GetAlinkColorAttribute </summary>
		/// <param name='aAlinkColor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetAlinkColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aAlinkColor);
		
		/// <summary>Member SetAlinkColorAttribute </summary>
		/// <param name='aAlinkColor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAlinkColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aAlinkColor);
		
		/// <summary>Member GetLinkColorAttribute </summary>
		/// <param name='aLinkColor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetLinkColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aLinkColor);
		
		/// <summary>Member SetLinkColorAttribute </summary>
		/// <param name='aLinkColor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetLinkColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aLinkColor);
		
		/// <summary>Member GetVlinkColorAttribute </summary>
		/// <param name='aVlinkColor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetVlinkColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aVlinkColor);
		
		/// <summary>Member SetVlinkColorAttribute </summary>
		/// <param name='aVlinkColor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetVlinkColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aVlinkColor);
		
		/// <summary>Member GetBgColorAttribute </summary>
		/// <param name='aBgColor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBgColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aBgColor);
		
		/// <summary>Member SetBgColorAttribute </summary>
		/// <param name='aBgColor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBgColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aBgColor);
		
		/// <summary>Member GetFgColorAttribute </summary>
		/// <param name='aFgColor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetFgColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aFgColor);
		
		/// <summary>Member SetFgColorAttribute </summary>
		/// <param name='aFgColor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFgColorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aFgColor);
		
		/// <summary>Member GetDomainAttribute </summary>
		/// <param name='aDomain'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetDomainAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aDomain);
		
		/// <summary>Member SetDomainAttribute </summary>
		/// <param name='aDomain'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetDomainAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aDomain);
		
		/// <summary>Member GetEmbedsAttribute </summary>
		/// <returns>A nsIDOMHTMLCollection</returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMHTMLCollection GetEmbedsAttribute();
		
		/// <summary>Member GetSelection </summary>
		/// <param name='retval'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetSelection([MarshalAs(UnmanagedType.LPStruct)] nsAString retval);
		
		/// <summary>
        /// document in session history; pass false for normal history handling.
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMDocument Open([MarshalAs(UnmanagedType.LPStruct)] nsACString aContentType, [MarshalAs(UnmanagedType.Bool)] bool aReplace);
		
		/// <summary>
        /// Scriptable version of clear().
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Clear();
		
		/// <summary>
        /// @deprecated These are old Netscape 4 methods. Do not use,
        /// the implementation is no-op.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CaptureEvents(int eventFlags);
		
		/// <summary>Member ReleaseEvents </summary>
		/// <param name='eventFlags'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ReleaseEvents(int eventFlags);
		
		/// <summary>Member RouteEvent </summary>
		/// <param name='evt'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RouteEvent([MarshalAs(UnmanagedType.Interface)] nsIDOMEvent evt);
		
		/// <summary>
        /// or "CSS1Compat" if we're in strict mode
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetCompatModeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aCompatMode);
		
		/// <summary>
        /// mapped to attribute embeds for NS4 compat
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMHTMLCollection GetPluginsAttribute();
		
		/// <summary>
        /// Midas additions
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetDesignModeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aDesignMode);
		
		/// <summary>
        /// Midas additions
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetDesignModeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aDesignMode);
		
		/// <summary>Member ExecCommand </summary>
		/// <param name='commandID'> </param>
		/// <param name='doShowUI'> </param>
		/// <param name='value'> </param>
		/// <returns>A System.Boolean</returns>
		[return: MarshalAs(UnmanagedType.Bool)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool ExecCommand([MarshalAs(UnmanagedType.LPStruct)] nsAString commandID, [MarshalAs(UnmanagedType.Bool)] bool doShowUI, [MarshalAs(UnmanagedType.LPStruct)] nsAString value);
		
		/// <summary>
        /// returns true if the help is being shown for command (false if not)
        /// </summary>
		[return: MarshalAs(UnmanagedType.Bool)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool ExecCommandShowHelp([MarshalAs(UnmanagedType.LPStruct)] nsAString commandID);
		
		/// <summary>
        /// returns true if the command is enabled (false otherwise)
        /// </summary>
		[return: MarshalAs(UnmanagedType.Bool)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool QueryCommandEnabled([MarshalAs(UnmanagedType.LPStruct)] nsAString commandID);
		
		/// <summary>
        /// returns true if the command is in a indeterminate state (false otherwise)
        /// </summary>
		[return: MarshalAs(UnmanagedType.Bool)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool QueryCommandIndeterm([MarshalAs(UnmanagedType.LPStruct)] nsAString commandID);
		
		/// <summary>
        /// returns true if the command has been executed (false otherwise)
        /// </summary>
		[return: MarshalAs(UnmanagedType.Bool)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool QueryCommandState([MarshalAs(UnmanagedType.LPStruct)] nsAString commandID);
		
		/// <summary>
        /// returns true if the command is supported on the current range
        /// </summary>
		[return: MarshalAs(UnmanagedType.Bool)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool QueryCommandSupported([MarshalAs(UnmanagedType.LPStruct)] nsAString commandID);
		
		/// <summary>
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void QueryCommandText([MarshalAs(UnmanagedType.LPStruct)] nsAString commandID, [MarshalAs(UnmanagedType.LPStruct)] nsAString retval);
		
		/// <summary>
        /// returns the current value of the document or current selection for command
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void QueryCommandValue([MarshalAs(UnmanagedType.LPStruct)] nsAString commandID, [MarshalAs(UnmanagedType.LPStruct)] nsAString retval);
		
		/// <summary>Member GetHeadAttribute </summary>
		/// <returns>A nsIDOMHTMLHeadElement</returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMHTMLHeadElement GetHeadAttribute();
	}
}
