// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsICookieManager2.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsICookieManager2.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsICookieManager2 </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("94628d1d-8b31-4baa-b474-9c872c440f90")]
	public interface nsICookieManager2 : nsICookieManager
	{
		
		/// <summary>Member RemoveAll </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void RemoveAll();
		
		/// <summary>Member GetEnumeratorAttribute </summary>
		/// <returns>A nsISimpleEnumerator </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsISimpleEnumerator  GetEnumeratorAttribute();
		
		/// <summary>Member Remove </summary>
		/// <param name='aHost'> </param>
		/// <param name='aName'> </param>
		/// <param name='aPath'> </param>
		/// <param name='aBlocked'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Remove([MarshalAs(UnmanagedType.LPStruct)] nsAString  aHost, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aName, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aPath, System.Boolean  aBlocked);
		
		/// <summary>Member Add </summary>
		/// <param name='aHost'> </param>
		/// <param name='aPath'> </param>
		/// <param name='aName'> </param>
		/// <param name='aValue'> </param>
		/// <param name='aIsSecure'> </param>
		/// <param name='aIsHttpOnly'> </param>
		/// <param name='aIsSession'> </param>
		/// <param name='aExpiry'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Add([MarshalAs(UnmanagedType.LPStruct)] nsAString  aHost, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aPath, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aName, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aValue, System.Boolean  aIsSecure, System.Boolean  aIsHttpOnly, System.Boolean  aIsSession, System.Int64  aExpiry);
		
		/// <summary>Member CookieExists </summary>
		/// <param name='aCookie'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool CookieExists([MarshalAs(UnmanagedType.Interface)] nsICookie2  aCookie);
		
		/// <summary>Member CountCookiesFromHost </summary>
		/// <param name='aHost'> </param>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint CountCookiesFromHost([MarshalAs(UnmanagedType.LPStruct)] nsAString  aHost);
		
		/// <summary>Member GetCookiesFromHost </summary>
		/// <param name='aHost'> </param>
		/// <returns>A nsISimpleEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISimpleEnumerator GetCookiesFromHost([MarshalAs(UnmanagedType.LPStruct)] nsAString  aHost);
		
		/// <summary>Member ImportCookies </summary>
		/// <param name='aCookieFile'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ImportCookies([MarshalAs(UnmanagedType.Interface)] nsIFile  aCookieFile);
	}
}
