// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsICommandLineRunner.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsICommandLineRunner.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsICommandLineRunner </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("c1f4cfbf-a41f-4628-aa6c-9fb914478af8")]
	public interface nsICommandLineRunner : nsICommandLine
	{
		
		/// <summary>Member GetLengthAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.Int32  GetLengthAttribute();
		
		/// <summary>Member GetArgument </summary>
		/// <param name='aIndex'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsAString GetArgument(System.Int32  aIndex);
		
		/// <summary>Member FindFlag </summary>
		/// <param name='aFlag'> </param>
		/// <param name='aCaseSensitive'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new int FindFlag([MarshalAs(UnmanagedType.LPStruct)] nsAString aFlag, System.Boolean  aCaseSensitive);
		
		/// <summary>Member RemoveArguments </summary>
		/// <param name='aStart'> </param>
		/// <param name='aEnd'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void RemoveArguments(System.Int32  aStart, System.Int32  aEnd);
		
		/// <summary>Member HandleFlag </summary>
		/// <param name='aFlag'> </param>
		/// <param name='aCaseSensitive'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool HandleFlag([MarshalAs(UnmanagedType.LPStruct)] nsAString aFlag, System.Boolean  aCaseSensitive);
		
		/// <summary>Member HandleFlagWithParam </summary>
		/// <param name='aFlag'> </param>
		/// <param name='aCaseSensitive'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsAString HandleFlagWithParam([MarshalAs(UnmanagedType.LPStruct)] nsAString aFlag, System.Boolean  aCaseSensitive);
		
		/// <summary>Member GetStateAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.UInt32  GetStateAttribute();
		
		/// <summary>Member GetPreventDefaultAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.Boolean  GetPreventDefaultAttribute();
		
		/// <summary>Member SetPreventDefaultAttribute </summary>
		/// <param name='aPreventDefault'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void SetPreventDefaultAttribute(System.Boolean  aPreventDefault);
		
		/// <summary>Member GetWorkingDirectoryAttribute </summary>
		/// <returns>A nsIFile </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIFile  GetWorkingDirectoryAttribute();
		
		/// <summary>Member GetWindowContextAttribute </summary>
		/// <returns>A nsIDOMWindow </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIDOMWindow  GetWindowContextAttribute();
		
		/// <summary>Member ResolveFile </summary>
		/// <param name='aArgument'> </param>
		/// <returns>A nsIFile</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIFile ResolveFile([MarshalAs(UnmanagedType.LPStruct)] nsAString aArgument);
		
		/// <summary>Member ResolveURI </summary>
		/// <param name='aArgument'> </param>
		/// <returns>A nsIURI</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIURI ResolveURI([MarshalAs(UnmanagedType.LPStruct)] nsAString aArgument);
		
		/// <summary>Member Init </summary>
		/// <param name='argc'> </param>
		/// <param name='argv'> </param>
		/// <param name='workingDir'> </param>
		/// <param name='state'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Init(System.Int32  argc, System.IntPtr argv, [MarshalAs(UnmanagedType.Interface)] nsIFile  workingDir, System.UInt32  state);
		
		/// <summary>Member SetWindowContext </summary>
		/// <param name='aWindow'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetWindowContext([MarshalAs(UnmanagedType.Interface)] nsIDOMWindow  aWindow);
		
		/// <summary>Member Run </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Run();
		
		/// <summary>Member GetHelpTextAttribute </summary>
		/// <param name='aHelpText'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetHelpTextAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAUTF8String  aHelpText);
	}
}
