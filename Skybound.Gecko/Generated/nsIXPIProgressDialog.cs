// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIXPIProgressDialog.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>
    /// Interface to display XPInstall download and install status.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("ce8f744e-d5a5-41b3-911f-0fee3008b64e")]
	public interface nsIXPIProgressDialog
	{
		
		/// <summary>
        /// basic info to control the install progress dialog. The dialog can
        /// go away any time after it has received the DIALOG_CLOSE state message
        /// but needs to accept messages until that time even if it is not visible.
        ///
        /// Normally for each install package the dialog will receive the download
        /// and install messages in START/DONE pairs, but in the case of a download
        /// error the dialog will be sent only the DOWNLOAD_START followed by an
        /// INSTALL_DONE message with the value nsInstall::DOWNLOAD_ERROR
        ///
        /// @param index     the package this message is about of those passed into
        /// openProgressDialog. ignored when state==DIALOG_CLOSE
        /// @param state     the kind of message
        /// @param value     final result when state==INSTALL_DONE, otherwise ignored
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnStateChange(uint index, short state, int value);
		
		/// <summary>
        /// download progress
        ///
        /// @param index     the package to which this refers
        /// @param value     number of bytes downloaded
        /// @param maxValue  the total size
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnProgress(uint index, uint value, uint maxValue);
	}
}
