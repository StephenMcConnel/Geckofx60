// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIMutableArray.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIMutableArray.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIMutableArray </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("af059da0-c85b-40ec-af07-ae4bfdc192cc")]
	public interface nsIMutableArray : nsIArray
	{
		
		/// <summary>Member GetLengthAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.UInt32  GetLengthAttribute();
		
		/// <summary>Member QueryElementAt </summary>
		/// <param name='index'> </param>
		/// <param name='uuid'> </param>
		/// <returns>A System.IntPtr </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.IntPtr  QueryElementAt(System.UInt32  index, ref System.Guid uuid);
		
		/// <summary>Member IndexOf </summary>
		/// <param name='startIndex'> </param>
		/// <param name='element'> </param>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new uint IndexOf(System.UInt32  startIndex, [MarshalAs(UnmanagedType.Interface)] nsISupports  element);
		
		/// <summary>Member Enumerate </summary>
		/// <returns>A nsISimpleEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsISimpleEnumerator Enumerate();
		
		/// <summary>Member AppendElement </summary>
		/// <param name='element'> </param>
		/// <param name='weak'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AppendElement([MarshalAs(UnmanagedType.Interface)] nsISupports  element, System.Boolean  weak);
		
		/// <summary>Member RemoveElementAt </summary>
		/// <param name='index'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveElementAt(System.UInt32  index);
		
		/// <summary>Member InsertElementAt </summary>
		/// <param name='element'> </param>
		/// <param name='index'> </param>
		/// <param name='weak'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InsertElementAt([MarshalAs(UnmanagedType.Interface)] nsISupports  element, System.UInt32  index, System.Boolean  weak);
		
		/// <summary>Member ReplaceElementAt </summary>
		/// <param name='element'> </param>
		/// <param name='index'> </param>
		/// <param name='weak'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ReplaceElementAt([MarshalAs(UnmanagedType.Interface)] nsISupports  element, System.UInt32  index, System.Boolean  weak);
		
		/// <summary>Member Clear </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Clear();
	}
}
