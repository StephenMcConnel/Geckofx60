// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIAccessibleText.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIAccessibleText.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIAccessibleText </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("0f4633b1-550c-4b50-8c04-0eb1005eef2f")]
	public interface nsIAccessibleText
	{
		
		/// <summary>Member GetCaretOffsetAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetCaretOffsetAttribute();
		
		/// <summary>Member SetCaretOffsetAttribute </summary>
		/// <param name='aCaretOffset'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCaretOffsetAttribute(System.Int32  aCaretOffset);
		
		/// <summary>Member GetCharacterCountAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetCharacterCountAttribute();
		
		/// <summary>Member GetSelectionCountAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetSelectionCountAttribute();
		
		/// <summary>Member GetText </summary>
		/// <param name='startOffset'> </param>
		/// <param name='endOffset'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetText(System.Int32  startOffset, System.Int32  endOffset);
		
		/// <summary>Member GetTextAfterOffset </summary>
		/// <param name='offset'> </param>
		/// <param name='boundaryType'> </param>
		/// <param name='startOffset'> </param>
		/// <param name='endOffset'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetTextAfterOffset(System.Int32  offset, System.IntPtr boundaryType, out System.Int32  startOffset, out System.Int32  endOffset);
		
		/// <summary>Member GetTextAtOffset </summary>
		/// <param name='offset'> </param>
		/// <param name='boundaryType'> </param>
		/// <param name='startOffset'> </param>
		/// <param name='endOffset'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetTextAtOffset(System.Int32  offset, System.IntPtr boundaryType, out System.Int32  startOffset, out System.Int32  endOffset);
		
		/// <summary>Member GetTextBeforeOffset </summary>
		/// <param name='offset'> </param>
		/// <param name='boundaryType'> </param>
		/// <param name='startOffset'> </param>
		/// <param name='endOffset'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetTextBeforeOffset(System.Int32  offset, System.IntPtr boundaryType, out System.Int32  startOffset, out System.Int32  endOffset);
		
		/// <summary>Member GetCharacterAtOffset </summary>
		/// <param name='offset'> </param>
		/// <returns>A System.Char</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		char GetCharacterAtOffset(System.Int32  offset);
		
		/// <summary>Member GetTextAttributes </summary>
		/// <param name='includeDefAttrs'> </param>
		/// <param name='offset'> </param>
		/// <param name='rangeStartOffset'> </param>
		/// <param name='rangeEndOffset'> </param>
		/// <returns>A nsIPersistentProperties</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIPersistentProperties GetTextAttributes(System.Boolean  includeDefAttrs, System.Int32  offset, out System.Int32  rangeStartOffset, out System.Int32  rangeEndOffset);
		
		/// <summary>Member GetDefaultTextAttributesAttribute </summary>
		/// <returns>A nsIPersistentProperties </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIPersistentProperties  GetDefaultTextAttributesAttribute();
		
		/// <summary>Member GetCharacterExtents </summary>
		/// <param name='offset'> </param>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		/// <param name='coordType'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetCharacterExtents(System.Int32  offset, out System.Int32  x, out System.Int32  y, out System.Int32  width, out System.Int32  height, System.UInt32  coordType);
		
		/// <summary>Member GetRangeExtents </summary>
		/// <param name='startOffset'> </param>
		/// <param name='endOffset'> </param>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		/// <param name='coordType'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetRangeExtents(System.Int32  startOffset, System.Int32  endOffset, out System.Int32  x, out System.Int32  y, out System.Int32  width, out System.Int32  height, System.UInt32  coordType);
		
		/// <summary>Member GetOffsetAtPoint </summary>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='coordType'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetOffsetAtPoint(System.Int32  x, System.Int32  y, System.UInt32  coordType);
		
		/// <summary>Member GetSelectionBounds </summary>
		/// <param name='selectionNum'> </param>
		/// <param name='startOffset'> </param>
		/// <param name='endOffset'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetSelectionBounds(System.Int32  selectionNum, out System.Int32  startOffset, out System.Int32  endOffset);
		
		/// <summary>Member SetSelectionBounds </summary>
		/// <param name='selectionNum'> </param>
		/// <param name='startOffset'> </param>
		/// <param name='endOffset'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetSelectionBounds(System.Int32  selectionNum, System.Int32  startOffset, System.Int32  endOffset);
		
		/// <summary>Member AddSelection </summary>
		/// <param name='startOffset'> </param>
		/// <param name='endOffset'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AddSelection(System.Int32  startOffset, System.Int32  endOffset);
		
		/// <summary>Member RemoveSelection </summary>
		/// <param name='selectionNum'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveSelection(System.Int32  selectionNum);
		
		/// <summary>Member ScrollSubstringTo </summary>
		/// <param name='startIndex'> </param>
		/// <param name='endIndex'> </param>
		/// <param name='scrollType'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ScrollSubstringTo(System.Int32  startIndex, System.Int32  endIndex, System.UInt32  scrollType);
		
		/// <summary>Member ScrollSubstringToPoint </summary>
		/// <param name='startIndex'> </param>
		/// <param name='endIndex'> </param>
		/// <param name='coordinateType'> </param>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ScrollSubstringToPoint(System.Int32  startIndex, System.Int32  endIndex, System.UInt32  coordinateType, System.Int32  x, System.Int32  y);
	}
}
