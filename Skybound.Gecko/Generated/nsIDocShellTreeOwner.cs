// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIDocShellTreeOwner.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIDocShellTreeOwner.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIDocShellTreeOwner </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("bc0eb30e-656e-491e-a7ae-7f460b660c8d")]
	public interface nsIDocShellTreeOwner
	{
		
		/// <summary>Member FindItemWithName </summary>
		/// <param name='name'> </param>
		/// <param name='aRequestor'> </param>
		/// <param name='aOriginalRequestor'> </param>
		/// <returns>A nsIDocShellTreeItem</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDocShellTreeItem FindItemWithName([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string name, [MarshalAs(UnmanagedType.Interface)] nsIDocShellTreeItem  aRequestor, [MarshalAs(UnmanagedType.Interface)] nsIDocShellTreeItem  aOriginalRequestor);
		
		/// <summary>Member ContentShellAdded </summary>
		/// <param name='aContentShell'> </param>
		/// <param name='aPrimary'> </param>
		/// <param name='aTargetable'> </param>
		/// <param name='aID'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ContentShellAdded([MarshalAs(UnmanagedType.Interface)] nsIDocShellTreeItem  aContentShell, System.Boolean  aPrimary, System.Boolean  aTargetable, [MarshalAs(UnmanagedType.LPStruct)] nsAString aID);
		
		/// <summary>Member ContentShellRemoved </summary>
		/// <param name='aContentShell'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ContentShellRemoved([MarshalAs(UnmanagedType.Interface)] nsIDocShellTreeItem  aContentShell);
		
		/// <summary>Member GetPrimaryContentShellAttribute </summary>
		/// <returns>A nsIDocShellTreeItem </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDocShellTreeItem  GetPrimaryContentShellAttribute();
		
		/// <summary>Member SizeShellTo </summary>
		/// <param name='shell'> </param>
		/// <param name='cx'> </param>
		/// <param name='cy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SizeShellTo([MarshalAs(UnmanagedType.Interface)] nsIDocShellTreeItem  shell, System.Int32  cx, System.Int32  cy);
		
		/// <summary>Member SetPersistence </summary>
		/// <param name='aPersistPosition'> </param>
		/// <param name='aPersistSize'> </param>
		/// <param name='aPersistSizeMode'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPersistence(System.Boolean  aPersistPosition, System.Boolean  aPersistSize, System.Boolean  aPersistSizeMode);
		
		/// <summary>Member GetPersistence </summary>
		/// <param name='aPersistPosition'> </param>
		/// <param name='aPersistSize'> </param>
		/// <param name='aPersistSizeMode'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetPersistence(out System.Boolean  aPersistPosition, out System.Boolean  aPersistSize, out System.Boolean  aPersistSizeMode);
	}
}
