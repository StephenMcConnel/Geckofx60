// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIFaviconService.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIFaviconService.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIFaviconService </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("2cf188f4-3c96-4bca-b668-36b25aaf7c1d")]
	public interface nsIFaviconService
	{
		
		/// <summary>Member SetFaviconUrlForPage </summary>
		/// <param name='aPageURI'> </param>
		/// <param name='aFaviconURI'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFaviconUrlForPage([MarshalAs(UnmanagedType.Interface)] nsIURI  aPageURI, [MarshalAs(UnmanagedType.Interface)] nsIURI  aFaviconURI);
		
		/// <summary>Member SetAndLoadFaviconForPage </summary>
		/// <param name='aPageURI'> </param>
		/// <param name='aFaviconURI'> </param>
		/// <param name='aForceReload'> </param>
		/// <param name='aCallback'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAndLoadFaviconForPage([MarshalAs(UnmanagedType.Interface)] nsIURI  aPageURI, [MarshalAs(UnmanagedType.Interface)] nsIURI  aFaviconURI, System.Boolean  aForceReload, [MarshalAs(UnmanagedType.Interface)] nsIFaviconDataCallback  aCallback);
		
		/// <summary>Member SetFaviconData </summary>
		/// <param name='aFaviconURI'> </param>
		/// <param name='aData'> </param>
		/// <param name='aDataLen'> </param>
		/// <param name='aMimeType'> </param>
		/// <param name='aExpiration'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFaviconData([MarshalAs(UnmanagedType.Interface)] nsIURI  aFaviconURI, System.IntPtr  aData, System.UInt32  aDataLen, [MarshalAs(UnmanagedType.LPStruct)] nsAUTF8String  aMimeType, System.UInt32  aExpiration);
		
		/// <summary>Member SetFaviconDataFromDataURL </summary>
		/// <param name='aFaviconURI'> </param>
		/// <param name='aDataURL'> </param>
		/// <param name='aExpiration'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFaviconDataFromDataURL([MarshalAs(UnmanagedType.Interface)] nsIURI  aFaviconURI, [MarshalAs(UnmanagedType.LPStruct)] nsAString aDataURL, System.UInt32  aExpiration);
		
		/// <summary>Member GetFaviconData </summary>
		/// <param name='aFaviconURI'> </param>
		/// <param name='aMimeType'> </param>
		/// <param name='aDataLen'> </param>
		/// <returns>A System.IntPtr </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr  GetFaviconData([MarshalAs(UnmanagedType.Interface)] nsIURI  aFaviconURI, [MarshalAs(UnmanagedType.LPStruct)] nsAUTF8String  aMimeType, out System.UInt32  aDataLen);
		
		/// <summary>Member GetFaviconDataAsDataURL </summary>
		/// <param name='aFaviconURI'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetFaviconDataAsDataURL([MarshalAs(UnmanagedType.Interface)] nsIURI  aFaviconURI);
		
		/// <summary>Member GetFaviconForPage </summary>
		/// <param name='aPageURI'> </param>
		/// <returns>A nsIURI</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIURI GetFaviconForPage([MarshalAs(UnmanagedType.Interface)] nsIURI  aPageURI);
		
		/// <summary>Member GetFaviconImageForPage </summary>
		/// <param name='aPageURI'> </param>
		/// <returns>A nsIURI</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIURI GetFaviconImageForPage([MarshalAs(UnmanagedType.Interface)] nsIURI  aPageURI);
		
		/// <summary>Member GetFaviconLinkForIcon </summary>
		/// <param name='aFaviconURI'> </param>
		/// <returns>A nsIURI</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIURI GetFaviconLinkForIcon([MarshalAs(UnmanagedType.Interface)] nsIURI  aFaviconURI);
		
		/// <summary>Member ExpireAllFavicons </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ExpireAllFavicons();
		
		/// <summary>Member AddFailedFavicon </summary>
		/// <param name='aFaviconURI'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AddFailedFavicon([MarshalAs(UnmanagedType.Interface)] nsIURI  aFaviconURI);
		
		/// <summary>Member RemoveFailedFavicon </summary>
		/// <param name='aFaviconURI'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveFailedFavicon([MarshalAs(UnmanagedType.Interface)] nsIURI  aFaviconURI);
		
		/// <summary>Member IsFailedFavicon </summary>
		/// <param name='aFaviconURI'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsFailedFavicon([MarshalAs(UnmanagedType.Interface)] nsIURI  aFaviconURI);
		
		/// <summary>Member GetDefaultFaviconAttribute </summary>
		/// <returns>A nsIURI </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIURI  GetDefaultFaviconAttribute();
	}
	
	/// <summary>nsIFaviconDataCallback </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("22ebd780-f4ab-11de-8a39-0800200c9a66")]
	public interface nsIFaviconDataCallback
	{
		
		/// <summary>Member OnFaviconDataAvailable </summary>
		/// <param name='aURI'> </param>
		/// <param name='aDataLen'> </param>
		/// <param name='aData'> </param>
		/// <param name='aMimeType'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnFaviconDataAvailable([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI, System.UInt32  aDataLen, System.IntPtr  aData, [MarshalAs(UnmanagedType.LPStruct)] nsAUTF8String  aMimeType);
	}
}
