// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIMIMEService.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIMIMEService.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIMIMEService </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("5b3675a1-02db-4f8f-a560-b34736635f47")]
	public interface nsIMIMEService
	{
		
		/// <summary>Member GetFromTypeAndExtension </summary>
		/// <param name='aMIMEType'> </param>
		/// <param name='aFileExt'> </param>
		/// <returns>A nsIMIMEInfo</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIMIMEInfo GetFromTypeAndExtension([MarshalAs(UnmanagedType.LPStruct)] nsAString  aMIMEType, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aFileExt);
		
		/// <summary>Member GetTypeFromExtension </summary>
		/// <param name='aFileExt'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetTypeFromExtension([MarshalAs(UnmanagedType.LPStruct)] nsAString  aFileExt);
		
		/// <summary>Member GetTypeFromURI </summary>
		/// <param name='aURI'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetTypeFromURI([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member GetTypeFromFile </summary>
		/// <param name='aFile'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetTypeFromFile([MarshalAs(UnmanagedType.Interface)] nsIFile  aFile);
		
		/// <summary>Member GetPrimaryExtension </summary>
		/// <param name='aMIMEType'> </param>
		/// <param name='aFileExt'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetPrimaryExtension([MarshalAs(UnmanagedType.LPStruct)] nsAString  aMIMEType, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aFileExt);
	}
}
