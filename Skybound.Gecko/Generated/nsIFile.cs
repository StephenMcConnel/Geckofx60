// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIFile.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIFile.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIFile </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("c8c0a080-0868-11d3-915f-d9d889d48e3c")]
	public interface nsIFile
	{
		
		/// <summary>Member Append </summary>
		/// <param name='node'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Append([MarshalAs(UnmanagedType.LPStruct)] nsAString node);
		
		/// <summary>Member AppendNative </summary>
		/// <param name='node'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AppendNative([MarshalAs(UnmanagedType.LPStruct)] nsAString  node);
		
		/// <summary>Member Normalize </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Normalize();
		
		/// <summary>Member Create </summary>
		/// <param name='type'> </param>
		/// <param name='permissions'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Create(System.UInt32  type, System.UInt32  permissions);
		
		/// <summary>Member GetLeafNameAttribute </summary>
		/// <param name='aLeafName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetLeafNameAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aLeafName);
		
		/// <summary>Member SetLeafNameAttribute </summary>
		/// <param name='aLeafName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetLeafNameAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aLeafName);
		
		/// <summary>Member GetNativeLeafNameAttribute </summary>
		/// <param name='aNativeLeafName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNativeLeafNameAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aNativeLeafName);
		
		/// <summary>Member SetNativeLeafNameAttribute </summary>
		/// <param name='aNativeLeafName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetNativeLeafNameAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aNativeLeafName);
		
		/// <summary>Member CopyTo </summary>
		/// <param name='newParentDir'> </param>
		/// <param name='newName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CopyTo([MarshalAs(UnmanagedType.Interface)] nsIFile  newParentDir, [MarshalAs(UnmanagedType.LPStruct)] nsAString newName);
		
		/// <summary>Member CopyToNative </summary>
		/// <param name='newParentDir'> </param>
		/// <param name='newName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CopyToNative([MarshalAs(UnmanagedType.Interface)] nsIFile  newParentDir, [MarshalAs(UnmanagedType.LPStruct)] nsAString  newName);
		
		/// <summary>Member CopyToFollowingLinks </summary>
		/// <param name='newParentDir'> </param>
		/// <param name='newName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CopyToFollowingLinks([MarshalAs(UnmanagedType.Interface)] nsIFile  newParentDir, [MarshalAs(UnmanagedType.LPStruct)] nsAString newName);
		
		/// <summary>Member CopyToFollowingLinksNative </summary>
		/// <param name='newParentDir'> </param>
		/// <param name='newName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CopyToFollowingLinksNative([MarshalAs(UnmanagedType.Interface)] nsIFile  newParentDir, [MarshalAs(UnmanagedType.LPStruct)] nsAString  newName);
		
		/// <summary>Member MoveTo </summary>
		/// <param name='newParentDir'> </param>
		/// <param name='newName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void MoveTo([MarshalAs(UnmanagedType.Interface)] nsIFile  newParentDir, [MarshalAs(UnmanagedType.LPStruct)] nsAString newName);
		
		/// <summary>Member MoveToNative </summary>
		/// <param name='newParentDir'> </param>
		/// <param name='newName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void MoveToNative([MarshalAs(UnmanagedType.Interface)] nsIFile  newParentDir, [MarshalAs(UnmanagedType.LPStruct)] nsAString  newName);
		
		/// <summary>Member Remove </summary>
		/// <param name='recursive'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Remove(System.Boolean  recursive);
		
		/// <summary>Member GetPermissionsAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetPermissionsAttribute();
		
		/// <summary>Member SetPermissionsAttribute </summary>
		/// <param name='aPermissions'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPermissionsAttribute(System.UInt32  aPermissions);
		
		/// <summary>Member GetPermissionsOfLinkAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetPermissionsOfLinkAttribute();
		
		/// <summary>Member SetPermissionsOfLinkAttribute </summary>
		/// <param name='aPermissionsOfLink'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPermissionsOfLinkAttribute(System.UInt32  aPermissionsOfLink);
		
		/// <summary>Member GetLastModifiedTimeAttribute </summary>
		/// <returns>A System.Int64 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int64  GetLastModifiedTimeAttribute();
		
		/// <summary>Member SetLastModifiedTimeAttribute </summary>
		/// <param name='aLastModifiedTime'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetLastModifiedTimeAttribute(System.Int64  aLastModifiedTime);
		
		/// <summary>Member GetLastModifiedTimeOfLinkAttribute </summary>
		/// <returns>A System.Int64 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int64  GetLastModifiedTimeOfLinkAttribute();
		
		/// <summary>Member SetLastModifiedTimeOfLinkAttribute </summary>
		/// <param name='aLastModifiedTimeOfLink'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetLastModifiedTimeOfLinkAttribute(System.Int64  aLastModifiedTimeOfLink);
		
		/// <summary>Member GetFileSizeAttribute </summary>
		/// <returns>A System.Int64 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int64  GetFileSizeAttribute();
		
		/// <summary>Member SetFileSizeAttribute </summary>
		/// <param name='aFileSize'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFileSizeAttribute(System.Int64  aFileSize);
		
		/// <summary>Member GetFileSizeOfLinkAttribute </summary>
		/// <returns>A System.Int64 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int64  GetFileSizeOfLinkAttribute();
		
		/// <summary>Member GetTargetAttribute </summary>
		/// <param name='aTarget'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetTargetAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aTarget);
		
		/// <summary>Member GetNativeTargetAttribute </summary>
		/// <param name='aNativeTarget'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNativeTargetAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aNativeTarget);
		
		/// <summary>Member GetPathAttribute </summary>
		/// <param name='aPath'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetPathAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aPath);
		
		/// <summary>Member GetNativePathAttribute </summary>
		/// <param name='aNativePath'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNativePathAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aNativePath);
		
		/// <summary>Member Exists </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool Exists();
		
		/// <summary>Member IsWritable </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsWritable();
		
		/// <summary>Member IsReadable </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsReadable();
		
		/// <summary>Member IsExecutable </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsExecutable();
		
		/// <summary>Member IsHidden </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsHidden();
		
		/// <summary>Member IsDirectory </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsDirectory();
		
		/// <summary>Member IsFile </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsFile();
		
		/// <summary>Member IsSymlink </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsSymlink();
		
		/// <summary>Member IsSpecial </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsSpecial();
		
		/// <summary>Member CreateUnique </summary>
		/// <param name='type'> </param>
		/// <param name='permissions'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CreateUnique(System.UInt32  type, System.UInt32  permissions);
		
		/// <summary>Member Clone </summary>
		/// <returns>A nsIFile</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIFile Clone();
		
		/// <summary>Member Equals </summary>
		/// <param name='inFile'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool Equals([MarshalAs(UnmanagedType.Interface)] nsIFile  inFile);
		
		/// <summary>Member Contains </summary>
		/// <param name='inFile'> </param>
		/// <param name='recur'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool Contains([MarshalAs(UnmanagedType.Interface)] nsIFile  inFile, System.Boolean  recur);
		
		/// <summary>Member GetParentAttribute </summary>
		/// <returns>A nsIFile </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIFile  GetParentAttribute();
		
		/// <summary>Member GetDirectoryEntriesAttribute </summary>
		/// <returns>A nsISimpleEnumerator </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISimpleEnumerator  GetDirectoryEntriesAttribute();
	}
}
