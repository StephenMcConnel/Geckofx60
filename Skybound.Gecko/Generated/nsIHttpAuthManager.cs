// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIHttpAuthManager.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIHttpAuthManager.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIHttpAuthManager </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("7ce8e9d1-8b4b-4883-a307-66fe12a50153")]
	public interface nsIHttpAuthManager
	{
		
		/// <summary>Member GetAuthIdentity </summary>
		/// <param name='aScheme'> </param>
		/// <param name='aHost'> </param>
		/// <param name='aPort'> </param>
		/// <param name='aAuthType'> </param>
		/// <param name='aRealm'> </param>
		/// <param name='aPath'> </param>
		/// <param name='aUserDomain'> </param>
		/// <param name='aUserName'> </param>
		/// <param name='aUserPassword'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetAuthIdentity([MarshalAs(UnmanagedType.LPStruct)] nsAString  aScheme, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aHost, System.Int32  aPort, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aAuthType, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aRealm, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aPath, [MarshalAs(UnmanagedType.LPStruct)] nsAString aUserDomain, [MarshalAs(UnmanagedType.LPStruct)] nsAString aUserName, [MarshalAs(UnmanagedType.LPStruct)] nsAString aUserPassword);
		
		/// <summary>Member SetAuthIdentity </summary>
		/// <param name='aScheme'> </param>
		/// <param name='aHost'> </param>
		/// <param name='aPort'> </param>
		/// <param name='aAuthType'> </param>
		/// <param name='aRealm'> </param>
		/// <param name='aPath'> </param>
		/// <param name='aUserDomain'> </param>
		/// <param name='aUserName'> </param>
		/// <param name='aUserPassword'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAuthIdentity([MarshalAs(UnmanagedType.LPStruct)] nsAString  aScheme, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aHost, System.Int32  aPort, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aAuthType, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aRealm, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aPath, [MarshalAs(UnmanagedType.LPStruct)] nsAString aUserDomain, [MarshalAs(UnmanagedType.LPStruct)] nsAString aUserName, [MarshalAs(UnmanagedType.LPStruct)] nsAString aUserPassword);
		
		/// <summary>Member ClearAll </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ClearAll();
	}
}
