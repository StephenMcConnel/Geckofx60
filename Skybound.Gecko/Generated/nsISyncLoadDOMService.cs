// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsISyncLoadDOMService.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>
    /// The nsISyncDOMLoadService interface can be used to synchronously load
    /// a document.
    ///
    /// @deprecated use XMLHttpRequest instead
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("8095998d-ae1c-4cfa-9b43-0973e5d77eb0")]
	public interface nsISyncLoadDOMService
	{
		
		/// <summary>
        /// Synchronously load the document from the specified channel.
        ///
        /// @param aChannel   The channel to load the document from.
        /// @param aLoaderPrincipal Principal of loading document. For security
        /// checks null if no securitychecks should be done
        ///
        /// @returns The document loaded from the URI.
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMDocument LoadDocument([MarshalAs(UnmanagedType.Interface)] nsIChannel aChannel, [MarshalAs(UnmanagedType.Interface)] nsIPrincipal aLoaderPrincipal);
		
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMDocument LoadDocumentAsXML([MarshalAs(UnmanagedType.Interface)] nsIChannel aChannel, [MarshalAs(UnmanagedType.Interface)] nsIPrincipal aLoaderPrincipal);
		
		/// <summary>
        /// Synchronously load an XML document from the specified
        /// channel. The channel must be possible to open synchronously.
        ///
        /// @param aChannel   The channel to load the document from.
        /// @param aLoaderPrincipal Principal of loading document. For security
        /// checks null if no securitychecks should be done
        ///
        /// @returns The document loaded from the URI.
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMDocument LoadLocalDocument([MarshalAs(UnmanagedType.Interface)] nsIChannel aChannel, [MarshalAs(UnmanagedType.Interface)] nsIPrincipal aLoaderPrincipal);
	}
}
