// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsISelectionPrivate.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsISelectionPrivate.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsISelectionPrivate </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("98552206-ad7a-4d2d-8ce3-b6fa2389298b")]
	public interface nsISelectionPrivate
	{
		
		/// <summary>Member GetInterlinePositionAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetInterlinePositionAttribute();
		
		/// <summary>Member SetInterlinePositionAttribute </summary>
		/// <param name='aInterlinePosition'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetInterlinePositionAttribute(System.Boolean  aInterlinePosition);
		
		/// <summary>Member StartBatchChanges </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void StartBatchChanges();
		
		/// <summary>Member EndBatchChanges </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void EndBatchChanges();
		
		/// <summary>Member GetEnumerator </summary>
		/// <returns>A nsIEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIEnumerator GetEnumerator();
		
		/// <summary>Member ToStringWithFormat </summary>
		/// <param name='formatType'> </param>
		/// <param name='flags'> </param>
		/// <param name='wrapColumn'> </param>
		/// <returns>A System.String</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		string ToStringWithFormat([MarshalAs(UnmanagedType.LPStr)] System.String  formatType, System.UInt32  flags, System.Int32  wrapColumn);
		
		/// <summary>Member AddSelectionListener </summary>
		/// <param name='newListener'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AddSelectionListener([MarshalAs(UnmanagedType.Interface)] nsISelectionListener  newListener);
		
		/// <summary>Member RemoveSelectionListener </summary>
		/// <param name='listenerToRemove'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveSelectionListener([MarshalAs(UnmanagedType.Interface)] nsISelectionListener  listenerToRemove);
		
		/// <summary>Member GetTableSelectionType </summary>
		/// <param name='range'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetTableSelectionType([MarshalAs(UnmanagedType.Interface)] nsIDOMRange  range);
		
		/// <summary>Member SetPresShell </summary>
		/// <param name='aPresShell'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPresShell(System.IntPtr aPresShell);
		
		/// <summary>Member GetCanCacheFrameOffsetAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetCanCacheFrameOffsetAttribute();
		
		/// <summary>Member SetCanCacheFrameOffsetAttribute </summary>
		/// <param name='aCanCacheFrameOffset'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCanCacheFrameOffsetAttribute(System.Boolean  aCanCacheFrameOffset);
		
		/// <summary>Member GetCachedFrameOffset </summary>
		/// <param name='aFrame'> </param>
		/// <param name='inOffset'> </param>
		/// <param name='aPoint'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetCachedFrameOffset(System.IntPtr aFrame, System.Int32  inOffset, System.IntPtr aPoint);
		
		/// <summary>Member GetFrameSelection </summary>
		/// <returns>A System.IntPtr</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr GetFrameSelection();
		
		/// <summary>Member SetAncestorLimiter </summary>
		/// <param name='aContent'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAncestorLimiter(System.IntPtr aContent);
		
		/// <summary>Member SetTextRangeStyle </summary>
		/// <param name='range'> </param>
		/// <param name='textRangeStyle'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetTextRangeStyle([MarshalAs(UnmanagedType.Interface)] nsIDOMRange  range, System.IntPtr textRangeStyle);
	}
}
