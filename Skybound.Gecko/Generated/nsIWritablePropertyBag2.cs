// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIWritablePropertyBag2.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIWritablePropertyBag2.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIWritablePropertyBag2 </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("9cfd1587-360e-4957-a58f-4c2b1c5e7ed9")]
	public interface nsIWritablePropertyBag2 : nsIPropertyBag2
	{
		
		/// <summary>Member GetEnumeratorAttribute </summary>
		/// <returns>A nsISimpleEnumerator </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsISimpleEnumerator  GetEnumeratorAttribute();
		
		/// <summary>Member GetProperty </summary>
		/// <param name='name'> </param>
		/// <returns>A nsIVariant</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIVariant GetProperty([MarshalAs(UnmanagedType.LPStruct)] nsAString name);
		
		/// <summary>Member GetPropertyAsInt32 </summary>
		/// <param name='prop'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new int GetPropertyAsInt32([MarshalAs(UnmanagedType.LPStruct)] nsAString prop);
		
		/// <summary>Member GetPropertyAsUint32 </summary>
		/// <param name='prop'> </param>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new uint GetPropertyAsUint32([MarshalAs(UnmanagedType.LPStruct)] nsAString prop);
		
		/// <summary>Member GetPropertyAsInt64 </summary>
		/// <param name='prop'> </param>
		/// <returns>A System.Int64</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new long GetPropertyAsInt64([MarshalAs(UnmanagedType.LPStruct)] nsAString prop);
		
		/// <summary>Member GetPropertyAsUint64 </summary>
		/// <param name='prop'> </param>
		/// <returns>A System.UInt64</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new ulong GetPropertyAsUint64([MarshalAs(UnmanagedType.LPStruct)] nsAString prop);
		
		/// <summary>Member GetPropertyAsDouble </summary>
		/// <param name='prop'> </param>
		/// <returns>A System.Double</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new double GetPropertyAsDouble([MarshalAs(UnmanagedType.LPStruct)] nsAString prop);
		
		/// <summary>Member GetPropertyAsAString </summary>
		/// <param name='prop'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsAString GetPropertyAsAString([MarshalAs(UnmanagedType.LPStruct)] nsAString prop);
		
		/// <summary>Member GetPropertyAsACString </summary>
		/// <param name='prop'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsAString GetPropertyAsACString([MarshalAs(UnmanagedType.LPStruct)] nsAString prop);
		
		/// <summary>Member GetPropertyAsAUTF8String </summary>
		/// <param name='prop'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsAString GetPropertyAsAUTF8String([MarshalAs(UnmanagedType.LPStruct)] nsAString prop);
		
		/// <summary>Member GetPropertyAsBool </summary>
		/// <param name='prop'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool GetPropertyAsBool([MarshalAs(UnmanagedType.LPStruct)] nsAString prop);
		
		/// <summary>Member GetPropertyAsInterface </summary>
		/// <param name='prop'> </param>
		/// <param name='iid'> </param>
		/// <returns>A System.IntPtr </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.IntPtr  GetPropertyAsInterface([MarshalAs(UnmanagedType.LPStruct)] nsAString prop, ref System.Guid iid);
		
		/// <summary>Member Get </summary>
		/// <param name='prop'> </param>
		/// <returns>A nsIVariant</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIVariant Get([MarshalAs(UnmanagedType.LPStruct)] nsAString prop);
		
		/// <summary>Member HasKey </summary>
		/// <param name='prop'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool HasKey([MarshalAs(UnmanagedType.LPStruct)] nsAString prop);
		
		/// <summary>Member SetPropertyAsInt32 </summary>
		/// <param name='prop'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPropertyAsInt32([MarshalAs(UnmanagedType.LPStruct)] nsAString prop, System.Int32  value);
		
		/// <summary>Member SetPropertyAsUint32 </summary>
		/// <param name='prop'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPropertyAsUint32([MarshalAs(UnmanagedType.LPStruct)] nsAString prop, System.UInt32  value);
		
		/// <summary>Member SetPropertyAsInt64 </summary>
		/// <param name='prop'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPropertyAsInt64([MarshalAs(UnmanagedType.LPStruct)] nsAString prop, System.Int64  value);
		
		/// <summary>Member SetPropertyAsUint64 </summary>
		/// <param name='prop'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPropertyAsUint64([MarshalAs(UnmanagedType.LPStruct)] nsAString prop, System.UInt64  value);
		
		/// <summary>Member SetPropertyAsDouble </summary>
		/// <param name='prop'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPropertyAsDouble([MarshalAs(UnmanagedType.LPStruct)] nsAString prop, double value);
		
		/// <summary>Member SetPropertyAsAString </summary>
		/// <param name='prop'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPropertyAsAString([MarshalAs(UnmanagedType.LPStruct)] nsAString prop, [MarshalAs(UnmanagedType.LPStruct)] nsAString value);
		
		/// <summary>Member SetPropertyAsACString </summary>
		/// <param name='prop'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPropertyAsACString([MarshalAs(UnmanagedType.LPStruct)] nsAString prop, [MarshalAs(UnmanagedType.LPStruct)] nsAString  value);
		
		/// <summary>Member SetPropertyAsAUTF8String </summary>
		/// <param name='prop'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPropertyAsAUTF8String([MarshalAs(UnmanagedType.LPStruct)] nsAString prop, [MarshalAs(UnmanagedType.LPStruct)] nsAString  value);
		
		/// <summary>Member SetPropertyAsBool </summary>
		/// <param name='prop'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPropertyAsBool([MarshalAs(UnmanagedType.LPStruct)] nsAString prop, System.Boolean  value);
		
		/// <summary>Member SetPropertyAsInterface </summary>
		/// <param name='prop'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPropertyAsInterface([MarshalAs(UnmanagedType.LPStruct)] nsAString prop, [MarshalAs(UnmanagedType.Interface)] nsISupports  value);
	}
}
