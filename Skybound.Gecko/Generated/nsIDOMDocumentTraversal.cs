// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIDOMDocumentTraversal.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMDocumentTraversal.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIDOMDocumentTraversal </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("13f236c0-47f8-11d5-b6a3-009027446e84")]
	public interface nsIDOMDocumentTraversal
	{
		
		/// <summary>Member CreateNodeIterator </summary>
		/// <param name='root'> </param>
		/// <param name='whatToShow'> </param>
		/// <param name='filter'> </param>
		/// <param name='entityReferenceExpansion'> </param>
		/// <returns>A nsIDOMNodeIterator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMNodeIterator CreateNodeIterator([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  root, System.UInt32  whatToShow, [MarshalAs(UnmanagedType.Interface)] nsIDOMNodeFilter  filter, System.Boolean  entityReferenceExpansion);
		
		/// <summary>Member CreateTreeWalker </summary>
		/// <param name='root'> </param>
		/// <param name='whatToShow'> </param>
		/// <param name='filter'> </param>
		/// <param name='entityReferenceExpansion'> </param>
		/// <returns>A nsIDOMTreeWalker</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMTreeWalker CreateTreeWalker([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  root, System.UInt32  whatToShow, [MarshalAs(UnmanagedType.Interface)] nsIDOMNodeFilter  filter, System.Boolean  entityReferenceExpansion);
	}
}
