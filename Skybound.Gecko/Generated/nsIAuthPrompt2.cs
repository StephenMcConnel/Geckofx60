// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIAuthPrompt2.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIAuthPrompt2.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIAuthPrompt2 </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("651395EB-8612-4876-8AC0-A88D4DCE9E1E")]
	public interface nsIAuthPrompt2
	{
		
		/// <summary>Member PromptAuth </summary>
		/// <param name='aChannel'> </param>
		/// <param name='level'> </param>
		/// <param name='authInfo'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool PromptAuth([MarshalAs(UnmanagedType.Interface)] nsIChannel  aChannel, System.UInt32  level, [MarshalAs(UnmanagedType.Interface)] nsIAuthInformation  authInfo);
		
		/// <summary>Member AsyncPromptAuth </summary>
		/// <param name='aChannel'> </param>
		/// <param name='aCallback'> </param>
		/// <param name='aContext'> </param>
		/// <param name='level'> </param>
		/// <param name='authInfo'> </param>
		/// <returns>A nsICancelable</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsICancelable AsyncPromptAuth([MarshalAs(UnmanagedType.Interface)] nsIChannel  aChannel, [MarshalAs(UnmanagedType.Interface)] nsIAuthPromptCallback  aCallback, [MarshalAs(UnmanagedType.Interface)] nsISupports  aContext, System.UInt32  level, [MarshalAs(UnmanagedType.Interface)] nsIAuthInformation  authInfo);
	}
}
