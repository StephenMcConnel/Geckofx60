// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file OpenWebapps.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>
    /// IDL for https://developer.mozilla.org/en/OpenWebApps/The_JavaScript_API
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("3b937eb5-679b-41e9-aefa-543849fa61dd")]
	public interface nsIOpenWebappsApplication
	{
		
		/// <summary>
        /// IDL for https://developer.mozilla.org/en/OpenWebApps/The_JavaScript_API
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr GetManifestAttribute();
		
		/// <summary>
        /// IDL for https://developer.mozilla.org/en/OpenWebApps/The_JavaScript_API
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetManifestAttribute(System.IntPtr aManifest);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetOriginAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aOrigin);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOriginAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aOrigin);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr GetInstall_dataAttribute();
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetInstall_dataAttribute(System.IntPtr aInstall_data);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetInstall_originAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aInstall_origin);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetInstall_originAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aInstall_origin);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetInstall_timeAttribute();
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetInstall_timeAttribute(uint aInstall_time);
	}
	
	/// <summary>nsIOpenWebappsSuccessInstalled </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("fa3ac1bb-ad7d-44d7-8585-9ecdf3782d65")]
	public interface nsIOpenWebappsSuccessInstalled
	{
		
		/// <summary>Member Handle </summary>
		/// <param name='application'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Handle([MarshalAs(UnmanagedType.Interface)] nsIOpenWebappsApplication application);
	}
	
	/// <summary>nsIOpenWebappsSuccessList </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("a8a83f45-4cbe-4806-b867-017554e30bd4")]
	public interface nsIOpenWebappsSuccessList
	{
		
		/// <summary>Member Handle </summary>
		/// <param name='apps'> </param>
		/// <param name='count'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Handle([MarshalAs(UnmanagedType.LPArray, SizeParamIndex=1)] nsIOpenWebappsApplication[] apps, uint count);
	}
	
	/// <summary>nsIOpenWebappsError </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("75e44e3f-ccda-4497-af68-8abd3f5e1d7b")]
	public interface nsIOpenWebappsError
	{
		
		/// <summary>Member GetCodeAttribute </summary>
		/// <param name='aCode'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetCodeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aCode);
		
		/// <summary>Member SetCodeAttribute </summary>
		/// <param name='aCode'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCodeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aCode);
		
		/// <summary>Member GetMessageAttribute </summary>
		/// <param name='aMessage'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMessageAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aMessage);
		
		/// <summary>Member SetMessageAttribute </summary>
		/// <param name='aMessage'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMessageAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aMessage);
	}
	
	/// <summary>nsIOpenWebappsErrorCB </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("8b29495e-a5e4-4e76-9af8-0f6fe97b8959")]
	public interface nsIOpenWebappsErrorCB
	{
		
		/// <summary>Member Handle </summary>
		/// <param name='error'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Handle([MarshalAs(UnmanagedType.Interface)] nsIOpenWebappsError error);
	}
	
	/// <summary>nsIOpenWebappsSuccessEmpty </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("b86669ab-6a36-4ceb-a4bf-a980dd496144")]
	public interface nsIOpenWebappsSuccessEmpty
	{
		
		/// <summary>Member Handle </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Handle();
	}
	
	/// <summary>nsIOpenWebappsChangeCallback </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("a458afcf-eee9-42fb-bd90-75d5e41c0d9e")]
	public interface nsIOpenWebappsChangeCallback
	{
		
		/// <summary>
        /// "remove" when they are deleted.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Update([MarshalAs(UnmanagedType.LPStruct)] nsAString what, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex=2)] nsIOpenWebappsApplication[] apps, uint count);
	}
	
	/// <summary>nsIOpenWebappsMgmt </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("f3ec76a6-abca-4d90-b8c9-e221033068ef")]
	public interface nsIOpenWebappsMgmt
	{
		
		/// <summary>Member Launch </summary>
		/// <param name='origin'> </param>
		/// <param name='onsuccess'> </param>
		/// <param name='onerror'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Launch([MarshalAs(UnmanagedType.LPStruct)] nsAString origin, [MarshalAs(UnmanagedType.Interface)] nsIOpenWebappsSuccessEmpty onsuccess, [MarshalAs(UnmanagedType.Interface)] nsIOpenWebappsErrorCB onerror);
		
		/// <summary>Member List </summary>
		/// <param name='onsuccess'> </param>
		/// <param name='onerror'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void List([MarshalAs(UnmanagedType.Interface)] nsIOpenWebappsSuccessList onsuccess, [MarshalAs(UnmanagedType.Interface)] nsIOpenWebappsErrorCB onerror);
		
		/// <summary>Member Uninstall </summary>
		/// <param name='origin'> </param>
		/// <param name='onsuccess'> </param>
		/// <param name='onerror'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uninstall([MarshalAs(UnmanagedType.LPStruct)] nsAString origin, [MarshalAs(UnmanagedType.Interface)] nsIOpenWebappsSuccessEmpty onsuccess, [MarshalAs(UnmanagedType.Interface)] nsIOpenWebappsErrorCB onerror);
		
		/// <summary>Member WatchUpdates </summary>
		/// <param name='callback'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int WatchUpdates([MarshalAs(UnmanagedType.Interface)] nsIOpenWebappsChangeCallback callback);
		
		/// <summary>Member ClearWatch </summary>
		/// <param name='watchId'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ClearWatch(int watchId);
	}
	
	/// <summary>nsIOpenWebapps </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("cecd9de7-ea4e-45fd-8a01-a5861d9109ab")]
	public interface nsIOpenWebapps
	{
		
		/// <summary>Member Install </summary>
		/// <param name='manifestURI'> </param>
		/// <param name='install_data'> </param>
		/// <param name='onsuccess'> </param>
		/// <param name='onerror'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Install([MarshalAs(UnmanagedType.LPStruct)] nsAString manifestURI, System.IntPtr install_data, [MarshalAs(UnmanagedType.Interface)] nsIOpenWebappsSuccessEmpty onsuccess, [MarshalAs(UnmanagedType.Interface)] nsIOpenWebappsErrorCB onerror);
		
		/// <summary>Member AmInstalled </summary>
		/// <param name='onsuccess'> </param>
		/// <param name='onerror'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AmInstalled([MarshalAs(UnmanagedType.Interface)] nsIOpenWebappsSuccessInstalled onsuccess, [MarshalAs(UnmanagedType.Interface)] nsIOpenWebappsErrorCB onerror);
		
		/// <summary>Member GetInstalledBy </summary>
		/// <param name='onsuccess'> </param>
		/// <param name='onerror'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetInstalledBy([MarshalAs(UnmanagedType.Interface)] nsIOpenWebappsSuccessList onsuccess, [MarshalAs(UnmanagedType.Interface)] nsIOpenWebappsErrorCB onerror);
		
		/// <summary>Member GetMgmtAttribute </summary>
		/// <returns>A nsIOpenWebappsMgmt</returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIOpenWebappsMgmt GetMgmtAttribute();
	}
}
