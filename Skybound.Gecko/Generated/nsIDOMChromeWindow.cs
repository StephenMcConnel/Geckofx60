// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIDOMChromeWindow.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMChromeWindow.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIDOMChromeWindow </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("ec38cbaf-372f-4874-bc7a-dbf1f0b3d755")]
	public interface nsIDOMChromeWindow
	{
		
		/// <summary>Member GetWindowStateAttribute </summary>
		/// <returns>A System.UInt16</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		ushort GetWindowStateAttribute();
		
		/// <summary>Member GetBrowserDOMWindowAttribute </summary>
		/// <returns>A nsIBrowserDOMWindow </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIBrowserDOMWindow  GetBrowserDOMWindowAttribute();
		
		/// <summary>Member SetBrowserDOMWindowAttribute </summary>
		/// <param name='aBrowserDOMWindow'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBrowserDOMWindowAttribute([MarshalAs(UnmanagedType.Interface)] nsIBrowserDOMWindow  aBrowserDOMWindow);
		
		/// <summary>Member GetAttention </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetAttention();
		
		/// <summary>Member GetAttentionWithCycleCount </summary>
		/// <param name='aCycleCount'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetAttentionWithCycleCount(System.Int32  aCycleCount);
		
		/// <summary>Member SetCursor </summary>
		/// <param name='cursor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCursor([MarshalAs(UnmanagedType.LPStruct)] nsAString cursor);
		
		/// <summary>Member Maximize </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Maximize();
		
		/// <summary>Member Minimize </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Minimize();
		
		/// <summary>Member Restore </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Restore();
		
		/// <summary>Member NotifyDefaultButtonLoaded </summary>
		/// <param name='defaultButton'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void NotifyDefaultButtonLoaded([MarshalAs(UnmanagedType.Interface)] nsIDOMElement  defaultButton);
		
		/// <summary>Member GetMessageManagerAttribute </summary>
		/// <returns>A nsIChromeFrameMessageManager </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIChromeFrameMessageManager  GetMessageManagerAttribute();
		
		/// <summary>Member BeginWindowMove </summary>
		/// <param name='mouseDownEvent'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BeginWindowMove([MarshalAs(UnmanagedType.Interface)] nsIDOMEvent  mouseDownEvent);
	}
}
