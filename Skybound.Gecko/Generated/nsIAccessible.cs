// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIAccessible.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIAccessible.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIAccessible </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("c81d8f8c-8585-4094-bc7c-71dd01494906")]
	public interface nsIAccessible
	{
		
		/// <summary>Member GetParentAttribute </summary>
		/// <returns>A nsIAccessible </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessible  GetParentAttribute();
		
		/// <summary>Member GetNextSiblingAttribute </summary>
		/// <returns>A nsIAccessible </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessible  GetNextSiblingAttribute();
		
		/// <summary>Member GetPreviousSiblingAttribute </summary>
		/// <returns>A nsIAccessible </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessible  GetPreviousSiblingAttribute();
		
		/// <summary>Member GetFirstChildAttribute </summary>
		/// <returns>A nsIAccessible </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessible  GetFirstChildAttribute();
		
		/// <summary>Member GetLastChildAttribute </summary>
		/// <returns>A nsIAccessible </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessible  GetLastChildAttribute();
		
		/// <summary>Member GetChildrenAttribute </summary>
		/// <returns>A nsIArray </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIArray  GetChildrenAttribute();
		
		/// <summary>Member GetChildCountAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetChildCountAttribute();
		
		/// <summary>Member GetIndexInParentAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetIndexInParentAttribute();
		
		/// <summary>Member GetNameAttribute </summary>
		/// <param name='aName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNameAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aName);
		
		/// <summary>Member SetNameAttribute </summary>
		/// <param name='aName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetNameAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aName);
		
		/// <summary>Member GetValueAttribute </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetValueAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aValue);
		
		/// <summary>Member GetDescriptionAttribute </summary>
		/// <param name='aDescription'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetDescriptionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aDescription);
		
		/// <summary>Member GetKeyboardShortcutAttribute </summary>
		/// <param name='aKeyboardShortcut'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetKeyboardShortcutAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aKeyboardShortcut);
		
		/// <summary>Member GetDefaultKeyBindingAttribute </summary>
		/// <param name='aDefaultKeyBinding'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetDefaultKeyBindingAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aDefaultKeyBinding);
		
		/// <summary>Member GetKeyBindings </summary>
		/// <param name='aActionIndex'> </param>
		/// <returns>A System.IntPtr</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr GetKeyBindings(byte aActionIndex);
		
		/// <summary>Member GetRoleAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetRoleAttribute();
		
		/// <summary>Member GetState </summary>
		/// <param name='aState'> </param>
		/// <param name='aExtraState'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetState(out System.UInt32  aState, out System.UInt32  aExtraState);
		
		/// <summary>Member GetHelpAttribute </summary>
		/// <param name='aHelp'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetHelpAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aHelp);
		
		/// <summary>Member GetFocusedChildAttribute </summary>
		/// <returns>A nsIAccessible </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessible  GetFocusedChildAttribute();
		
		/// <summary>Member GetAttributesAttribute </summary>
		/// <returns>A nsIPersistentProperties </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIPersistentProperties  GetAttributesAttribute();
		
		/// <summary>Member GroupPosition </summary>
		/// <param name='aGroupLevel'> </param>
		/// <param name='aSimilarItemsInGroup'> </param>
		/// <param name='aPositionInGroup'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GroupPosition(out System.Int32  aGroupLevel, out System.Int32  aSimilarItemsInGroup, out System.Int32  aPositionInGroup);
		
		/// <summary>Member GetChildAtPoint </summary>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <returns>A nsIAccessible</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessible GetChildAtPoint(System.Int32  x, System.Int32  y);
		
		/// <summary>Member GetDeepestChildAtPoint </summary>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <returns>A nsIAccessible</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessible GetDeepestChildAtPoint(System.Int32  x, System.Int32  y);
		
		/// <summary>Member GetChildAt </summary>
		/// <param name='aChildIndex'> </param>
		/// <returns>A nsIAccessible</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessible GetChildAt(System.Int32  aChildIndex);
		
		/// <summary>Member GetAccessibleToRight </summary>
		/// <returns>A nsIAccessible</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessible GetAccessibleToRight();
		
		/// <summary>Member GetAccessibleToLeft </summary>
		/// <returns>A nsIAccessible</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessible GetAccessibleToLeft();
		
		/// <summary>Member GetAccessibleAbove </summary>
		/// <returns>A nsIAccessible</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessible GetAccessibleAbove();
		
		/// <summary>Member GetAccessibleBelow </summary>
		/// <returns>A nsIAccessible</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessible GetAccessibleBelow();
		
		/// <summary>Member GetRelationByType </summary>
		/// <param name='aRelationType'> </param>
		/// <returns>A nsIAccessibleRelation</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessibleRelation GetRelationByType(System.UInt32  aRelationType);
		
		/// <summary>Member GetRelationsCountAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetRelationsCountAttribute();
		
		/// <summary>Member GetRelation </summary>
		/// <param name='index'> </param>
		/// <returns>A nsIAccessibleRelation</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessibleRelation GetRelation(System.UInt32  index);
		
		/// <summary>Member GetRelations </summary>
		/// <returns>A nsIArray</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIArray GetRelations();
		
		/// <summary>Member GetBounds </summary>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetBounds(out System.Int32  x, out System.Int32  y, out System.Int32  width, out System.Int32  height);
		
		/// <summary>Member SetSelected </summary>
		/// <param name='isSelected'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetSelected(System.Boolean  isSelected);
		
		/// <summary>Member ExtendSelection </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ExtendSelection();
		
		/// <summary>Member TakeSelection </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TakeSelection();
		
		/// <summary>Member TakeFocus </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TakeFocus();
		
		/// <summary>Member GetNumActionsAttribute </summary>
		/// <returns>A System.Byte</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		byte GetNumActionsAttribute();
		
		/// <summary>Member GetActionName </summary>
		/// <param name='index'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetActionName(byte index);
		
		/// <summary>Member GetActionDescription </summary>
		/// <param name='aIndex'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetActionDescription(byte aIndex);
		
		/// <summary>Member DoAction </summary>
		/// <param name='index'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DoAction(byte index);
		
		/// <summary>Member GetNativeInterface </summary>
		/// <param name='aOutAccessible'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNativeInterface(out System.IntPtr  aOutAccessible);
	}
}
