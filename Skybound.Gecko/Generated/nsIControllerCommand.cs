// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIControllerCommand.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIControllerCommand.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIControllerCommand </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("0eae9a46-1dd2-11b2-aca0-9176f05fe9db")]
	public interface nsIControllerCommand
	{
		
		/// <summary>Member IsCommandEnabled </summary>
		/// <param name='aCommandName'> </param>
		/// <param name='aCommandContext'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsCommandEnabled([MarshalAs(UnmanagedType.LPStr)] System.String  aCommandName, [MarshalAs(UnmanagedType.Interface)] nsISupports  aCommandContext);
		
		/// <summary>Member GetCommandStateParams </summary>
		/// <param name='aCommandName'> </param>
		/// <param name='aParams'> </param>
		/// <param name='aCommandContext'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetCommandStateParams([MarshalAs(UnmanagedType.LPStr)] System.String  aCommandName, [MarshalAs(UnmanagedType.Interface)] nsICommandParams  aParams, [MarshalAs(UnmanagedType.Interface)] nsISupports  aCommandContext);
		
		/// <summary>Member DoCommand </summary>
		/// <param name='aCommandName'> </param>
		/// <param name='aCommandContext'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DoCommand([MarshalAs(UnmanagedType.LPStr)] System.String  aCommandName, [MarshalAs(UnmanagedType.Interface)] nsISupports  aCommandContext);
		
		/// <summary>Member DoCommandParams </summary>
		/// <param name='aCommandName'> </param>
		/// <param name='aParams'> </param>
		/// <param name='aCommandContext'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DoCommandParams([MarshalAs(UnmanagedType.LPStr)] System.String  aCommandName, [MarshalAs(UnmanagedType.Interface)] nsICommandParams  aParams, [MarshalAs(UnmanagedType.Interface)] nsISupports  aCommandContext);
	}
}
