// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIUrlListManager.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIUrlListManager.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIUrlListManagerCallback </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("fa4caf12-d057-4e7e-81e9-ce066ceee90b")]
	public interface nsIUrlListManagerCallback
	{
		
		/// <summary>Member HandleEvent </summary>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void HandleEvent([MarshalAs(UnmanagedType.LPStruct)] nsAString  value);
	}
	
	/// <summary>nsIUrlListManager </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("9c5598ec-9986-40cf-af40-b5e0d817a3a0")]
	public interface nsIUrlListManager
	{
		
		/// <summary>Member SetUpdateUrl </summary>
		/// <param name='url'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetUpdateUrl([MarshalAs(UnmanagedType.LPStruct)] nsAString  url);
		
		/// <summary>Member SetKeyUrl </summary>
		/// <param name='url'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetKeyUrl([MarshalAs(UnmanagedType.LPStruct)] nsAString  url);
		
		/// <summary>Member SetGethashUrl </summary>
		/// <param name='url'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetGethashUrl([MarshalAs(UnmanagedType.LPStruct)] nsAString  url);
		
		/// <summary>Member RegisterTable </summary>
		/// <param name='tableName'> </param>
		/// <param name='requireMac'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool RegisterTable([MarshalAs(UnmanagedType.LPStruct)] nsAString  tableName, System.Boolean  requireMac);
		
		/// <summary>Member EnableUpdate </summary>
		/// <param name='tableName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void EnableUpdate([MarshalAs(UnmanagedType.LPStruct)] nsAString  tableName);
		
		/// <summary>Member DisableUpdate </summary>
		/// <param name='tableName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DisableUpdate([MarshalAs(UnmanagedType.LPStruct)] nsAString  tableName);
		
		/// <summary>Member SafeLookup </summary>
		/// <param name='key'> </param>
		/// <param name='cb'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SafeLookup([MarshalAs(UnmanagedType.LPStruct)] nsAString  key, [MarshalAs(UnmanagedType.Interface)] nsIUrlListManagerCallback  cb);
		
		/// <summary>Member CheckForUpdates </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CheckForUpdates();
	}
}
