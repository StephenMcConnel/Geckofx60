// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsINetUtil.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsINetUtil.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsINetUtil </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("ca68c485-9db3-4c12-82a6-4fab7948e2d5")]
	public interface nsINetUtil
	{
		
		/// <summary>Member ParseContentType </summary>
		/// <param name='aTypeHeader'> </param>
		/// <param name='aCharset'> </param>
		/// <param name='aHadCharset'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString ParseContentType([MarshalAs(UnmanagedType.LPStruct)] nsAString  aTypeHeader, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aCharset, out System.Boolean  aHadCharset);
		
		/// <summary>Member ProtocolHasFlags </summary>
		/// <param name='aURI'> </param>
		/// <param name='aFlag'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool ProtocolHasFlags([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI, System.UInt32  aFlag);
		
		/// <summary>Member URIChainHasFlags </summary>
		/// <param name='aURI'> </param>
		/// <param name='aFlags'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool URIChainHasFlags([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI, System.UInt32  aFlags);
		
		/// <summary>Member ToImmutableURI </summary>
		/// <param name='aURI'> </param>
		/// <returns>A nsIURI</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIURI ToImmutableURI([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member NewSimpleNestedURI </summary>
		/// <param name='aURI'> </param>
		/// <returns>A nsIURI</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIURI NewSimpleNestedURI([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member EscapeString </summary>
		/// <param name='aString'> </param>
		/// <param name='aEscapeType'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString EscapeString([MarshalAs(UnmanagedType.LPStruct)] nsAString  aString, System.UInt32  aEscapeType);
		
		/// <summary>Member EscapeURL </summary>
		/// <param name='aStr'> </param>
		/// <param name='aFlags'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString EscapeURL([MarshalAs(UnmanagedType.LPStruct)] nsAString  aStr, System.UInt32  aFlags);
		
		/// <summary>Member UnescapeString </summary>
		/// <param name='aStr'> </param>
		/// <param name='aFlags'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString UnescapeString([MarshalAs(UnmanagedType.LPStruct)] nsAString  aStr, System.UInt32  aFlags);
		
		/// <summary>Member ExtractCharsetFromContentType </summary>
		/// <param name='aTypeHeader'> </param>
		/// <param name='aCharset'> </param>
		/// <param name='aCharsetStart'> </param>
		/// <param name='aCharsetEnd'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool ExtractCharsetFromContentType([MarshalAs(UnmanagedType.LPStruct)] nsAString  aTypeHeader, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aCharset, out System.Int32  aCharsetStart, out System.Int32  aCharsetEnd);
	}
}
