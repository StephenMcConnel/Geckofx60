// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file xpctest.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>
    /// Note the use of [function] for this scriptable function callback declaration
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("4407fc90-1e41-11d5-909d-0010a4e73d9a")]
	public interface nsITestXPCFunctionCallback
	{
		
		/// <summary>
        /// Note the use of [function] for this scriptable function callback declaration
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Call([MarshalAs(UnmanagedType.LPStr)] System.String  s);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CallWithThis([MarshalAs(UnmanagedType.Interface)] nsISupports  self, [MarshalAs(UnmanagedType.LPStr)] System.String  s);
	}
	
	/// <summary>nsITestXPCFoo </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("159E36D0-991E-11d2-AC3F-00C09300144B")]
	public interface nsITestXPCFoo
	{
		
		/// <summary>Member Test </summary>
		/// <param name='p1'> </param>
		/// <param name='p2'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int Test(System.Int32  p1, System.Int32  p2);
		
		/// <summary>Member Test2 </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Test2();
		
		/// <summary>Member GetFooAttribute </summary>
		/// <returns>A System.String </returns>
		[return: MarshalAs(UnmanagedType.LPStr)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.String  GetFooAttribute();
		
		/// <summary>Member SetFooAttribute </summary>
		/// <param name='aFoo'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFooAttribute([MarshalAs(UnmanagedType.LPStr)] System.String  aFoo);
	}
	
	/// <summary>nsITestXPCFoo2 </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("5F9D20C0-9B6B-11d2-9FFE-000064657374")]
	public interface nsITestXPCFoo2 : nsITestXPCFoo
	{
		
		/// <summary>Member Test </summary>
		/// <param name='p1'> </param>
		/// <param name='p2'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new int Test(System.Int32  p1, System.Int32  p2);
		
		/// <summary>Member Test2 </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Test2();
		
		/// <summary>Member GetFooAttribute </summary>
		/// <returns>A System.String </returns>
		[return: MarshalAs(UnmanagedType.LPStr)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.String  GetFooAttribute();
		
		/// <summary>Member SetFooAttribute </summary>
		/// <param name='aFoo'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void SetFooAttribute([MarshalAs(UnmanagedType.LPStr)] System.String  aFoo);
	}
	
	/// <summary>nsIEcho </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("CD2F2F40-C5D9-11d2-9838-006008962422")]
	public interface nsIEcho
	{
		
		/// <summary>Member SetReceiver </summary>
		/// <param name='aReceiver'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetReceiver([MarshalAs(UnmanagedType.Interface)] nsIEcho  aReceiver);
		
		/// <summary>Member SendOneString </summary>
		/// <param name='str'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SendOneString([MarshalAs(UnmanagedType.LPStr)] System.String  str);
		
		/// <summary>Member In2OutOneInt </summary>
		/// <param name='input'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int In2OutOneInt(System.Int32  input);
		
		/// <summary>Member In2OutAddTwoInts </summary>
		/// <param name='input1'> </param>
		/// <param name='input2'> </param>
		/// <param name='output1'> </param>
		/// <param name='output2'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int In2OutAddTwoInts(System.Int32  input1, System.Int32  input2, out System.Int32  output1, out System.Int32  output2);
		
		/// <summary>Member In2OutOneString </summary>
		/// <param name='input'> </param>
		/// <returns>A System.String</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		string In2OutOneString([MarshalAs(UnmanagedType.LPStr)] System.String  input);
		
		/// <summary>Member In2OutOneDOMString </summary>
		/// <param name='input'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString In2OutOneDOMString([MarshalAs(UnmanagedType.LPStruct)] nsAString input);
		
		/// <summary>Member EchoIn2OutOneDOMString </summary>
		/// <param name='input'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString EchoIn2OutOneDOMString([MarshalAs(UnmanagedType.LPStruct)] nsAString input);
		
		/// <summary>Member In2OutOneAString </summary>
		/// <param name='input'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString In2OutOneAString([MarshalAs(UnmanagedType.LPStruct)] nsAString input);
		
		/// <summary>Member EchoIn2OutOneAString </summary>
		/// <param name='input'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString EchoIn2OutOneAString([MarshalAs(UnmanagedType.LPStruct)] nsAString input);
		
		/// <summary>Member In2OutOneUTF8String </summary>
		/// <param name='input'> </param>
		/// <returns>A nsAUTF8String</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAUTF8String In2OutOneUTF8String([MarshalAs(UnmanagedType.LPStruct)] nsAUTF8String  input);
		
		/// <summary>Member EchoIn2OutOneUTF8String </summary>
		/// <param name='input'> </param>
		/// <returns>A nsAUTF8String</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAUTF8String EchoIn2OutOneUTF8String([MarshalAs(UnmanagedType.LPStruct)] nsAUTF8String  input);
		
		/// <summary>Member In2OutOneCString </summary>
		/// <param name='input'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString In2OutOneCString([MarshalAs(UnmanagedType.LPStruct)] nsAString  input);
		
		/// <summary>Member EchoIn2OutOneCString </summary>
		/// <param name='input'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString EchoIn2OutOneCString([MarshalAs(UnmanagedType.LPStruct)] nsAString  input);
		
		/// <summary>Member SimpleCallNoEcho </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SimpleCallNoEcho();
		
		/// <summary>Member SendManyTypes </summary>
		/// <param name='p1'> </param>
		/// <param name='p2'> </param>
		/// <param name='p3'> </param>
		/// <param name='p4'> </param>
		/// <param name='p5'> </param>
		/// <param name='p6'> </param>
		/// <param name='p7'> </param>
		/// <param name='p8'> </param>
		/// <param name='p9'> </param>
		/// <param name='p10'> </param>
		/// <param name='p11'> </param>
		/// <param name='p12'> </param>
		/// <param name='p13'> </param>
		/// <param name='p14'> </param>
		/// <param name='p15'> </param>
		/// <param name='p16'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SendManyTypes(
					System.IntPtr  p1, 
					short p2, 
					System.Int32  p3, 
					System.Int32  p4, 
					System.IntPtr  p5, 
					ushort p6, 
					System.UInt32  p7, 
					System.UInt32  p8, 
					double p9, 
					double p10, 
					System.Boolean  p11, 
					System.Char  p12, 
					System.Char  p13, 
					System.IntPtr p14, 
					[MarshalAs(UnmanagedType.LPStr)] System.String  p15, 
					[MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string p16);
		
		/// <summary>Member SendInOutManyTypes </summary>
		/// <param name='p1'> </param>
		/// <param name='p2'> </param>
		/// <param name='p3'> </param>
		/// <param name='p4'> </param>
		/// <param name='p5'> </param>
		/// <param name='p6'> </param>
		/// <param name='p7'> </param>
		/// <param name='p8'> </param>
		/// <param name='p9'> </param>
		/// <param name='p10'> </param>
		/// <param name='p11'> </param>
		/// <param name='p12'> </param>
		/// <param name='p13'> </param>
		/// <param name='p14'> </param>
		/// <param name='p15'> </param>
		/// <param name='p16'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SendInOutManyTypes(
					ref System.IntPtr  p1, 
					ref short p2, 
					ref System.Int32  p3, 
					ref System.Int32  p4, 
					ref System.IntPtr  p5, 
					ref ushort p6, 
					ref System.UInt32  p7, 
					ref System.UInt32  p8, 
					ref double p9, 
					ref double p10, 
					ref System.Boolean  p11, 
					ref System.Char  p12, 
					ref System.Char  p13, 
					ref System.IntPtr p14, 
					[MarshalAs(UnmanagedType.LPStr)] ref System.String  p15, 
					[MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] ref string p16);
		
		/// <summary>Member MethodWithNative </summary>
		/// <param name='p1'> </param>
		/// <param name='p2'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void MethodWithNative(System.Int32  p1, System.IntPtr  p2);
		
		/// <summary>Member ReturnCode </summary>
		/// <param name='code'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ReturnCode(System.Int32  code);
		
		/// <summary>Member FailInJSTest </summary>
		/// <param name='fail'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void FailInJSTest(System.Int32  fail);
		
		/// <summary>Member SharedString </summary>
		/// <returns>A System.String </returns>
		[return: MarshalAs(UnmanagedType.LPStr)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.String  SharedString();
		
		/// <summary>Member ReturnCode_NS_OK </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ReturnCode_NS_OK();
		
		/// <summary>Member ReturnCode_NS_ERROR_NULL_POINTER </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ReturnCode_NS_ERROR_NULL_POINTER();
		
		/// <summary>Member ReturnCode_NS_ERROR_UNEXPECTED </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ReturnCode_NS_ERROR_UNEXPECTED();
		
		/// <summary>Member ReturnCode_NS_ERROR_OUT_OF_MEMORY </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ReturnCode_NS_ERROR_OUT_OF_MEMORY();
		
		/// <summary>Member ReturnInterface </summary>
		/// <param name='obj'> </param>
		/// <returns>A nsISupports</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports ReturnInterface([MarshalAs(UnmanagedType.Interface)] nsISupports  obj);
		
		/// <summary>Member GetStack </summary>
		/// <returns>A nsIStackFrame</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIStackFrame GetStack();
		
		/// <summary>Member SetReceiverReturnOldReceiver </summary>
		/// <param name='aReceiver'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetReceiverReturnOldReceiver([MarshalAs(UnmanagedType.Interface)] ref nsIEcho  aReceiver);
		
		/// <summary>Member MethodWithForwardDeclaredParam </summary>
		/// <param name='sut'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void MethodWithForwardDeclaredParam(System.IntPtr sut);
		
		/// <summary>Member PseudoQueryInterface </summary>
		/// <param name='uuid'> </param>
		/// <returns>A System.IntPtr </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr  PseudoQueryInterface(ref System.Guid uuid);
		
		/// <summary>Member DebugDumpJSStack </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DebugDumpJSStack();
		
		/// <summary>
        ///optional params </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void PrintArgTypes();
		
		/// <summary>
        ///optional param </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ThrowArg();
		
		/// <summary>Member CallReceiverSometimeLater </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CallReceiverSometimeLater();
		
		/// <summary>Member GetThrowInGetterAttribute </summary>
		/// <returns>A System.Int16</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		short GetThrowInGetterAttribute();
		
		/// <summary>Member GetAStringAttribute </summary>
		/// <returns>A System.String </returns>
		[return: MarshalAs(UnmanagedType.LPStr)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.String  GetAStringAttribute();
		
		/// <summary>Member SetAStringAttribute </summary>
		/// <param name='aAString'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAStringAttribute([MarshalAs(UnmanagedType.LPStr)] System.String  aAString);
		
		/// <summary>Member GetSomeValueAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetSomeValueAttribute();
		
		/// <summary>Member SetSomeValueAttribute </summary>
		/// <param name='aSomeValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetSomeValueAttribute(System.Int32  aSomeValue);
		
		/// <summary>Member CallFunction </summary>
		/// <param name='callback'> </param>
		/// <param name='s'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CallFunction([MarshalAs(UnmanagedType.Interface)] nsITestXPCFunctionCallback  callback, [MarshalAs(UnmanagedType.LPStr)] System.String  s);
		
		/// <summary>Member CallFunctionWithThis </summary>
		/// <param name='callback'> </param>
		/// <param name='self'> </param>
		/// <param name='s'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CallFunctionWithThis([MarshalAs(UnmanagedType.Interface)] nsITestXPCFunctionCallback  callback, [MarshalAs(UnmanagedType.Interface)] nsISupports  self, [MarshalAs(UnmanagedType.LPStr)] System.String  s);
	}
	
	/// <summary> </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("83849a30-0d6e-11d3-bab8-00805f8a5dd7")]
	public interface nsIXPCTestParent
	{
		
		/// <summary> </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Method1(short i);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Method1a([MarshalAs(UnmanagedType.Interface)] nsIXPCTestParent  foo);
	}
	
	/// <summary>nsIXPCTestChild </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("9ddf0f00-0d6e-11d3-bab8-00805f8a5dd7")]
	public interface nsIXPCTestChild : nsIXPCTestParent
	{
		
		/// <summary> </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Method1(short i);
		
		/// <summary>Member Method1a </summary>
		/// <param name='foo'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Method1a([MarshalAs(UnmanagedType.Interface)] nsIXPCTestParent  foo);
		
		/// <summary>Member Method2 </summary>
		/// <param name='i'> </param>
		/// <param name='j'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Method2(short i, short j);
	}
	
	/// <summary>nsIXPCTestOther </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("7bca65e0-0d73-11d3-bab8-00805f8a5dd7")]
	public interface nsIXPCTestOther
	{
		
		/// <summary>Member Method3 </summary>
		/// <param name='i'> </param>
		/// <param name='j'> </param>
		/// <param name='k'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Method3(short i, short j, short k);
	}
	
	/// <summary>nsIXPCTestNoisy </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("1e4cf7b0-237a-11d3-9879-006008962422")]
	public interface nsIXPCTestNoisy
	{
		
		/// <summary>Member Squawk </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Squawk();
	}
	
	/// <summary>nsIXPCTestString </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("d970e910-30d8-11d3-9885-006008962422")]
	public interface nsIXPCTestString
	{
		
		/// <summary>Member GetStringA </summary>
		/// <returns>A System.String</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		string GetStringA();
		
		/// <summary>Member GetStringB </summary>
		/// <param name='s'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetStringB([MarshalAs(UnmanagedType.LPStr)] out System.String  s);
		
		/// <summary>Member GetStringC </summary>
		/// <returns>A System.String </returns>
		[return: MarshalAs(UnmanagedType.LPStr)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.String  GetStringC();
		
		/// <summary>Member GetWStringCopied </summary>
		/// <returns>A System.String</returns>
		[return: MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		string GetWStringCopied();
		
		/// <summary>Member GetWStringShared </summary>
		/// <returns>A System.String</returns>
		[return: MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		string GetWStringShared();
	}
	
	/// <summary>nsIXPCTestOverloaded </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("0ff4faf0-439a-11d3-988c-006008962422")]
	public interface nsIXPCTestOverloaded
	{
		
		/// <summary>Member Foo1 </summary>
		/// <param name='p1'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Foo1(System.Int32  p1);
		
		/// <summary>Member Foo2 </summary>
		/// <param name='p1'> </param>
		/// <param name='p2'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Foo2(System.Int32  p1, System.Int32  p2);
	}
	
	/// <summary>nsIXPCTestArray </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("3d2e64b0-6552-11d3-989e-006008962422")]
	public interface nsIXPCTestArray
	{
		
		/// <summary>Member SetReceiver </summary>
		/// <param name='aReceiver'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetReceiver([MarshalAs(UnmanagedType.Interface)] nsIXPCTestArray  aReceiver);
		
		/// <summary>Member PrintIntegerArray </summary>
		/// <param name='count'> </param>
		/// <param name='valueArray'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void PrintIntegerArray(System.UInt32  count, System.Int32  valueArray);
		
		/// <summary>Member PrintStringArray </summary>
		/// <param name='count'> </param>
		/// <param name='valueArray'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void PrintStringArray(System.UInt32  count, [MarshalAs(UnmanagedType.LPStr, SizeParamIndex=0)] System.String  valueArray);
		
		/// <summary>Member MultiplyEachItemInIntegerArray </summary>
		/// <param name='val'> </param>
		/// <param name='count'> </param>
		/// <param name='valueArray'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void MultiplyEachItemInIntegerArray(System.Int32  val, System.UInt32  count, ref System.Int32  valueArray);
		
		/// <summary>Member MultiplyEachItemInIntegerArrayAndAppend </summary>
		/// <param name='val'> </param>
		/// <param name='count'> </param>
		/// <param name='valueArray'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void MultiplyEachItemInIntegerArrayAndAppend(System.Int32  val, ref System.UInt32  count, ref System.Int32  valueArray);
		
		/// <summary>Member CallEchoMethodOnEachInArray </summary>
		/// <param name='uuid'> </param>
		/// <param name='count'> </param>
		/// <param name='result'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CallEchoMethodOnEachInArray(ref System.Guid uuid, ref System.UInt32  count, ref System.IntPtr  result);
		
		/// <summary>Member CallEchoMethodOnEachInArray2 </summary>
		/// <param name='count'> </param>
		/// <param name='result'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CallEchoMethodOnEachInArray2(ref System.UInt32  count, ref nsIEcho  result);
		
		/// <summary>Member DoubleStringArray </summary>
		/// <param name='count'> </param>
		/// <param name='valueArray'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DoubleStringArray(ref System.UInt32  count, [MarshalAs(UnmanagedType.LPStr, SizeParamIndex=0)] ref System.String  valueArray);
		
		/// <summary>Member ReverseStringArray </summary>
		/// <param name='count'> </param>
		/// <param name='valueArray'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ReverseStringArray(System.UInt32  count, [MarshalAs(UnmanagedType.LPStr, SizeParamIndex=0)] ref System.String  valueArray);
		
		/// <summary>Member PrintStringWithSize </summary>
		/// <param name='count'> </param>
		/// <param name='str'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void PrintStringWithSize(System.UInt32  count, [MarshalAs(UnmanagedType.LPStr, SizeParamIndex=0)] System.String  str);
		
		/// <summary>Member DoubleString </summary>
		/// <param name='count'> </param>
		/// <param name='str'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DoubleString(ref System.UInt32  count, [MarshalAs(UnmanagedType.LPStr, SizeParamIndex=0)] ref System.String  str);
		
		/// <summary>Member GetStrings </summary>
		/// <param name='count'> </param>
		/// <returns>A System.String </returns>
		[return: MarshalAs(UnmanagedType.LPStr, SizeParamIndex=0)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.String  GetStrings(out System.UInt32  count);
	}
	
	/// <summary>nsIWrappedJSObjectTest </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("13082da0-643c-11d4-8fe0-0010a4e73d9a")]
	public interface nsIWrappedJSObjectTest
	{
		
		/// <summary>Member InterfaceMember </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InterfaceMember();
	}
	
	/// <summary>nsIBogus1 </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("41d923d0-5bc1-11d5-90db-0010a4e73d9a")]
	public interface nsIBogus1
	{
	}
	
	/// <summary>nsIBogus2 </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("8d8f4210-5bc1-11d5-90db-0010a4e73d9a")]
	public interface nsIBogus2
	{
		
		/// <summary>Member GetBogusAttribute </summary>
		/// <returns>A nsIBogus1 </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIBogus1  GetBogusAttribute();
		
		/// <summary>Member SetBogusAttribute </summary>
		/// <param name='aBogus'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBogusAttribute([MarshalAs(UnmanagedType.Interface)] nsIBogus1  aBogus);
	}
	
	/// <summary>nsITestVariant </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("34bc9990-95af-11d5-90fc-0010a4e73d9a")]
	public interface nsITestVariant
	{
		
		/// <summary>
        /// Just return the variant that was passed in.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant PassThruVariant([MarshalAs(UnmanagedType.Interface)] nsIVariant  value);
		
		/// <summary>
        /// Just return the type of the passed in variant.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		ushort ReturnVariantType([MarshalAs(UnmanagedType.Interface)] nsIVariant  value);
		
		/// <summary>
        /// Construct and return a default xpcom variant instance using the
        /// value of the passed in variant. Use the type of the passed in variant.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant CopyVariant([MarshalAs(UnmanagedType.Interface)] nsIVariant  value);
		
		/// <summary>
        /// Construct and return a default xpcom variant instance using the
        /// value of the passed in variant. Use the type as specified to get data
        /// from the passed in variant.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant CopyVariantAsType([MarshalAs(UnmanagedType.Interface)] nsIVariant  value, System.UInt16  type);
		
		/// <summary>
        /// Construct a default xpcom variant instance using the
        /// value of the passed in variant. Use the type as specified in type1 to
        /// get data from the passed in variant. Then construct and return a default
        /// xpcom variant based on that object using the type2. This allows for
        /// testing all the 'ConvertTo*' methods on the default xpcom variant class.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant CopyVariantAsTypeTwice([MarshalAs(UnmanagedType.Interface)] nsIVariant  value, System.UInt16  type1, System.UInt16  type2);
		
		/// <summary>
        /// Get a named property from object that will be QI'd to nsIPropertyBag.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant GetNamedProperty([MarshalAs(UnmanagedType.Interface)] nsISupports  aBag, [MarshalAs(UnmanagedType.LPStruct)] nsAString aName);
		
		/// <summary>
        /// Get a enumerator from object that will be QI'd to nsIPropertyBag.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISimpleEnumerator GetEnumerator([MarshalAs(UnmanagedType.Interface)] nsISupports  aBag);
	}
}
