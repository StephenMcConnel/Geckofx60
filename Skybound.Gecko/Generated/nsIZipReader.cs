// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIZipReader.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIZipReader.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIZipEntry </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("e1c028bc-c478-11da-95a8-00e08161165f")]
	public interface nsIZipEntry
	{
		
		/// <summary>Member GetCompressionAttribute </summary>
		/// <returns>A System.UInt16</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		ushort GetCompressionAttribute();
		
		/// <summary>Member GetSizeAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetSizeAttribute();
		
		/// <summary>Member GetRealSizeAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetRealSizeAttribute();
		
		/// <summary>Member GetCRC32Attribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetCRC32Attribute();
		
		/// <summary>Member GetIsDirectoryAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetIsDirectoryAttribute();
		
		/// <summary>Member GetLastModifiedTimeAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetLastModifiedTimeAttribute();
		
		/// <summary>Member GetIsSyntheticAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetIsSyntheticAttribute();
	}
	
	/// <summary>nsIZipReader </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("7bb925d6-833a-486c-8ef2-9bc15c670a60")]
	public interface nsIZipReader
	{
		
		/// <summary>Member Open </summary>
		/// <param name='zipFile'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Open([MarshalAs(UnmanagedType.Interface)] nsIFile  zipFile);
		
		/// <summary>Member OpenInner </summary>
		/// <param name='zipReader'> </param>
		/// <param name='zipEntry'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OpenInner([MarshalAs(UnmanagedType.Interface)] nsIZipReader  zipReader, [MarshalAs(UnmanagedType.LPStr)] System.String  zipEntry);
		
		/// <summary>Member GetFileAttribute </summary>
		/// <returns>A nsIFile </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIFile  GetFileAttribute();
		
		/// <summary>Member Close </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Close();
		
		/// <summary>Member Test </summary>
		/// <param name='aEntryName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Test([MarshalAs(UnmanagedType.LPStr)] System.String  aEntryName);
		
		/// <summary>Member Extract </summary>
		/// <param name='zipEntry'> </param>
		/// <param name='outFile'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Extract([MarshalAs(UnmanagedType.LPStr)] System.String  zipEntry, [MarshalAs(UnmanagedType.Interface)] nsIFile  outFile);
		
		/// <summary>Member GetEntry </summary>
		/// <param name='zipEntry'> </param>
		/// <returns>A nsIZipEntry</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIZipEntry GetEntry([MarshalAs(UnmanagedType.LPStr)] System.String  zipEntry);
		
		/// <summary>Member HasEntry </summary>
		/// <param name='zipEntry'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool HasEntry([MarshalAs(UnmanagedType.LPStruct)] nsAString  zipEntry);
		
		/// <summary>Member FindEntries </summary>
		/// <param name='aPattern'> </param>
		/// <returns>A nsIUTF8StringEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIUTF8StringEnumerator FindEntries([MarshalAs(UnmanagedType.LPStr)] System.String  aPattern);
		
		/// <summary>Member GetInputStream </summary>
		/// <param name='zipEntry'> </param>
		/// <returns>A nsIInputStream</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIInputStream GetInputStream([MarshalAs(UnmanagedType.LPStr)] System.String  zipEntry);
		
		/// <summary>Member GetInputStreamWithSpec </summary>
		/// <param name='aJarSpec'> </param>
		/// <param name='zipEntry'> </param>
		/// <returns>A nsIInputStream</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIInputStream GetInputStreamWithSpec([MarshalAs(UnmanagedType.LPStruct)] nsAString  aJarSpec, [MarshalAs(UnmanagedType.LPStr)] System.String  zipEntry);
		
		/// <summary>Member GetCertificatePrincipal </summary>
		/// <param name='aEntryName'> </param>
		/// <returns>A nsIPrincipal</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIPrincipal GetCertificatePrincipal([MarshalAs(UnmanagedType.LPStr)] System.String  aEntryName);
		
		/// <summary>Member GetManifestEntriesCountAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetManifestEntriesCountAttribute();
	}
	
	/// <summary>nsIZipReaderCache </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("52c45d86-0cc3-11d4-986e-00c04fa0cf4a")]
	public interface nsIZipReaderCache
	{
		
		/// <summary>Member Init </summary>
		/// <param name='cacheSize'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Init(System.UInt32  cacheSize);
		
		/// <summary>Member GetZip </summary>
		/// <param name='zipFile'> </param>
		/// <returns>A nsIZipReader</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIZipReader GetZip([MarshalAs(UnmanagedType.Interface)] nsIFile  zipFile);
		
		/// <summary>Member GetInnerZip </summary>
		/// <param name='zipFile'> </param>
		/// <param name='zipEntry'> </param>
		/// <returns>A nsIZipReader</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIZipReader GetInnerZip([MarshalAs(UnmanagedType.Interface)] nsIFile  zipFile, [MarshalAs(UnmanagedType.LPStr)] System.String  zipEntry);
	}
}
