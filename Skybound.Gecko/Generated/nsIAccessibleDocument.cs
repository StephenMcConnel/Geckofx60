// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIAccessibleDocument.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIAccessibleDocument.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIAccessibleDocument </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("451242bd-8a0c-4198-ae88-c053609a4e5d")]
	public interface nsIAccessibleDocument
	{
		
		/// <summary>Member GetURLAttribute </summary>
		/// <param name='aURL'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetURLAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aURL);
		
		/// <summary>Member GetTitleAttribute </summary>
		/// <param name='aTitle'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetTitleAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aTitle);
		
		/// <summary>Member GetMimeTypeAttribute </summary>
		/// <param name='aMimeType'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMimeTypeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aMimeType);
		
		/// <summary>Member GetDocTypeAttribute </summary>
		/// <param name='aDocType'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetDocTypeAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aDocType);
		
		/// <summary>Member GetDOMDocumentAttribute </summary>
		/// <returns>A nsIDOMDocument </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMDocument  GetDOMDocumentAttribute();
		
		/// <summary>Member GetWindowAttribute </summary>
		/// <returns>A nsIDOMWindow </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMWindow  GetWindowAttribute();
		
		/// <summary>Member GetNameSpaceURIForID </summary>
		/// <param name='nameSpaceID'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetNameSpaceURIForID(short nameSpaceID);
		
		/// <summary>Member GetWindowHandleAttribute </summary>
		/// <returns>A System.IntPtr </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr  GetWindowHandleAttribute();
		
		/// <summary>Member GetParentDocumentAttribute </summary>
		/// <returns>A nsIAccessibleDocument </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessibleDocument  GetParentDocumentAttribute();
		
		/// <summary>Member GetChildDocumentCountAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetChildDocumentCountAttribute();
		
		/// <summary>Member GetChildDocumentAt </summary>
		/// <param name='index'> </param>
		/// <returns>A nsIAccessibleDocument</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIAccessibleDocument GetChildDocumentAt(System.UInt32  index);
	}
}
