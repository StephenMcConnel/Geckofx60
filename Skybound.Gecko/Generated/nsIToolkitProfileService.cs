// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIToolkitProfileService.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIToolkitProfileService.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIToolkitProfileService </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("9b434f48-438c-4f85-89de-b7f321a45341")]
	public interface nsIToolkitProfileService
	{
		
		/// <summary>Member GetStartWithLastProfileAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetStartWithLastProfileAttribute();
		
		/// <summary>Member SetStartWithLastProfileAttribute </summary>
		/// <param name='aStartWithLastProfile'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetStartWithLastProfileAttribute(System.Boolean  aStartWithLastProfile);
		
		/// <summary>Member GetStartOfflineAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetStartOfflineAttribute();
		
		/// <summary>Member SetStartOfflineAttribute </summary>
		/// <param name='aStartOffline'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetStartOfflineAttribute(System.Boolean  aStartOffline);
		
		/// <summary>Member GetProfilesAttribute </summary>
		/// <returns>A nsISimpleEnumerator </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISimpleEnumerator  GetProfilesAttribute();
		
		/// <summary>Member GetSelectedProfileAttribute </summary>
		/// <returns>A nsIToolkitProfile </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIToolkitProfile  GetSelectedProfileAttribute();
		
		/// <summary>Member SetSelectedProfileAttribute </summary>
		/// <param name='aSelectedProfile'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetSelectedProfileAttribute([MarshalAs(UnmanagedType.Interface)] nsIToolkitProfile  aSelectedProfile);
		
		/// <summary>Member GetProfileByName </summary>
		/// <param name='aName'> </param>
		/// <returns>A nsIToolkitProfile</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIToolkitProfile GetProfileByName([MarshalAs(UnmanagedType.LPStruct)] nsAUTF8String  aName);
		
		/// <summary>Member LockProfilePath </summary>
		/// <param name='aDirectory'> </param>
		/// <param name='aTempDirectory'> </param>
		/// <returns>A nsIProfileLock</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIProfileLock LockProfilePath([MarshalAs(UnmanagedType.Interface)] nsILocalFile  aDirectory, [MarshalAs(UnmanagedType.Interface)] nsILocalFile  aTempDirectory);
		
		/// <summary>Member CreateProfile </summary>
		/// <param name='aRootDir'> </param>
		/// <param name='aTempDir'> </param>
		/// <param name='aName'> </param>
		/// <returns>A nsIToolkitProfile</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIToolkitProfile CreateProfile([MarshalAs(UnmanagedType.Interface)] nsILocalFile  aRootDir, [MarshalAs(UnmanagedType.Interface)] nsILocalFile  aTempDir, [MarshalAs(UnmanagedType.LPStruct)] nsAUTF8String  aName);
		
		/// <summary>Member GetProfileCountAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetProfileCountAttribute();
		
		/// <summary>Member Flush </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Flush();
	}
}
