// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsICacheService.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsICacheService.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsICacheService </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("14dbe1e9-f3bc-45af-92f4-2c574fcd4e39")]
	public interface nsICacheService
	{
		
		/// <summary>Member CreateSession </summary>
		/// <param name='clientID'> </param>
		/// <param name='storagePolicy'> </param>
		/// <param name='streamBased'> </param>
		/// <returns>A nsICacheSession</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsICacheSession CreateSession([MarshalAs(UnmanagedType.LPStr)] System.String  clientID, System.IntPtr storagePolicy, System.Boolean  streamBased);
		
		/// <summary>Member VisitEntries </summary>
		/// <param name='visitor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void VisitEntries([MarshalAs(UnmanagedType.Interface)] nsICacheVisitor  visitor);
		
		/// <summary>Member EvictEntries </summary>
		/// <param name='storagePolicy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void EvictEntries(System.IntPtr storagePolicy);
		
		/// <summary>Member GetCacheIOTargetAttribute </summary>
		/// <returns>A nsIEventTarget </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIEventTarget  GetCacheIOTargetAttribute();
	}
}
