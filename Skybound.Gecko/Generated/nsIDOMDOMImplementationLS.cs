// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIDOMDOMImplementationLS.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMDOMImplementationLS.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIDOMDOMImplementationLS </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("e2c8b03c-a49a-4923-81b0-ba9a86da0e21")]
	public interface nsIDOMDOMImplementationLS
	{
		
		/// <summary>Member CreateLSParser </summary>
		/// <param name='mode'> </param>
		/// <param name='schemaType'> </param>
		/// <returns>A nsIDOMLSParser</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMLSParser CreateLSParser(ushort mode, [MarshalAs(UnmanagedType.LPStruct)] nsAString schemaType);
		
		/// <summary>Member CreateLSSerializer </summary>
		/// <returns>A nsIDOMLSSerializer</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMLSSerializer CreateLSSerializer();
		
		/// <summary>Member CreateLSInput </summary>
		/// <returns>A nsIDOMLSInput</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMLSInput CreateLSInput();
		
		/// <summary>Member CreateLSOutput </summary>
		/// <returns>A nsIDOMLSOutput</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMLSOutput CreateLSOutput();
	}
}
