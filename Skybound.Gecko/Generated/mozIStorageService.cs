// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: mozIStorageService.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file mozIStorageService.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>mozIStorageService </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("fe8e95cb-b377-4c8d-bccb-d9198c67542b")]
	public interface mozIStorageService
	{
		
		/// <summary>Member OpenSpecialDatabase </summary>
		/// <param name='aStorageKey'> </param>
		/// <returns>A mozIStorageConnection</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		mozIStorageConnection OpenSpecialDatabase([MarshalAs(UnmanagedType.LPStr)] System.String  aStorageKey);
		
		/// <summary>Member OpenDatabase </summary>
		/// <param name='aDatabaseFile'> </param>
		/// <returns>A mozIStorageConnection</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		mozIStorageConnection OpenDatabase([MarshalAs(UnmanagedType.Interface)] nsIFile  aDatabaseFile);
		
		/// <summary>Member OpenUnsharedDatabase </summary>
		/// <param name='aDatabaseFile'> </param>
		/// <returns>A mozIStorageConnection</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		mozIStorageConnection OpenUnsharedDatabase([MarshalAs(UnmanagedType.Interface)] nsIFile  aDatabaseFile);
		
		/// <summary>Member BackupDatabaseFile </summary>
		/// <param name='aDBFile'> </param>
		/// <param name='aBackupFileName'> </param>
		/// <param name='aBackupParentDirectory'> </param>
		/// <returns>A nsIFile</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIFile BackupDatabaseFile([MarshalAs(UnmanagedType.Interface)] nsIFile  aDBFile, [MarshalAs(UnmanagedType.LPStruct)] nsAString aBackupFileName, [MarshalAs(UnmanagedType.Interface)] nsIFile  aBackupParentDirectory);
	}
}
