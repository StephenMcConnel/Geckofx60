// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIDOM3TypeInfo.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIDOM3TypeInfo.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIDOM3TypeInfo </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("2a1088c7-499a-49a7-9d3b-1970d21532ab")]
	public interface nsIDOM3TypeInfo
	{
		
		/// <summary>Member GetTypeNameAttribute </summary>
		/// <param name='aTypeName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetTypeNameAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aTypeName);
		
		/// <summary>Member GetTypeNamespaceAttribute </summary>
		/// <param name='aTypeNamespace'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetTypeNamespaceAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aTypeNamespace);
		
		/// <summary>Member IsDerivedFrom </summary>
		/// <param name='typeNamespaceArg'> </param>
		/// <param name='typeNameArg'> </param>
		/// <param name='derivationMethod'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsDerivedFrom([MarshalAs(UnmanagedType.LPStruct)] nsAString typeNamespaceArg, [MarshalAs(UnmanagedType.LPStruct)] nsAString typeNameArg, System.UInt32  derivationMethod);
	}
}
