// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIAccessibleEditableText.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIAccessibleEditableText.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIAccessibleEditableText </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("52837507-202d-4e72-a482-5f068a1fd720")]
	public interface nsIAccessibleEditableText
	{
		
		/// <summary>Member SetAttributes </summary>
		/// <param name='startPos'> </param>
		/// <param name='endPos'> </param>
		/// <param name='attributes'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAttributes(System.Int32  startPos, System.Int32  endPos, [MarshalAs(UnmanagedType.Interface)] nsISupports  attributes);
		
		/// <summary>Member SetTextContents </summary>
		/// <param name='text'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetTextContents([MarshalAs(UnmanagedType.LPStruct)] nsAString text);
		
		/// <summary>Member InsertText </summary>
		/// <param name='text'> </param>
		/// <param name='position'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InsertText([MarshalAs(UnmanagedType.LPStruct)] nsAString text, System.Int32  position);
		
		/// <summary>Member CopyText </summary>
		/// <param name='startPos'> </param>
		/// <param name='endPos'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CopyText(System.Int32  startPos, System.Int32  endPos);
		
		/// <summary>Member CutText </summary>
		/// <param name='startPos'> </param>
		/// <param name='endPos'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CutText(System.Int32  startPos, System.Int32  endPos);
		
		/// <summary>Member DeleteText </summary>
		/// <param name='startPos'> </param>
		/// <param name='endPos'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DeleteText(System.Int32  startPos, System.Int32  endPos);
		
		/// <summary>Member PasteText </summary>
		/// <param name='position'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void PasteText(System.Int32  position);
		
		/// <summary>Member GetAssociatedEditorAttribute </summary>
		/// <returns>A nsIEditor </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIEditor  GetAssociatedEditorAttribute();
	}
}
