// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIChromeRegistry.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIChromeRegistry.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIChromeRegistry </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("249fb5ad-ae29-4e2c-a728-ba5cf464d188")]
	public interface nsIChromeRegistry
	{
		
		/// <summary>Member ConvertChromeURL </summary>
		/// <param name='aChromeURL'> </param>
		/// <returns>A nsIURI</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIURI ConvertChromeURL([MarshalAs(UnmanagedType.Interface)] nsIURI  aChromeURL);
		
		/// <summary>Member CheckForNewChrome </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CheckForNewChrome();
		
		/// <summary>Member WrappersEnabled </summary>
		/// <param name='aURI'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool WrappersEnabled([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
	}
	
	/// <summary>nsIXULChromeRegistry </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("c2461347-2b8f-48c7-9d59-3a61fb868828")]
	public interface nsIXULChromeRegistry : nsIChromeRegistry
	{
		
		/// <summary>Member ConvertChromeURL </summary>
		/// <param name='aChromeURL'> </param>
		/// <returns>A nsIURI</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIURI ConvertChromeURL([MarshalAs(UnmanagedType.Interface)] nsIURI  aChromeURL);
		
		/// <summary>Member CheckForNewChrome </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void CheckForNewChrome();
		
		/// <summary>Member WrappersEnabled </summary>
		/// <param name='aURI'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool WrappersEnabled([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member ReloadChrome </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ReloadChrome();
		
		/// <summary>Member GetSelectedLocale </summary>
		/// <param name='packageName'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetSelectedLocale([MarshalAs(UnmanagedType.LPStruct)] nsAString  packageName);
		
		/// <summary>Member IsLocaleRTL </summary>
		/// <param name='package'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsLocaleRTL([MarshalAs(UnmanagedType.LPStruct)] nsAString  package);
		
		/// <summary>Member RefreshSkins </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RefreshSkins();
		
		/// <summary>Member AllowScriptsForPackage </summary>
		/// <param name='url'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool AllowScriptsForPackage([MarshalAs(UnmanagedType.Interface)] nsIURI  url);
		
		/// <summary>Member AllowContentToAccess </summary>
		/// <param name='url'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool AllowContentToAccess([MarshalAs(UnmanagedType.Interface)] nsIURI  url);
	}
}
