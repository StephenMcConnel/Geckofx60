// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsISocketTransport.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsISocketTransport.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsISocketTransport </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("19c37caa-fb41-4c32-bbf1-c6b31b75d789")]
	public interface nsISocketTransport : nsITransport
	{
		
		/// <summary>Member OpenInputStream </summary>
		/// <param name='aFlags'> </param>
		/// <param name='aSegmentSize'> </param>
		/// <param name='aSegmentCount'> </param>
		/// <returns>A nsIInputStream</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIInputStream OpenInputStream(System.UInt32  aFlags, System.UInt32  aSegmentSize, System.UInt32  aSegmentCount);
		
		/// <summary>Member OpenOutputStream </summary>
		/// <param name='aFlags'> </param>
		/// <param name='aSegmentSize'> </param>
		/// <param name='aSegmentCount'> </param>
		/// <returns>A nsIOutputStream</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIOutputStream OpenOutputStream(System.UInt32  aFlags, System.UInt32  aSegmentSize, System.UInt32  aSegmentCount);
		
		/// <summary>Member Close </summary>
		/// <param name='aReason'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Close(System.Int32  aReason);
		
		/// <summary>Member SetEventSink </summary>
		/// <param name='aSink'> </param>
		/// <param name='aEventTarget'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void SetEventSink([MarshalAs(UnmanagedType.Interface)] nsITransportEventSink  aSink, [MarshalAs(UnmanagedType.Interface)] nsIEventTarget  aEventTarget);
		
		/// <summary>Member GetHostAttribute </summary>
		/// <param name='aHost'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetHostAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aHost);
		
		/// <summary>Member GetPortAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetPortAttribute();
		
		/// <summary>Member GetPeerAddr </summary>
		/// <returns>A System.IntPtr</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr GetPeerAddr();
		
		/// <summary>Member GetSelfAddr </summary>
		/// <returns>A System.IntPtr</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr GetSelfAddr();
		
		/// <summary>Member GetSecurityInfoAttribute </summary>
		/// <returns>A nsISupports </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports  GetSecurityInfoAttribute();
		
		/// <summary>Member GetSecurityCallbacksAttribute </summary>
		/// <returns>A nsIInterfaceRequestor </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIInterfaceRequestor  GetSecurityCallbacksAttribute();
		
		/// <summary>Member SetSecurityCallbacksAttribute </summary>
		/// <param name='aSecurityCallbacks'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetSecurityCallbacksAttribute([MarshalAs(UnmanagedType.Interface)] nsIInterfaceRequestor  aSecurityCallbacks);
		
		/// <summary>Member IsAlive </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsAlive();
		
		/// <summary>Member GetTimeout </summary>
		/// <param name='aType'> </param>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetTimeout(System.UInt32  aType);
		
		/// <summary>Member SetTimeout </summary>
		/// <param name='aType'> </param>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetTimeout(System.UInt32  aType, System.UInt32  aValue);
		
		/// <summary>Member GetConnectionFlagsAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetConnectionFlagsAttribute();
		
		/// <summary>Member SetConnectionFlagsAttribute </summary>
		/// <param name='aConnectionFlags'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetConnectionFlagsAttribute(System.UInt32  aConnectionFlags);
		
		/// <summary>Member GetQoSBitsAttribute </summary>
		/// <returns>A System.IntPtr </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr  GetQoSBitsAttribute();
		
		/// <summary>Member SetQoSBitsAttribute </summary>
		/// <param name='aQoSBits'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetQoSBitsAttribute(System.IntPtr  aQoSBits);
	}
}
