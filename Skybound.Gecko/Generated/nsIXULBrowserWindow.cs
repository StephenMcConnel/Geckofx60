// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIXULBrowserWindow.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIXULBrowserWindow.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIXULBrowserWindow </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("67a601df-f091-4894-a2e2-2e6cfebb35ea")]
	public interface nsIXULBrowserWindow
	{
		
		/// <summary>Member SetJSStatus </summary>
		/// <param name='status'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetJSStatus([MarshalAs(UnmanagedType.LPStruct)] nsAString status);
		
		/// <summary>Member SetJSDefaultStatus </summary>
		/// <param name='status'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetJSDefaultStatus([MarshalAs(UnmanagedType.LPStruct)] nsAString status);
		
		/// <summary>Member SetOverLink </summary>
		/// <param name='link'> </param>
		/// <param name='element'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOverLink([MarshalAs(UnmanagedType.LPStruct)] nsAString link, [MarshalAs(UnmanagedType.Interface)] nsIDOMElement  element);
		
		/// <summary>Member OnBeforeLinkTraversal </summary>
		/// <param name='originalTarget'> </param>
		/// <param name='linkURI'> </param>
		/// <param name='linkNode'> </param>
		/// <param name='isAppTab'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString OnBeforeLinkTraversal([MarshalAs(UnmanagedType.LPStruct)] nsAString originalTarget, [MarshalAs(UnmanagedType.Interface)] nsIURI  linkURI, [MarshalAs(UnmanagedType.Interface)] nsIDOMNode  linkNode, System.Boolean  isAppTab);
	}
}
