// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIGConfService.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIGConfService.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIGConfService </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("5009acae-6973-48c3-b6d6-52c692cc5d9d")]
	public interface nsIGConfService
	{
		
		/// <summary>Member GetBool </summary>
		/// <param name='key'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool GetBool([MarshalAs(UnmanagedType.LPStruct)] nsAString  key);
		
		/// <summary>Member GetString </summary>
		/// <param name='key'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetString([MarshalAs(UnmanagedType.LPStruct)] nsAString  key);
		
		/// <summary>Member GetInt </summary>
		/// <param name='key'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetInt([MarshalAs(UnmanagedType.LPStruct)] nsAString  key);
		
		/// <summary>Member GetFloat </summary>
		/// <param name='key'> </param>
		/// <returns>A System.Double</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		double GetFloat([MarshalAs(UnmanagedType.LPStruct)] nsAString  key);
		
		/// <summary>Member GetStringList </summary>
		/// <param name='key'> </param>
		/// <returns>A nsIArray</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIArray GetStringList([MarshalAs(UnmanagedType.LPStruct)] nsAString  key);
		
		/// <summary>Member SetBool </summary>
		/// <param name='key'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBool([MarshalAs(UnmanagedType.LPStruct)] nsAString  key, System.Boolean  value);
		
		/// <summary>Member SetString </summary>
		/// <param name='key'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetString([MarshalAs(UnmanagedType.LPStruct)] nsAString  key, [MarshalAs(UnmanagedType.LPStruct)] nsAString  value);
		
		/// <summary>Member SetInt </summary>
		/// <param name='key'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetInt([MarshalAs(UnmanagedType.LPStruct)] nsAString  key, System.Int32  value);
		
		/// <summary>Member SetFloat </summary>
		/// <param name='key'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFloat([MarshalAs(UnmanagedType.LPStruct)] nsAString  key, double value);
		
		/// <summary>Member GetAppForProtocol </summary>
		/// <param name='scheme'> </param>
		/// <param name='enabled'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetAppForProtocol([MarshalAs(UnmanagedType.LPStruct)] nsAString  scheme, out System.Boolean  enabled);
		
		/// <summary>Member HandlerRequiresTerminal </summary>
		/// <param name='scheme'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool HandlerRequiresTerminal([MarshalAs(UnmanagedType.LPStruct)] nsAString  scheme);
		
		/// <summary>Member SetAppForProtocol </summary>
		/// <param name='scheme'> </param>
		/// <param name='command'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAppForProtocol([MarshalAs(UnmanagedType.LPStruct)] nsAString  scheme, [MarshalAs(UnmanagedType.LPStruct)] nsAString  command);
	}
}
