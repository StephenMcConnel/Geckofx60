// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsISupportsArray.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsISupportsArray.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsISupportsArray </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("791eafa0-b9e6-11d1-8031-006008159b5a")]
	public interface nsISupportsArray : nsICollection
	{
		
		/// <summary>Member Read </summary>
		/// <param name='aInputStream'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Read([MarshalAs(UnmanagedType.Interface)] nsIObjectInputStream  aInputStream);
		
		/// <summary>Member Write </summary>
		/// <param name='aOutputStream'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Write([MarshalAs(UnmanagedType.Interface)] nsIObjectOutputStream  aOutputStream);
		
		/// <summary>Member Count </summary>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new uint Count();
		
		/// <summary>Member GetElementAt </summary>
		/// <param name='index'> </param>
		/// <returns>A nsISupports</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsISupports GetElementAt(System.UInt32  index);
		
		/// <summary>Member QueryElementAt </summary>
		/// <param name='index'> </param>
		/// <param name='uuid'> </param>
		/// <returns>A System.IntPtr </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.IntPtr  QueryElementAt(System.UInt32  index, ref System.Guid uuid);
		
		/// <summary>Member SetElementAt </summary>
		/// <param name='index'> </param>
		/// <param name='item'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void SetElementAt(System.UInt32  index, [MarshalAs(UnmanagedType.Interface)] nsISupports  item);
		
		/// <summary>Member AppendElement </summary>
		/// <param name='item'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void AppendElement([MarshalAs(UnmanagedType.Interface)] nsISupports  item);
		
		/// <summary>Member RemoveElement </summary>
		/// <param name='item'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void RemoveElement([MarshalAs(UnmanagedType.Interface)] nsISupports  item);
		
		/// <summary>Member Enumerate </summary>
		/// <returns>A nsIEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIEnumerator Enumerate();
		
		/// <summary>Member Clear </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Clear();
		
		/// <summary>Member Equals </summary>
		/// <param name='other'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool Equals([MarshalAs(UnmanagedType.Interface)] nsISupportsArray  other);
		
		/// <summary>Member ElementAt </summary>
		/// <param name='aIndex'> </param>
		/// <returns>A nsISupports</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports ElementAt(System.UInt32  aIndex);
		
		/// <summary>Member IndexOf </summary>
		/// <param name='aPossibleElement'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int IndexOf([MarshalAs(UnmanagedType.Interface)] nsISupports  aPossibleElement);
		
		/// <summary>Member IndexOfStartingAt </summary>
		/// <param name='aPossibleElement'> </param>
		/// <param name='aStartIndex'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int IndexOfStartingAt([MarshalAs(UnmanagedType.Interface)] nsISupports  aPossibleElement, System.UInt32  aStartIndex);
		
		/// <summary>Member LastIndexOf </summary>
		/// <param name='aPossibleElement'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int LastIndexOf([MarshalAs(UnmanagedType.Interface)] nsISupports  aPossibleElement);
		
		/// <summary>Member GetIndexOf </summary>
		/// <param name='aPossibleElement'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetIndexOf([MarshalAs(UnmanagedType.Interface)] nsISupports  aPossibleElement);
		
		/// <summary>Member GetIndexOfStartingAt </summary>
		/// <param name='aPossibleElement'> </param>
		/// <param name='aStartIndex'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetIndexOfStartingAt([MarshalAs(UnmanagedType.Interface)] nsISupports  aPossibleElement, System.UInt32  aStartIndex);
		
		/// <summary>Member GetLastIndexOf </summary>
		/// <param name='aPossibleElement'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetLastIndexOf([MarshalAs(UnmanagedType.Interface)] nsISupports  aPossibleElement);
		
		/// <summary>Member InsertElementAt </summary>
		/// <param name='aElement'> </param>
		/// <param name='aIndex'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool InsertElementAt([MarshalAs(UnmanagedType.Interface)] nsISupports  aElement, System.UInt32  aIndex);
		
		/// <summary>Member ReplaceElementAt </summary>
		/// <param name='aElement'> </param>
		/// <param name='aIndex'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool ReplaceElementAt([MarshalAs(UnmanagedType.Interface)] nsISupports  aElement, System.UInt32  aIndex);
		
		/// <summary>Member RemoveElementAt </summary>
		/// <param name='aIndex'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool RemoveElementAt(System.UInt32  aIndex);
		
		/// <summary>Member RemoveLastElement </summary>
		/// <param name='aElement'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool RemoveLastElement([MarshalAs(UnmanagedType.Interface)] nsISupports  aElement);
		
		/// <summary>Member DeleteLastElement </summary>
		/// <param name='aElement'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DeleteLastElement([MarshalAs(UnmanagedType.Interface)] nsISupports  aElement);
		
		/// <summary>Member DeleteElementAt </summary>
		/// <param name='aIndex'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DeleteElementAt(System.UInt32  aIndex);
		
		/// <summary>Member AppendElements </summary>
		/// <param name='aElements'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool AppendElements([MarshalAs(UnmanagedType.Interface)] nsISupportsArray  aElements);
		
		/// <summary>Member Compact </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Compact();
		
		/// <summary>Member EnumerateForwards </summary>
		/// <param name='aFunc'> </param>
		/// <param name='aData'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool EnumerateForwards(System.IntPtr aFunc, System.IntPtr  aData);
		
		/// <summary>Member EnumerateBackwards </summary>
		/// <param name='aFunc'> </param>
		/// <param name='aData'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool EnumerateBackwards(System.IntPtr aFunc, System.IntPtr  aData);
		
		/// <summary>Member Clone </summary>
		/// <returns>A nsISupportsArray</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupportsArray Clone();
		
		/// <summary>Member MoveElement </summary>
		/// <param name='aFrom'> </param>
		/// <param name='aTo'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool MoveElement(System.Int32  aFrom, System.Int32  aTo);
		
		/// <summary>Member InsertElementsAt </summary>
		/// <param name='aOther'> </param>
		/// <param name='aIndex'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool InsertElementsAt([MarshalAs(UnmanagedType.Interface)] nsISupportsArray  aOther, System.UInt32  aIndex);
		
		/// <summary>Member RemoveElementsAt </summary>
		/// <param name='aIndex'> </param>
		/// <param name='aCount'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool RemoveElementsAt(System.UInt32  aIndex, System.UInt32  aCount);
		
		/// <summary>Member SizeTo </summary>
		/// <param name='aSize'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool SizeTo(System.Int32  aSize);
	}
}
