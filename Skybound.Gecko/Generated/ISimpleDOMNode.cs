// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: ISimpleDOMNode.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file ISimpleDOMNode.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>ISimpleDOMNode </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("1814ceeb-49e2-407f-af99-fa755a7d2607")]
	public interface ISimpleDOMNode
	{
		
		/// <summary>Member get_NodeInfo </summary>
		/// <param name='nodeName'> </param>
		/// <param name='nameSpaceID'> </param>
		/// <param name='nodeValue'> </param>
		/// <param name='numChildren'> </param>
		/// <param name='uniqueID'> </param>
		/// <returns>A System.UInt16</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		ushort get_NodeInfo([MarshalAs(UnmanagedType.BStr)] out string nodeName, out short nameSpaceID, [MarshalAs(UnmanagedType.BStr)] out string nodeValue, out uint numChildren, out uint uniqueID);
		
		/// <summary>Member get_Attributes </summary>
		/// <param name='maxAttribs'> </param>
		/// <param name='attribNames'> </param>
		/// <param name='nameSpaceID'> </param>
		/// <param name='attribValues'> </param>
		/// <returns>A System.UInt16</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		ushort get_Attributes(ushort maxAttribs, [MarshalAs(UnmanagedType.BStr, SizeParamIndex=0)] out string attribNames, out short nameSpaceID, [MarshalAs(UnmanagedType.BStr, SizeParamIndex=0)] out string attribValues);
		
		/// <summary>Member get_AttributesForNames </summary>
		/// <param name='numAttribs'> </param>
		/// <param name='attribNames'> </param>
		/// <param name='nameSpaceID'> </param>
		/// <returns>A System.String</returns>
		[return: MarshalAs(UnmanagedType.BStr, SizeParamIndex=0)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		string get_AttributesForNames(ushort numAttribs, [MarshalAs(UnmanagedType.BStr, SizeParamIndex=0)] string attribNames, short nameSpaceID);
		
		/// <summary>Member get_ComputedStyle </summary>
		/// <param name='maxStyleProperties'> </param>
		/// <param name='useAlternateView'> </param>
		/// <param name='styleProperties'> </param>
		/// <param name='styleValues'> </param>
		/// <returns>A System.UInt16</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		ushort get_ComputedStyle(ushort maxStyleProperties, System.Boolean  useAlternateView, [MarshalAs(UnmanagedType.BStr, SizeParamIndex=0)] out string styleProperties, [MarshalAs(UnmanagedType.BStr, SizeParamIndex=0)] out string styleValues);
		
		/// <summary>Member get_ComputedStyleForProperties </summary>
		/// <param name='numStyleProperties'> </param>
		/// <param name='useAlternateView'> </param>
		/// <param name='styleProperties'> </param>
		/// <returns>A System.String</returns>
		[return: MarshalAs(UnmanagedType.BStr, SizeParamIndex=0)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		string get_ComputedStyleForProperties(ushort numStyleProperties, System.Boolean  useAlternateView, [MarshalAs(UnmanagedType.BStr, SizeParamIndex=0)] string styleProperties);
		
		/// <summary>Member ScrollTo </summary>
		/// <param name='placeTopLeft'> </param>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint ScrollTo(System.Boolean  placeTopLeft);
		
		/// <summary>Gets a ParentNode </summary>
		/// <returns>A ISimpleDOMNode </returns>
		ISimpleDOMNode ParentNode
		{
			[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
			[return: MarshalAs(UnmanagedType.Interface)]
			get;
		}
		
		/// <summary>Gets a FirstChild </summary>
		/// <returns>A ISimpleDOMNode </returns>
		ISimpleDOMNode FirstChild
		{
			[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
			[return: MarshalAs(UnmanagedType.Interface)]
			get;
		}
		
		/// <summary>Gets a LastChild </summary>
		/// <returns>A ISimpleDOMNode </returns>
		ISimpleDOMNode LastChild
		{
			[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
			[return: MarshalAs(UnmanagedType.Interface)]
			get;
		}
		
		/// <summary>Gets a PreviousSibling </summary>
		/// <returns>A ISimpleDOMNode </returns>
		ISimpleDOMNode PreviousSibling
		{
			[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
			[return: MarshalAs(UnmanagedType.Interface)]
			get;
		}
		
		/// <summary>Gets a NextSibling </summary>
		/// <returns>A ISimpleDOMNode </returns>
		ISimpleDOMNode NextSibling
		{
			[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
			[return: MarshalAs(UnmanagedType.Interface)]
			get;
		}
		
		/// <summary>Member get_ChildAt </summary>
		/// <param name='childIndex'> </param>
		/// <returns>A ISimpleDOMNode</returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		ISimpleDOMNode get_ChildAt(System.UInt32  childIndex);
		
		/// <summary>Gets a InnerHTML </summary>
		/// <returns>A System.String </returns>
		string InnerHTML
		{
			[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
			[return: MarshalAs(UnmanagedType.BStr)]
			get;
		}
		
		/// <summary>Gets a LocalInterface </summary>
		/// <returns>A System.IntPtr </returns>
		System.IntPtr LocalInterface
		{
			[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
			get;
		}
		
		/// <summary>Gets a Language </summary>
		/// <returns>A System.String </returns>
		string Language
		{
			[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
			[return: MarshalAs(UnmanagedType.BStr)]
			get;
		}
	}
}
