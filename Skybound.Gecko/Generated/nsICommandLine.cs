// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsICommandLine.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsICommandLine.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsICommandLine </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("bc3173bd-aa46-46a0-9d25-d9867a9659b6")]
	public interface nsICommandLine
	{
		
		/// <summary>Member GetLengthAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetLengthAttribute();
		
		/// <summary>Member GetArgument </summary>
		/// <param name='aIndex'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetArgument(System.Int32  aIndex);
		
		/// <summary>Member FindFlag </summary>
		/// <param name='aFlag'> </param>
		/// <param name='aCaseSensitive'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int FindFlag([MarshalAs(UnmanagedType.LPStruct)] nsAString aFlag, System.Boolean  aCaseSensitive);
		
		/// <summary>Member RemoveArguments </summary>
		/// <param name='aStart'> </param>
		/// <param name='aEnd'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveArguments(System.Int32  aStart, System.Int32  aEnd);
		
		/// <summary>Member HandleFlag </summary>
		/// <param name='aFlag'> </param>
		/// <param name='aCaseSensitive'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool HandleFlag([MarshalAs(UnmanagedType.LPStruct)] nsAString aFlag, System.Boolean  aCaseSensitive);
		
		/// <summary>Member HandleFlagWithParam </summary>
		/// <param name='aFlag'> </param>
		/// <param name='aCaseSensitive'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString HandleFlagWithParam([MarshalAs(UnmanagedType.LPStruct)] nsAString aFlag, System.Boolean  aCaseSensitive);
		
		/// <summary>Member GetStateAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetStateAttribute();
		
		/// <summary>Member GetPreventDefaultAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetPreventDefaultAttribute();
		
		/// <summary>Member SetPreventDefaultAttribute </summary>
		/// <param name='aPreventDefault'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetPreventDefaultAttribute(System.Boolean  aPreventDefault);
		
		/// <summary>Member GetWorkingDirectoryAttribute </summary>
		/// <returns>A nsIFile </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIFile  GetWorkingDirectoryAttribute();
		
		/// <summary>Member GetWindowContextAttribute </summary>
		/// <returns>A nsIDOMWindow </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMWindow  GetWindowContextAttribute();
		
		/// <summary>Member ResolveFile </summary>
		/// <param name='aArgument'> </param>
		/// <returns>A nsIFile</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIFile ResolveFile([MarshalAs(UnmanagedType.LPStruct)] nsAString aArgument);
		
		/// <summary>Member ResolveURI </summary>
		/// <param name='aArgument'> </param>
		/// <returns>A nsIURI</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIURI ResolveURI([MarshalAs(UnmanagedType.LPStruct)] nsAString aArgument);
	}
}
