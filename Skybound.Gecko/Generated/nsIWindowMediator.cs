// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIWindowMediator.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIWindowMediator.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIWindowMediator </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("0659cb81-faad-11d2-8e19-b206620a657c")]
	public interface nsIWindowMediator
	{
		
		/// <summary>Member GetEnumerator </summary>
		/// <param name='aWindowType'> </param>
		/// <returns>A nsISimpleEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISimpleEnumerator GetEnumerator([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string aWindowType);
		
		/// <summary>Member GetXULWindowEnumerator </summary>
		/// <param name='aWindowType'> </param>
		/// <returns>A nsISimpleEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISimpleEnumerator GetXULWindowEnumerator([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string aWindowType);
		
		/// <summary>Member GetZOrderDOMWindowEnumerator </summary>
		/// <param name='aWindowType'> </param>
		/// <param name='aFrontToBack'> </param>
		/// <returns>A nsISimpleEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISimpleEnumerator GetZOrderDOMWindowEnumerator([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string aWindowType, System.Boolean  aFrontToBack);
		
		/// <summary>Member GetZOrderXULWindowEnumerator </summary>
		/// <param name='aWindowType'> </param>
		/// <param name='aFrontToBack'> </param>
		/// <returns>A nsISimpleEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISimpleEnumerator GetZOrderXULWindowEnumerator([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string aWindowType, System.Boolean  aFrontToBack);
		
		/// <summary>Member GetMostRecentWindow </summary>
		/// <param name='aWindowType'> </param>
		/// <returns>A nsIDOMWindowInternal</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMWindowInternal GetMostRecentWindow([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string aWindowType);
		
		/// <summary>Member RegisterWindow </summary>
		/// <param name='aWindow'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RegisterWindow([MarshalAs(UnmanagedType.Interface)] nsIXULWindow  aWindow);
		
		/// <summary>Member UnregisterWindow </summary>
		/// <param name='aWindow'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void UnregisterWindow([MarshalAs(UnmanagedType.Interface)] nsIXULWindow  aWindow);
		
		/// <summary>Member UpdateWindowTimeStamp </summary>
		/// <param name='aWindow'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void UpdateWindowTimeStamp([MarshalAs(UnmanagedType.Interface)] nsIXULWindow  aWindow);
		
		/// <summary>Member UpdateWindowTitle </summary>
		/// <param name='aWindow'> </param>
		/// <param name='inTitle'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void UpdateWindowTitle([MarshalAs(UnmanagedType.Interface)] nsIXULWindow  aWindow, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string inTitle);
		
		/// <summary>Member CalculateZPosition </summary>
		/// <param name='inWindow'> </param>
		/// <param name='inPosition'> </param>
		/// <param name='inBelow'> </param>
		/// <param name='outPosition'> </param>
		/// <param name='outBelow'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool CalculateZPosition([MarshalAs(UnmanagedType.Interface)] nsIXULWindow  inWindow, System.UInt32  inPosition, System.IntPtr  inBelow, out System.UInt32  outPosition, out System.IntPtr  outBelow);
		
		/// <summary>Member SetZPosition </summary>
		/// <param name='inWindow'> </param>
		/// <param name='inPosition'> </param>
		/// <param name='inBelow'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetZPosition([MarshalAs(UnmanagedType.Interface)] nsIXULWindow  inWindow, System.UInt32  inPosition, [MarshalAs(UnmanagedType.Interface)] nsIXULWindow  inBelow);
		
		/// <summary>Member GetZLevel </summary>
		/// <param name='aWindow'> </param>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetZLevel([MarshalAs(UnmanagedType.Interface)] nsIXULWindow  aWindow);
		
		/// <summary>Member SetZLevel </summary>
		/// <param name='aWindow'> </param>
		/// <param name='aZLevel'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetZLevel([MarshalAs(UnmanagedType.Interface)] nsIXULWindow  aWindow, System.UInt32  aZLevel);
		
		/// <summary>Member AddListener </summary>
		/// <param name='aListener'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AddListener([MarshalAs(UnmanagedType.Interface)] nsIWindowMediatorListener  aListener);
		
		/// <summary>Member RemoveListener </summary>
		/// <param name='aListener'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveListener([MarshalAs(UnmanagedType.Interface)] nsIWindowMediatorListener  aListener);
	}
}
