// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMPkcs11.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIDOMPkcs11 </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("9fd42950-25e7-11d4-8a7d-006008c844c3")]
	public interface nsIDOMPkcs11
	{
		
		/// <summary>Member Deletemodule </summary>
		/// <param name='moduleName'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int Deletemodule([MarshalAs(UnmanagedType.LPStruct)] nsAString moduleName);
		
		/// <summary>Member Addmodule </summary>
		/// <param name='moduleName'> </param>
		/// <param name='libraryFullPath'> </param>
		/// <param name='cryptoMechanismFlags'> </param>
		/// <param name='cipherFlags'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int Addmodule([MarshalAs(UnmanagedType.LPStruct)] nsAString moduleName, [MarshalAs(UnmanagedType.LPStruct)] nsAString libraryFullPath, System.Int32  cryptoMechanismFlags, System.Int32  cipherFlags);
	}
}
