// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIBrowserHistory.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIBrowserHistory.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIBrowserHistory </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("540aca25-1e01-467f-b24c-df89cbe40f8d")]
	public interface nsIBrowserHistory : nsIGlobalHistory2
	{
		
		/// <summary>Member AddURI </summary>
		/// <param name='aURI'> </param>
		/// <param name='aRedirect'> </param>
		/// <param name='aToplevel'> </param>
		/// <param name='aReferrer'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void AddURI([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI, System.Boolean  aRedirect, System.Boolean  aToplevel, [MarshalAs(UnmanagedType.Interface)] nsIURI  aReferrer);
		
		/// <summary>Member IsVisited </summary>
		/// <param name='aURI'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool IsVisited([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member SetPageTitle </summary>
		/// <param name='aURI'> </param>
		/// <param name='aTitle'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void SetPageTitle([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI, [MarshalAs(UnmanagedType.LPStruct)] nsAString aTitle);
		
		/// <summary>Member AddPageWithDetails </summary>
		/// <param name='aURI'> </param>
		/// <param name='aTitle'> </param>
		/// <param name='aLastVisited'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AddPageWithDetails([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string aTitle, System.Int32  aLastVisited);
		
		/// <summary>Member GetLastPageVisitedAttribute </summary>
		/// <param name='aLastPageVisited'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetLastPageVisitedAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aLastPageVisited);
		
		/// <summary>Member GetCountAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetCountAttribute();
		
		/// <summary>Member RemovePage </summary>
		/// <param name='aURI'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemovePage([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member RemovePages </summary>
		/// <param name='aURIs'> </param>
		/// <param name='aLength'> </param>
		/// <param name='aDoBatchNotify'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemovePages(nsIURI  aURIs, System.UInt32  aLength, System.Boolean  aDoBatchNotify);
		
		/// <summary>Member RemovePagesFromHost </summary>
		/// <param name='aHost'> </param>
		/// <param name='aEntireDomain'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemovePagesFromHost([MarshalAs(UnmanagedType.LPStruct)] nsAString  aHost, System.Boolean  aEntireDomain);
		
		/// <summary>Member RemovePagesByTimeframe </summary>
		/// <param name='aBeginTime'> </param>
		/// <param name='aEndTime'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemovePagesByTimeframe(System.Int32  aBeginTime, System.Int32  aEndTime);
		
		/// <summary>Member RemoveVisitsByTimeframe </summary>
		/// <param name='aBeginTime'> </param>
		/// <param name='aEndTime'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveVisitsByTimeframe(System.Int32  aBeginTime, System.Int32  aEndTime);
		
		/// <summary>Member RemoveAllPages </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveAllPages();
		
		/// <summary>Member HidePage </summary>
		/// <param name='aURI'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void HidePage([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member MarkPageAsTyped </summary>
		/// <param name='aURI'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void MarkPageAsTyped([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member MarkPageAsFollowedLink </summary>
		/// <param name='aURI'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void MarkPageAsFollowedLink([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member RegisterOpenPage </summary>
		/// <param name='aURI'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RegisterOpenPage([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member UnregisterOpenPage </summary>
		/// <param name='aURI'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void UnregisterOpenPage([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
	}
}
