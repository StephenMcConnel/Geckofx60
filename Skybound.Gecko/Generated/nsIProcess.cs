// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIProcess.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIProcess.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIProcess </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("609610de-9954-4a63-8a7c-346350a86403")]
	public interface nsIProcess
	{
		
		/// <summary>Member Init </summary>
		/// <param name='executable'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Init([MarshalAs(UnmanagedType.Interface)] nsIFile  executable);
		
		/// <summary>Member Kill </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Kill();
		
		/// <summary>Member Run </summary>
		/// <param name='blocking'> </param>
		/// <param name='args'> </param>
		/// <param name='count'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Run(System.Boolean  blocking, [MarshalAs(UnmanagedType.LPStr, SizeParamIndex=2)] System.String  args, System.UInt32  count);
		
		/// <summary>Member RunAsync </summary>
		/// <param name='args'> </param>
		/// <param name='count'> </param>
		/// <param name='observer'> </param>
		/// <param name='holdWeak'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RunAsync([MarshalAs(UnmanagedType.LPStr, SizeParamIndex=1)] System.String  args, System.UInt32  count, [MarshalAs(UnmanagedType.Interface)] nsIObserver  observer, System.Boolean  holdWeak);
		
		/// <summary>Member Runw </summary>
		/// <param name='blocking'> </param>
		/// <param name='args'> </param>
		/// <param name='count'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Runw(System.Boolean  blocking, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler", SizeParamIndex=2)] string args, System.UInt32  count);
		
		/// <summary>Member RunwAsync </summary>
		/// <param name='args'> </param>
		/// <param name='count'> </param>
		/// <param name='observer'> </param>
		/// <param name='holdWeak'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RunwAsync([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler", SizeParamIndex=1)] string args, System.UInt32  count, [MarshalAs(UnmanagedType.Interface)] nsIObserver  observer, System.Boolean  holdWeak);
		
		/// <summary>Member GetPidAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetPidAttribute();
		
		/// <summary>Member GetExitValueAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetExitValueAttribute();
		
		/// <summary>Member GetIsRunningAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetIsRunningAttribute();
	}
}
