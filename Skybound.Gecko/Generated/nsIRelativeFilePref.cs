// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIRelativeFilePref.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIRelativeFilePref.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIRelativeFilePref </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("2f977d4e-5485-11d4-87e2-0010a4e75ef2")]
	public interface nsIRelativeFilePref
	{
		
		/// <summary>Member GetFileAttribute </summary>
		/// <returns>A nsILocalFile </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsILocalFile  GetFileAttribute();
		
		/// <summary>Member SetFileAttribute </summary>
		/// <param name='aFile'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFileAttribute([MarshalAs(UnmanagedType.Interface)] nsILocalFile  aFile);
		
		/// <summary>Member GetRelativeToKeyAttribute </summary>
		/// <param name='aRelativeToKey'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetRelativeToKeyAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aRelativeToKey);
		
		/// <summary>Member SetRelativeToKeyAttribute </summary>
		/// <param name='aRelativeToKey'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetRelativeToKeyAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aRelativeToKey);
	}
}
