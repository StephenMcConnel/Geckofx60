// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIHttpAuthenticator.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIHttpAuthenticator.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIHttpAuthenticator </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("16784db0-fcb1-4352-b0c9-6a3a67e3cf79")]
	public interface nsIHttpAuthenticator
	{
		
		/// <summary>Member ChallengeReceived </summary>
		/// <param name='aChannel'> </param>
		/// <param name='aChallenge'> </param>
		/// <param name='aProxyAuth'> </param>
		/// <param name='aSessionState'> </param>
		/// <param name='aContinuationState'> </param>
		/// <param name='aInvalidatesIdentity'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ChallengeReceived([MarshalAs(UnmanagedType.Interface)] nsIHttpAuthenticableChannel  aChannel, [MarshalAs(UnmanagedType.LPStr)] System.String  aChallenge, System.Boolean  aProxyAuth, [MarshalAs(UnmanagedType.Interface)] ref nsISupports  aSessionState, [MarshalAs(UnmanagedType.Interface)] ref nsISupports  aContinuationState, out System.Boolean  aInvalidatesIdentity);
		
		/// <summary>Member GenerateCredentials </summary>
		/// <param name='aChannel'> </param>
		/// <param name='aChallenge'> </param>
		/// <param name='aProxyAuth'> </param>
		/// <param name='aDomain'> </param>
		/// <param name='aUser'> </param>
		/// <param name='aPassword'> </param>
		/// <param name='aSessionState'> </param>
		/// <param name='aContinuationState'> </param>
		/// <param name='aFlags'> </param>
		/// <returns>A System.String</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		string GenerateCredentials([MarshalAs(UnmanagedType.Interface)] nsIHttpAuthenticableChannel  aChannel, [MarshalAs(UnmanagedType.LPStr)] System.String  aChallenge, System.Boolean  aProxyAuth, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string aDomain, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string aUser, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string aPassword, [MarshalAs(UnmanagedType.Interface)] ref nsISupports  aSessionState, [MarshalAs(UnmanagedType.Interface)] ref nsISupports  aContinuationState, out System.UInt32  aFlags);
		
		/// <summary>Member GetAuthFlagsAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetAuthFlagsAttribute();
	}
}
