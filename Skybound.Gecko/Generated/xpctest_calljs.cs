// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: xpctest_calljs.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file xpctest_calljs.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIXPCTestCallJS </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("38ba7d98-5a54-11d3-82ef-0060b0eb596f")]
	public interface nsIXPCTestCallJS
	{
		
		/// <summary>Member CallMethodNoArgs </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool CallMethodNoArgs();
		
		/// <summary>Member Evaluate </summary>
		/// <param name='s'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Evaluate([MarshalAs(UnmanagedType.LPStr)] System.String  s);
		
		/// <summary>Member EvaluateAndReturnError </summary>
		/// <param name='s'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int EvaluateAndReturnError(System.Int32  s);
		
		/// <summary>Member SetJSObject </summary>
		/// <param name='o'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetJSObject([MarshalAs(UnmanagedType.Interface)] nsIXPCTestCallJS  o);
		
		/// <summary>Member EvaluateAndEatErrors </summary>
		/// <param name='s'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void EvaluateAndEatErrors([MarshalAs(UnmanagedType.LPStr)] System.String  s);
		
		/// <summary>Member UnscriptableMethod </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void UnscriptableMethod();
	}
}
