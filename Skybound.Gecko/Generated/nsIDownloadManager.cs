// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIDownloadManager.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIDownloadManager.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIDownloadManager </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("bacca1ac-1b01-4a6f-9e91-c2ead1f7d2c0")]
	public interface nsIDownloadManager
	{
		
		/// <summary>Member AddDownload </summary>
		/// <param name='aDownloadType'> </param>
		/// <param name='aSource'> </param>
		/// <param name='aTarget'> </param>
		/// <param name='aDisplayName'> </param>
		/// <param name='aMIMEInfo'> </param>
		/// <param name='aStartTime'> </param>
		/// <param name='aTempFile'> </param>
		/// <param name='aCancelable'> </param>
		/// <returns>A nsIDownload</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDownload AddDownload(short aDownloadType, [MarshalAs(UnmanagedType.Interface)] nsIURI  aSource, [MarshalAs(UnmanagedType.Interface)] nsIURI  aTarget, [MarshalAs(UnmanagedType.LPStruct)] nsAString aDisplayName, [MarshalAs(UnmanagedType.Interface)] nsIMIMEInfo  aMIMEInfo, System.UInt32  aStartTime, [MarshalAs(UnmanagedType.Interface)] nsILocalFile  aTempFile, [MarshalAs(UnmanagedType.Interface)] nsICancelable  aCancelable);
		
		/// <summary>Member GetDownload </summary>
		/// <param name='aID'> </param>
		/// <returns>A nsIDownload</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDownload GetDownload(System.UInt32  aID);
		
		/// <summary>Member CancelDownload </summary>
		/// <param name='aID'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CancelDownload(System.UInt32  aID);
		
		/// <summary>Member RemoveDownload </summary>
		/// <param name='aID'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveDownload(System.UInt32  aID);
		
		/// <summary>Member RemoveDownloadsByTimeframe </summary>
		/// <param name='aBeginTime'> </param>
		/// <param name='aEndTime'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveDownloadsByTimeframe(System.Int32  aBeginTime, System.Int32  aEndTime);
		
		/// <summary>Member PauseDownload </summary>
		/// <param name='aID'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void PauseDownload(System.UInt32  aID);
		
		/// <summary>Member ResumeDownload </summary>
		/// <param name='aID'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ResumeDownload(System.UInt32  aID);
		
		/// <summary>Member RetryDownload </summary>
		/// <param name='aID'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RetryDownload(System.UInt32  aID);
		
		/// <summary>Member GetDBConnectionAttribute </summary>
		/// <returns>A mozIStorageConnection </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		mozIStorageConnection  GetDBConnectionAttribute();
		
		/// <summary>Member GetCanCleanUpAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetCanCleanUpAttribute();
		
		/// <summary>Member CleanUp </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CleanUp();
		
		/// <summary>Member GetActiveDownloadCountAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetActiveDownloadCountAttribute();
		
		/// <summary>Member GetActiveDownloadsAttribute </summary>
		/// <returns>A nsISimpleEnumerator </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISimpleEnumerator  GetActiveDownloadsAttribute();
		
		/// <summary>Member AddListener </summary>
		/// <param name='aListener'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AddListener([MarshalAs(UnmanagedType.Interface)] nsIDownloadProgressListener  aListener);
		
		/// <summary>Member RemoveListener </summary>
		/// <param name='aListener'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveListener([MarshalAs(UnmanagedType.Interface)] nsIDownloadProgressListener  aListener);
		
		/// <summary>Member GetDefaultDownloadsDirectoryAttribute </summary>
		/// <returns>A nsILocalFile </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsILocalFile  GetDefaultDownloadsDirectoryAttribute();
		
		/// <summary>Member GetUserDownloadsDirectoryAttribute </summary>
		/// <returns>A nsILocalFile </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsILocalFile  GetUserDownloadsDirectoryAttribute();
	}
}
