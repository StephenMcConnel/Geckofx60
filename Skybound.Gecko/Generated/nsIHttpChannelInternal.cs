// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIHttpChannelInternal.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIHttpChannelInternal.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIHttpChannelInternal </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("9fb2a161-d075-4bf2-b07a-26bac650cc81")]
	public interface nsIHttpChannelInternal
	{
		
		/// <summary>Member GetDocumentURIAttribute </summary>
		/// <returns>A nsIURI </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIURI  GetDocumentURIAttribute();
		
		/// <summary>Member SetDocumentURIAttribute </summary>
		/// <param name='aDocumentURI'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetDocumentURIAttribute([MarshalAs(UnmanagedType.Interface)] nsIURI  aDocumentURI);
		
		/// <summary>Member GetRequestVersion </summary>
		/// <param name='major'> </param>
		/// <param name='minor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetRequestVersion(out System.UInt32  major, out System.UInt32  minor);
		
		/// <summary>Member GetResponseVersion </summary>
		/// <param name='major'> </param>
		/// <param name='minor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetResponseVersion(out System.UInt32  major, out System.UInt32  minor);
		
		/// <summary>Member SetCookie </summary>
		/// <param name='aCookieHeader'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCookie([MarshalAs(UnmanagedType.LPStr)] System.String  aCookieHeader);
		
		/// <summary>Member SetupFallbackChannel </summary>
		/// <param name='aFallbackKey'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetupFallbackChannel([MarshalAs(UnmanagedType.LPStr)] System.String  aFallbackKey);
		
		/// <summary>Member GetForceAllowThirdPartyCookieAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetForceAllowThirdPartyCookieAttribute();
		
		/// <summary>Member SetForceAllowThirdPartyCookieAttribute </summary>
		/// <param name='aForceAllowThirdPartyCookie'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetForceAllowThirdPartyCookieAttribute(System.Boolean  aForceAllowThirdPartyCookie);
		
		/// <summary>Member GetCanceledAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetCanceledAttribute();
		
		/// <summary>Member GetChannelIsForDownloadAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetChannelIsForDownloadAttribute();
		
		/// <summary>Member SetChannelIsForDownloadAttribute </summary>
		/// <param name='aChannelIsForDownload'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetChannelIsForDownloadAttribute(System.Boolean  aChannelIsForDownload);
	}
}
