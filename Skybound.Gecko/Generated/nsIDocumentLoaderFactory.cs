// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIDocumentLoaderFactory.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIDocumentLoaderFactory.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIDocumentLoaderFactory </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("5e7d2967-5a07-444f-95d5-25b533252d38")]
	public interface nsIDocumentLoaderFactory
	{
		
		/// <summary>Member CreateInstance </summary>
		/// <param name='aCommand'> </param>
		/// <param name='aChannel'> </param>
		/// <param name='aLoadGroup'> </param>
		/// <param name='aContentType'> </param>
		/// <param name='aContainer'> </param>
		/// <param name='aExtraInfo'> </param>
		/// <param name='aDocListenerResult'> </param>
		/// <returns>A System.IntPtr</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr CreateInstance([MarshalAs(UnmanagedType.LPStr)] System.String  aCommand, [MarshalAs(UnmanagedType.Interface)] nsIChannel  aChannel, [MarshalAs(UnmanagedType.Interface)] nsILoadGroup  aLoadGroup, [MarshalAs(UnmanagedType.LPStr)] System.String  aContentType, [MarshalAs(UnmanagedType.Interface)] nsISupports  aContainer, [MarshalAs(UnmanagedType.Interface)] nsISupports  aExtraInfo, [MarshalAs(UnmanagedType.Interface)] out nsIStreamListener  aDocListenerResult);
		
		/// <summary>Member CreateInstanceForDocument </summary>
		/// <param name='aContainer'> </param>
		/// <param name='aDocument'> </param>
		/// <param name='aCommand'> </param>
		/// <returns>A System.IntPtr</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr CreateInstanceForDocument([MarshalAs(UnmanagedType.Interface)] nsISupports  aContainer, System.IntPtr aDocument, [MarshalAs(UnmanagedType.LPStr)] System.String  aCommand);
		
		/// <summary>Member CreateBlankDocument </summary>
		/// <param name='aLoadGroup'> </param>
		/// <param name='aPrincipal'> </param>
		/// <returns>A System.IntPtr</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr CreateBlankDocument([MarshalAs(UnmanagedType.Interface)] nsILoadGroup  aLoadGroup, [MarshalAs(UnmanagedType.Interface)] nsIPrincipal  aPrincipal);
	}
}
