// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMHTMLByteRanges.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIDOMHTMLByteRanges </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("992c540c-4d81-42df-80a6-f71ede2b59d8")]
	public interface nsIDOMHTMLByteRanges
	{
		
		/// <summary>
        ///The number of ranges represented by the object </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetLengthAttribute();
		
		/// <summary>
        ///The start(index) method must return the position of the first
        ///     byte of the indexth range represented by the object. </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint Start(uint index);
		
		/// <summary>
        ///The end(index) method must return the position of the byte
        ///     immediately after the last byte of the indexth range represented
        ///     by the object. (The byte position returned by this method is not
        ///     in the range itself. If the first byte of the range is the byte
        ///     at position 0, and the entire stream of bytes is in the range,
        ///     then the value of the position of the byte returned by this
        ///     method for that range will be the same as the number of bytes in
        ///     the stream.) </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint End(uint index);
	}
}
