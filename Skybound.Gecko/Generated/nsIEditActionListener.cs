// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIEditActionListener.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIEditActionListener.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIEditActionListener </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("b22907b1-ee93-11d2-8d50-000064657374")]
	public interface nsIEditActionListener
	{
		
		/// <summary>Member WillCreateNode </summary>
		/// <param name='aTag'> </param>
		/// <param name='aParent'> </param>
		/// <param name='aPosition'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WillCreateNode([MarshalAs(UnmanagedType.LPStruct)] nsAString aTag, [MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aParent, System.Int32  aPosition);
		
		/// <summary>Member DidCreateNode </summary>
		/// <param name='aTag'> </param>
		/// <param name='aNode'> </param>
		/// <param name='aParent'> </param>
		/// <param name='aPosition'> </param>
		/// <param name='aResult'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DidCreateNode([MarshalAs(UnmanagedType.LPStruct)] nsAString aTag, [MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aNode, [MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aParent, System.Int32  aPosition, System.Int32  aResult);
		
		/// <summary>Member WillInsertNode </summary>
		/// <param name='aNode'> </param>
		/// <param name='aParent'> </param>
		/// <param name='aPosition'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WillInsertNode([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aNode, [MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aParent, System.Int32  aPosition);
		
		/// <summary>Member DidInsertNode </summary>
		/// <param name='aNode'> </param>
		/// <param name='aParent'> </param>
		/// <param name='aPosition'> </param>
		/// <param name='aResult'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DidInsertNode([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aNode, [MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aParent, System.Int32  aPosition, System.Int32  aResult);
		
		/// <summary>Member WillDeleteNode </summary>
		/// <param name='aChild'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WillDeleteNode([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aChild);
		
		/// <summary>Member DidDeleteNode </summary>
		/// <param name='aChild'> </param>
		/// <param name='aResult'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DidDeleteNode([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aChild, System.Int32  aResult);
		
		/// <summary>Member WillSplitNode </summary>
		/// <param name='aExistingRightNode'> </param>
		/// <param name='aOffset'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WillSplitNode([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aExistingRightNode, System.Int32  aOffset);
		
		/// <summary>Member DidSplitNode </summary>
		/// <param name='aExistingRightNode'> </param>
		/// <param name='aOffset'> </param>
		/// <param name='aNewLeftNode'> </param>
		/// <param name='aResult'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DidSplitNode([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aExistingRightNode, System.Int32  aOffset, [MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aNewLeftNode, System.Int32  aResult);
		
		/// <summary>Member WillJoinNodes </summary>
		/// <param name='aLeftNode'> </param>
		/// <param name='aRightNode'> </param>
		/// <param name='aParent'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WillJoinNodes([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aLeftNode, [MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aRightNode, [MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aParent);
		
		/// <summary>Member DidJoinNodes </summary>
		/// <param name='aLeftNode'> </param>
		/// <param name='aRightNode'> </param>
		/// <param name='aParent'> </param>
		/// <param name='aResult'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DidJoinNodes([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aLeftNode, [MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aRightNode, [MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aParent, System.Int32  aResult);
		
		/// <summary>Member WillInsertText </summary>
		/// <param name='aTextNode'> </param>
		/// <param name='aOffset'> </param>
		/// <param name='aString'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WillInsertText([MarshalAs(UnmanagedType.Interface)] nsIDOMCharacterData  aTextNode, System.Int32  aOffset, [MarshalAs(UnmanagedType.LPStruct)] nsAString aString);
		
		/// <summary>Member DidInsertText </summary>
		/// <param name='aTextNode'> </param>
		/// <param name='aOffset'> </param>
		/// <param name='aString'> </param>
		/// <param name='aResult'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DidInsertText([MarshalAs(UnmanagedType.Interface)] nsIDOMCharacterData  aTextNode, System.Int32  aOffset, [MarshalAs(UnmanagedType.LPStruct)] nsAString aString, System.Int32  aResult);
		
		/// <summary>Member WillDeleteText </summary>
		/// <param name='aTextNode'> </param>
		/// <param name='aOffset'> </param>
		/// <param name='aLength'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WillDeleteText([MarshalAs(UnmanagedType.Interface)] nsIDOMCharacterData  aTextNode, System.Int32  aOffset, System.Int32  aLength);
		
		/// <summary>Member DidDeleteText </summary>
		/// <param name='aTextNode'> </param>
		/// <param name='aOffset'> </param>
		/// <param name='aLength'> </param>
		/// <param name='aResult'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DidDeleteText([MarshalAs(UnmanagedType.Interface)] nsIDOMCharacterData  aTextNode, System.Int32  aOffset, System.Int32  aLength, System.Int32  aResult);
		
		/// <summary>Member WillDeleteSelection </summary>
		/// <param name='aSelection'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WillDeleteSelection([MarshalAs(UnmanagedType.Interface)] nsISelection  aSelection);
		
		/// <summary>Member DidDeleteSelection </summary>
		/// <param name='aSelection'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DidDeleteSelection([MarshalAs(UnmanagedType.Interface)] nsISelection  aSelection);
	}
}
