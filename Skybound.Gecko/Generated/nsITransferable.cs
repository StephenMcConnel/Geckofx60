// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsITransferable.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsITransferable.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIFlavorDataProvider </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("7E225E5F-711C-11D7-9FAE-000393636592")]
	public interface nsIFlavorDataProvider
	{
		
		/// <summary>Member GetFlavorData </summary>
		/// <param name='aTransferable'> </param>
		/// <param name='aFlavor'> </param>
		/// <param name='aData'> </param>
		/// <param name='aDataLen'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetFlavorData([MarshalAs(UnmanagedType.Interface)] nsITransferable  aTransferable, [MarshalAs(UnmanagedType.LPStr)] System.String  aFlavor, [MarshalAs(UnmanagedType.Interface)] out nsISupports  aData, out System.UInt32  aDataLen);
	}
	
	/// <summary>nsITransferable </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("8B5314BC-DB01-11d2-96CE-0060B0FB9956")]
	public interface nsITransferable
	{
		
		/// <summary>Member FlavorsTransferableCanExport </summary>
		/// <returns>A nsISupportsArray</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupportsArray FlavorsTransferableCanExport();
		
		/// <summary>Member GetTransferData </summary>
		/// <param name='aFlavor'> </param>
		/// <param name='aData'> </param>
		/// <param name='aDataLen'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetTransferData([MarshalAs(UnmanagedType.LPStr)] System.String  aFlavor, [MarshalAs(UnmanagedType.Interface)] out nsISupports  aData, out System.UInt32  aDataLen);
		
		/// <summary>Member GetAnyTransferData </summary>
		/// <param name='aFlavor'> </param>
		/// <param name='aData'> </param>
		/// <param name='aDataLen'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetAnyTransferData([MarshalAs(UnmanagedType.LPStr)] out System.String  aFlavor, [MarshalAs(UnmanagedType.Interface)] out nsISupports  aData, out System.UInt32  aDataLen);
		
		/// <summary>Member IsLargeDataSet </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsLargeDataSet();
		
		/// <summary>Member FlavorsTransferableCanImport </summary>
		/// <returns>A nsISupportsArray</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupportsArray FlavorsTransferableCanImport();
		
		/// <summary>Member SetTransferData </summary>
		/// <param name='aFlavor'> </param>
		/// <param name='aData'> </param>
		/// <param name='aDataLen'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetTransferData([MarshalAs(UnmanagedType.LPStr)] System.String  aFlavor, [MarshalAs(UnmanagedType.Interface)] nsISupports  aData, System.UInt32  aDataLen);
		
		/// <summary>Member AddDataFlavor </summary>
		/// <param name='aDataFlavor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AddDataFlavor([MarshalAs(UnmanagedType.LPStr)] System.String  aDataFlavor);
		
		/// <summary>Member RemoveDataFlavor </summary>
		/// <param name='aDataFlavor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveDataFlavor([MarshalAs(UnmanagedType.LPStr)] System.String  aDataFlavor);
		
		/// <summary>Member GetConverterAttribute </summary>
		/// <returns>A nsIFormatConverter </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIFormatConverter  GetConverterAttribute();
		
		/// <summary>Member SetConverterAttribute </summary>
		/// <param name='aConverter'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetConverterAttribute([MarshalAs(UnmanagedType.Interface)] nsIFormatConverter  aConverter);
	}
}
