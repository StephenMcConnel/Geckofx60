// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIXULRuntime.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIXULRuntime.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIXULRuntime </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("7685dac8-3637-4660-a544-928c5ec0e714")]
	public interface nsIXULRuntime
	{
		
		/// <summary>Member GetInSafeModeAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetInSafeModeAttribute();
		
		/// <summary>Member GetLogConsoleErrorsAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetLogConsoleErrorsAttribute();
		
		/// <summary>Member SetLogConsoleErrorsAttribute </summary>
		/// <param name='aLogConsoleErrors'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetLogConsoleErrorsAttribute(System.Boolean  aLogConsoleErrors);
		
		/// <summary>Member GetOSAttribute </summary>
		/// <param name='aOS'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetOSAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aOS);
		
		/// <summary>Member GetXPCOMABIAttribute </summary>
		/// <param name='aXPCOMABI'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetXPCOMABIAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aXPCOMABI);
		
		/// <summary>Member GetWidgetToolkitAttribute </summary>
		/// <param name='aWidgetToolkit'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetWidgetToolkitAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aWidgetToolkit);
		
		/// <summary>Member GetProcessTypeAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetProcessTypeAttribute();
		
		/// <summary>Member InvalidateCachesOnRestart </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InvalidateCachesOnRestart();
		
		/// <summary>Member EnsureContentProcess </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void EnsureContentProcess();
	}
}
