// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsICertificateDialogs.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsICertificateDialogs.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsICertificateDialogs </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("a03ca940-09be-11d5-ac5d-000064657374")]
	public interface nsICertificateDialogs
	{
		
		/// <summary>Member ConfirmDownloadCACert </summary>
		/// <param name='ctx'> </param>
		/// <param name='cert'> </param>
		/// <param name='trust'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool ConfirmDownloadCACert([MarshalAs(UnmanagedType.Interface)] nsIInterfaceRequestor  ctx, [MarshalAs(UnmanagedType.Interface)] nsIX509Cert  cert, out System.UInt32  trust);
		
		/// <summary>Member NotifyCACertExists </summary>
		/// <param name='ctx'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void NotifyCACertExists([MarshalAs(UnmanagedType.Interface)] nsIInterfaceRequestor  ctx);
		
		/// <summary>Member SetPKCS12FilePassword </summary>
		/// <param name='ctx'> </param>
		/// <param name='password'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool SetPKCS12FilePassword([MarshalAs(UnmanagedType.Interface)] nsIInterfaceRequestor  ctx, [MarshalAs(UnmanagedType.LPStruct)] nsAString password);
		
		/// <summary>Member GetPKCS12FilePassword </summary>
		/// <param name='ctx'> </param>
		/// <param name='password'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool GetPKCS12FilePassword([MarshalAs(UnmanagedType.Interface)] nsIInterfaceRequestor  ctx, [MarshalAs(UnmanagedType.LPStruct)] nsAString password);
		
		/// <summary>Member ViewCert </summary>
		/// <param name='ctx'> </param>
		/// <param name='cert'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ViewCert([MarshalAs(UnmanagedType.Interface)] nsIInterfaceRequestor  ctx, [MarshalAs(UnmanagedType.Interface)] nsIX509Cert  cert);
		
		/// <summary>Member CrlImportStatusDialog </summary>
		/// <param name='ctx'> </param>
		/// <param name='crl'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CrlImportStatusDialog([MarshalAs(UnmanagedType.Interface)] nsIInterfaceRequestor  ctx, [MarshalAs(UnmanagedType.Interface)] nsICRLInfo  crl);
	}
}
