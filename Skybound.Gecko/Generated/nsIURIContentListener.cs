// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIURIContentListener.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIURIContentListener.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIURIContentListener </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("94928AB3-8B63-11d3-989D-001083010E9B")]
	public interface nsIURIContentListener
	{
		
		/// <summary>Member OnStartURIOpen </summary>
		/// <param name='aURI'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool OnStartURIOpen([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member DoContent </summary>
		/// <param name='aContentType'> </param>
		/// <param name='aIsContentPreferred'> </param>
		/// <param name='aRequest'> </param>
		/// <param name='aContentHandler'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool DoContent([MarshalAs(UnmanagedType.LPStr)] System.String  aContentType, System.Boolean  aIsContentPreferred, [MarshalAs(UnmanagedType.Interface)] nsIRequest  aRequest, [MarshalAs(UnmanagedType.Interface)] out nsIStreamListener  aContentHandler);
		
		/// <summary>Member IsPreferred </summary>
		/// <param name='aContentType'> </param>
		/// <param name='aDesiredContentType'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsPreferred([MarshalAs(UnmanagedType.LPStr)] System.String  aContentType, [MarshalAs(UnmanagedType.LPStr)] out System.String  aDesiredContentType);
		
		/// <summary>Member CanHandleContent </summary>
		/// <param name='aContentType'> </param>
		/// <param name='aIsContentPreferred'> </param>
		/// <param name='aDesiredContentType'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool CanHandleContent([MarshalAs(UnmanagedType.LPStr)] System.String  aContentType, System.Boolean  aIsContentPreferred, [MarshalAs(UnmanagedType.LPStr)] out System.String  aDesiredContentType);
		
		/// <summary>Member GetLoadCookieAttribute </summary>
		/// <returns>A nsISupports </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports  GetLoadCookieAttribute();
		
		/// <summary>Member SetLoadCookieAttribute </summary>
		/// <param name='aLoadCookie'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetLoadCookieAttribute([MarshalAs(UnmanagedType.Interface)] nsISupports  aLoadCookie);
		
		/// <summary>Member GetParentContentListenerAttribute </summary>
		/// <returns>A nsIURIContentListener </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIURIContentListener  GetParentContentListenerAttribute();
		
		/// <summary>Member SetParentContentListenerAttribute </summary>
		/// <param name='aParentContentListener'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetParentContentListenerAttribute([MarshalAs(UnmanagedType.Interface)] nsIURIContentListener  aParentContentListener);
	}
}
