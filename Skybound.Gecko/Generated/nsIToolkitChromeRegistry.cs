// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIToolkitChromeRegistry.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIToolkitChromeRegistry.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIToolkitChromeRegistry </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("8727651c-9530-45a0-b81e-0e0690c30c50")]
	public interface nsIToolkitChromeRegistry : nsIXULChromeRegistry
	{
		
		/// <summary>Member ConvertChromeURL </summary>
		/// <param name='aChromeURL'> </param>
		/// <returns>A nsIURI</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIURI ConvertChromeURL([MarshalAs(UnmanagedType.Interface)] nsIURI  aChromeURL);
		
		/// <summary>Member CheckForNewChrome </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void CheckForNewChrome();
		
		/// <summary>Member WrappersEnabled </summary>
		/// <param name='aURI'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool WrappersEnabled([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member ReloadChrome </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void ReloadChrome();
		
		/// <summary>Member GetSelectedLocale </summary>
		/// <param name='packageName'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsAString GetSelectedLocale([MarshalAs(UnmanagedType.LPStruct)] nsAString  packageName);
		
		/// <summary>Member IsLocaleRTL </summary>
		/// <param name='package'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool IsLocaleRTL([MarshalAs(UnmanagedType.LPStruct)] nsAString  package);
		
		/// <summary>Member RefreshSkins </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void RefreshSkins();
		
		/// <summary>Member AllowScriptsForPackage </summary>
		/// <param name='url'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool AllowScriptsForPackage([MarshalAs(UnmanagedType.Interface)] nsIURI  url);
		
		/// <summary>Member AllowContentToAccess </summary>
		/// <param name='url'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool AllowContentToAccess([MarshalAs(UnmanagedType.Interface)] nsIURI  url);
		
		/// <summary>Member CheckForOSAccessibility </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CheckForOSAccessibility();
		
		/// <summary>Member GetLocalesForPackage </summary>
		/// <param name='aPackage'> </param>
		/// <returns>A nsIUTF8StringEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIUTF8StringEnumerator GetLocalesForPackage([MarshalAs(UnmanagedType.LPStruct)] nsAString  aPackage);
	}
}
