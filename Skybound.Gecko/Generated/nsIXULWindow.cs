// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIXULWindow.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIXULWindow.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIXULWindow </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("5869c5e5-743d-473c-bb71-41752146d373")]
	public interface nsIXULWindow
	{
		
		/// <summary>Member GetDocShellAttribute </summary>
		/// <returns>A nsIDocShell </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDocShell  GetDocShellAttribute();
		
		/// <summary>Member GetIntrinsicallySizedAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetIntrinsicallySizedAttribute();
		
		/// <summary>Member SetIntrinsicallySizedAttribute </summary>
		/// <param name='aIntrinsicallySized'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetIntrinsicallySizedAttribute(System.Boolean  aIntrinsicallySized);
		
		/// <summary>Member GetPrimaryContentShellAttribute </summary>
		/// <returns>A nsIDocShellTreeItem </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDocShellTreeItem  GetPrimaryContentShellAttribute();
		
		/// <summary>Member GetContentShellById </summary>
		/// <param name='ID'> </param>
		/// <returns>A nsIDocShellTreeItem</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDocShellTreeItem GetContentShellById([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string ID);
		
		/// <summary>Member AddChildWindow </summary>
		/// <param name='aChild'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AddChildWindow([MarshalAs(UnmanagedType.Interface)] nsIXULWindow  aChild);
		
		/// <summary>Member RemoveChildWindow </summary>
		/// <param name='aChild'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveChildWindow([MarshalAs(UnmanagedType.Interface)] nsIXULWindow  aChild);
		
		/// <summary>Member Center </summary>
		/// <param name='aRelative'> </param>
		/// <param name='aScreen'> </param>
		/// <param name='aAlert'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Center([MarshalAs(UnmanagedType.Interface)] nsIXULWindow  aRelative, System.Boolean  aScreen, System.Boolean  aAlert);
		
		/// <summary>Member ShowModal </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ShowModal();
		
		/// <summary>Member GetZLevelAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetZLevelAttribute();
		
		/// <summary>Member SetZLevelAttribute </summary>
		/// <param name='aZLevel'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetZLevelAttribute(System.UInt32  aZLevel);
		
		/// <summary>Member GetContextFlagsAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetContextFlagsAttribute();
		
		/// <summary>Member SetContextFlagsAttribute </summary>
		/// <param name='aContextFlags'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetContextFlagsAttribute(System.UInt32  aContextFlags);
		
		/// <summary>Member GetChromeFlagsAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetChromeFlagsAttribute();
		
		/// <summary>Member SetChromeFlagsAttribute </summary>
		/// <param name='aChromeFlags'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetChromeFlagsAttribute(System.UInt32  aChromeFlags);
		
		/// <summary>Member AssumeChromeFlagsAreFrozen </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AssumeChromeFlagsAreFrozen();
		
		/// <summary>Member CreateNewWindow </summary>
		/// <param name='aChromeFlags'> </param>
		/// <param name='aAppShell'> </param>
		/// <returns>A nsIXULWindow</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIXULWindow CreateNewWindow(System.Int32  aChromeFlags, [MarshalAs(UnmanagedType.Interface)] nsIAppShell  aAppShell);
		
		/// <summary>Member GetXULBrowserWindowAttribute </summary>
		/// <returns>A nsIXULBrowserWindow </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIXULBrowserWindow  GetXULBrowserWindowAttribute();
		
		/// <summary>Member SetXULBrowserWindowAttribute </summary>
		/// <param name='aXULBrowserWindow'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetXULBrowserWindowAttribute([MarshalAs(UnmanagedType.Interface)] nsIXULBrowserWindow  aXULBrowserWindow);
		
		/// <summary>Member ApplyChromeFlags </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ApplyChromeFlags();
	}
}
