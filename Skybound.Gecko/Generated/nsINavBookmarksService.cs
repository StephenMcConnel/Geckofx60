// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsINavBookmarksService.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsINavBookmarksService.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsINavBookmarkObserver </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("76f892d9-31ea-4061-b38c-6b40fad57e9d")]
	public interface nsINavBookmarkObserver
	{
		
		/// <summary>Member OnBeginUpdateBatch </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnBeginUpdateBatch();
		
		/// <summary>Member OnEndUpdateBatch </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnEndUpdateBatch();
		
		/// <summary>Member OnItemAdded </summary>
		/// <param name='aItemId'> </param>
		/// <param name='aParentId'> </param>
		/// <param name='aIndex'> </param>
		/// <param name='aItemType'> </param>
		/// <param name='aURI'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnItemAdded(System.Int32  aItemId, System.Int32  aParentId, System.Int32  aIndex, ushort aItemType, [MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member OnBeforeItemRemoved </summary>
		/// <param name='aItemId'> </param>
		/// <param name='aItemType'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnBeforeItemRemoved(System.Int32  aItemId, ushort aItemType);
		
		/// <summary>Member OnItemRemoved </summary>
		/// <param name='aItemId'> </param>
		/// <param name='aParentId'> </param>
		/// <param name='aIndex'> </param>
		/// <param name='aItemType'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnItemRemoved(System.Int32  aItemId, System.Int32  aParentId, System.Int32  aIndex, ushort aItemType);
		
		/// <summary>Member OnItemChanged </summary>
		/// <param name='aItemId'> </param>
		/// <param name='aProperty'> </param>
		/// <param name='aIsAnnotationProperty'> </param>
		/// <param name='aNewValue'> </param>
		/// <param name='aLastModified'> </param>
		/// <param name='aItemType'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnItemChanged(System.Int32  aItemId, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aProperty, System.Boolean  aIsAnnotationProperty, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aNewValue, System.UInt32  aLastModified, ushort aItemType);
		
		/// <summary>Member OnItemVisited </summary>
		/// <param name='aBookmarkId'> </param>
		/// <param name='aVisitID'> </param>
		/// <param name='time'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnItemVisited(System.Int32  aBookmarkId, System.Int32  aVisitID, System.UInt32  time);
		
		/// <summary>Member OnItemMoved </summary>
		/// <param name='aItemId'> </param>
		/// <param name='aOldParentId'> </param>
		/// <param name='aOldIndex'> </param>
		/// <param name='aNewParentId'> </param>
		/// <param name='aNewIndex'> </param>
		/// <param name='aItemType'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnItemMoved(System.Int32  aItemId, System.Int32  aOldParentId, System.Int32  aOldIndex, System.Int32  aNewParentId, System.Int32  aNewIndex, ushort aItemType);
	}
	
	/// <summary>nsINavBookmarksService </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("573f99bd-988c-4253-836f-4ce009d33ac6")]
	public interface nsINavBookmarksService
	{
		
		/// <summary>Member GetPlacesRootAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetPlacesRootAttribute();
		
		/// <summary>Member GetBookmarksMenuFolderAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetBookmarksMenuFolderAttribute();
		
		/// <summary>Member GetTagsFolderAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetTagsFolderAttribute();
		
		/// <summary>Member GetUnfiledBookmarksFolderAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetUnfiledBookmarksFolderAttribute();
		
		/// <summary>Member GetToolbarFolderAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetToolbarFolderAttribute();
		
		/// <summary>Member InsertBookmark </summary>
		/// <param name='aParentId'> </param>
		/// <param name='aURI'> </param>
		/// <param name='aIndex'> </param>
		/// <param name='aTitle'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int InsertBookmark(System.Int32  aParentId, [MarshalAs(UnmanagedType.Interface)] nsIURI  aURI, System.Int32  aIndex, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aTitle);
		
		/// <summary>Member RemoveItem </summary>
		/// <param name='aItemId'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveItem(System.Int32  aItemId);
		
		/// <summary>Member CreateFolder </summary>
		/// <param name='aParentFolder'> </param>
		/// <param name='name'> </param>
		/// <param name='index'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int CreateFolder(System.Int32  aParentFolder, [MarshalAs(UnmanagedType.LPStruct)] nsAString  name, System.Int32  index);
		
		/// <summary>Member CreateDynamicContainer </summary>
		/// <param name='aParentFolder'> </param>
		/// <param name='aName'> </param>
		/// <param name='aContractId'> </param>
		/// <param name='aIndex'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int CreateDynamicContainer(System.Int32  aParentFolder, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aName, [MarshalAs(UnmanagedType.LPStruct)] nsAString aContractId, System.Int32  aIndex);
		
		/// <summary>Member GetRemoveFolderTransaction </summary>
		/// <param name='aItemId'> </param>
		/// <returns>A nsITransaction</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsITransaction GetRemoveFolderTransaction(System.Int32  aItemId);
		
		/// <summary>Member RemoveFolderChildren </summary>
		/// <param name='aItemId'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveFolderChildren(System.Int32  aItemId);
		
		/// <summary>Member MoveItem </summary>
		/// <param name='aItemId'> </param>
		/// <param name='aNewParentId'> </param>
		/// <param name='aIndex'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void MoveItem(System.Int32  aItemId, System.Int32  aNewParentId, System.Int32  aIndex);
		
		/// <summary>Member InsertSeparator </summary>
		/// <param name='aParentId'> </param>
		/// <param name='aIndex'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int InsertSeparator(System.Int32  aParentId, System.Int32  aIndex);
		
		/// <summary>Member GetIdForItemAt </summary>
		/// <param name='aParentId'> </param>
		/// <param name='aIndex'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetIdForItemAt(System.Int32  aParentId, System.Int32  aIndex);
		
		/// <summary>Member GetItemGUID </summary>
		/// <param name='aItemId'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetItemGUID(System.Int32  aItemId);
		
		/// <summary>Member SetItemGUID </summary>
		/// <param name='aItemId'> </param>
		/// <param name='aGUID'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetItemGUID(System.Int32  aItemId, [MarshalAs(UnmanagedType.LPStruct)] nsAString aGUID);
		
		/// <summary>Member GetItemIdForGUID </summary>
		/// <param name='aGUID'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetItemIdForGUID([MarshalAs(UnmanagedType.LPStruct)] nsAString aGUID);
		
		/// <summary>Member SetItemTitle </summary>
		/// <param name='aItemId'> </param>
		/// <param name='aTitle'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetItemTitle(System.Int32  aItemId, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aTitle);
		
		/// <summary>Member GetItemTitle </summary>
		/// <param name='aItemId'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetItemTitle(System.Int32  aItemId);
		
		/// <summary>Member SetItemDateAdded </summary>
		/// <param name='aItemId'> </param>
		/// <param name='aDateAdded'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetItemDateAdded(System.Int32  aItemId, System.UInt32  aDateAdded);
		
		/// <summary>Member GetItemDateAdded </summary>
		/// <param name='aItemId'> </param>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetItemDateAdded(System.Int32  aItemId);
		
		/// <summary>Member SetItemLastModified </summary>
		/// <param name='aItemId'> </param>
		/// <param name='aLastModified'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetItemLastModified(System.Int32  aItemId, System.UInt32  aLastModified);
		
		/// <summary>Member GetItemLastModified </summary>
		/// <param name='aItemId'> </param>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetItemLastModified(System.Int32  aItemId);
		
		/// <summary>Member GetBookmarkURI </summary>
		/// <param name='aItemId'> </param>
		/// <returns>A nsIURI</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIURI GetBookmarkURI(System.Int32  aItemId);
		
		/// <summary>Member GetItemIndex </summary>
		/// <param name='aItemId'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetItemIndex(System.Int32  aItemId);
		
		/// <summary>Member SetItemIndex </summary>
		/// <param name='aItemId'> </param>
		/// <param name='aNewIndex'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetItemIndex(System.Int32  aItemId, System.Int32  aNewIndex);
		
		/// <summary>Member GetItemType </summary>
		/// <param name='aItemId'> </param>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetItemType(System.Int32  aItemId);
		
		/// <summary>Member GetFolderReadonly </summary>
		/// <param name='aItemId'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool GetFolderReadonly(System.Int32  aItemId);
		
		/// <summary>Member SetFolderReadonly </summary>
		/// <param name='aFolder'> </param>
		/// <param name='aReadOnly'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFolderReadonly(System.Int32  aFolder, System.Boolean  aReadOnly);
		
		/// <summary>Member IsBookmarked </summary>
		/// <param name='aURI'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsBookmarked([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member GetBookmarkedURIFor </summary>
		/// <param name='aURI'> </param>
		/// <returns>A nsIURI</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIURI GetBookmarkedURIFor([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member ChangeBookmarkURI </summary>
		/// <param name='aItemId'> </param>
		/// <param name='aNewURI'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ChangeBookmarkURI(System.Int32  aItemId, [MarshalAs(UnmanagedType.Interface)] nsIURI  aNewURI);
		
		/// <summary>Member GetFolderIdForItem </summary>
		/// <param name='aItemId'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetFolderIdForItem(System.Int32  aItemId);
		
		/// <summary>Member GetBookmarkIdsForURI </summary>
		/// <param name='aURI'> </param>
		/// <param name='count'> </param>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetBookmarkIdsForURI([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI, out System.UInt32  count);
		
		/// <summary>Member SetKeywordForBookmark </summary>
		/// <param name='aItemId'> </param>
		/// <param name='aKeyword'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetKeywordForBookmark(System.Int32  aItemId, [MarshalAs(UnmanagedType.LPStruct)] nsAString aKeyword);
		
		/// <summary>Member GetKeywordForURI </summary>
		/// <param name='aURI'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetKeywordForURI([MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member GetKeywordForBookmark </summary>
		/// <param name='aItemId'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetKeywordForBookmark(System.Int32  aItemId);
		
		/// <summary>Member GetURIForKeyword </summary>
		/// <param name='keyword'> </param>
		/// <returns>A nsIURI</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIURI GetURIForKeyword([MarshalAs(UnmanagedType.LPStruct)] nsAString keyword);
		
		/// <summary>Member AddObserver </summary>
		/// <param name='observer'> </param>
		/// <param name='ownsWeak'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AddObserver([MarshalAs(UnmanagedType.Interface)] nsINavBookmarkObserver  observer, System.Boolean  ownsWeak);
		
		/// <summary>Member RemoveObserver </summary>
		/// <param name='observer'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveObserver([MarshalAs(UnmanagedType.Interface)] nsINavBookmarkObserver  observer);
		
		/// <summary>Member RunInBatchMode </summary>
		/// <param name='aCallback'> </param>
		/// <param name='aUserData'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RunInBatchMode([MarshalAs(UnmanagedType.Interface)] nsINavHistoryBatchCallback  aCallback, [MarshalAs(UnmanagedType.Interface)] nsISupports  aUserData);
	}
}
