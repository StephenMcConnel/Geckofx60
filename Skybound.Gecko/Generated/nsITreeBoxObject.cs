// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsITreeBoxObject.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsITreeBoxObject.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsITreeBoxObject </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("64BA5199-C4F4-4498-BBDC-F8E4C369086C")]
	public interface nsITreeBoxObject
	{
		
		/// <summary>Member GetColumnsAttribute </summary>
		/// <returns>A nsITreeColumns </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsITreeColumns  GetColumnsAttribute();
		
		/// <summary>Member GetViewAttribute </summary>
		/// <returns>A nsITreeView </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsITreeView  GetViewAttribute();
		
		/// <summary>Member SetViewAttribute </summary>
		/// <param name='aView'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetViewAttribute([MarshalAs(UnmanagedType.Interface)] nsITreeView  aView);
		
		/// <summary>Member GetFocusedAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetFocusedAttribute();
		
		/// <summary>Member SetFocusedAttribute </summary>
		/// <param name='aFocused'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetFocusedAttribute(System.Boolean  aFocused);
		
		/// <summary>Member GetTreeBodyAttribute </summary>
		/// <returns>A nsIDOMElement </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMElement  GetTreeBodyAttribute();
		
		/// <summary>Member GetRowHeightAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetRowHeightAttribute();
		
		/// <summary>Member GetRowWidthAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetRowWidthAttribute();
		
		/// <summary>Member GetHorizontalPositionAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetHorizontalPositionAttribute();
		
		/// <summary>Member GetSelectionRegionAttribute </summary>
		/// <returns>A nsIScriptableRegion </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIScriptableRegion  GetSelectionRegionAttribute();
		
		/// <summary>Member GetFirstVisibleRow </summary>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetFirstVisibleRow();
		
		/// <summary>Member GetLastVisibleRow </summary>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetLastVisibleRow();
		
		/// <summary>Member GetPageLength </summary>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetPageLength();
		
		/// <summary>Member EnsureRowIsVisible </summary>
		/// <param name='index'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void EnsureRowIsVisible(System.Int32  index);
		
		/// <summary>Member EnsureCellIsVisible </summary>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void EnsureCellIsVisible(System.Int32  row, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col);
		
		/// <summary>Member ScrollToRow </summary>
		/// <param name='index'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ScrollToRow(System.Int32  index);
		
		/// <summary>Member ScrollByLines </summary>
		/// <param name='numLines'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ScrollByLines(System.Int32  numLines);
		
		/// <summary>Member ScrollByPages </summary>
		/// <param name='numPages'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ScrollByPages(System.Int32  numPages);
		
		/// <summary>Member ScrollToCell </summary>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ScrollToCell(System.Int32  row, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col);
		
		/// <summary>Member ScrollToColumn </summary>
		/// <param name='col'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ScrollToColumn([MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col);
		
		/// <summary>Member ScrollToHorizontalPosition </summary>
		/// <param name='horizontalPosition'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ScrollToHorizontalPosition(System.Int32  horizontalPosition);
		
		/// <summary>Member Invalidate </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Invalidate();
		
		/// <summary>Member InvalidateColumn </summary>
		/// <param name='col'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InvalidateColumn([MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col);
		
		/// <summary>Member InvalidateRow </summary>
		/// <param name='index'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InvalidateRow(System.Int32  index);
		
		/// <summary>Member InvalidateCell </summary>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InvalidateCell(System.Int32  row, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col);
		
		/// <summary>Member InvalidateRange </summary>
		/// <param name='startIndex'> </param>
		/// <param name='endIndex'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InvalidateRange(System.Int32  startIndex, System.Int32  endIndex);
		
		/// <summary>Member InvalidateColumnRange </summary>
		/// <param name='startIndex'> </param>
		/// <param name='endIndex'> </param>
		/// <param name='col'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InvalidateColumnRange(System.Int32  startIndex, System.Int32  endIndex, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col);
		
		/// <summary>Member GetRowAt </summary>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetRowAt(System.Int32  x, System.Int32  y);
		
		/// <summary>Member GetCellAt </summary>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		/// <param name='childElt'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetCellAt(System.Int32  x, System.Int32  y, out System.Int32  row, [MarshalAs(UnmanagedType.Interface)] out nsITreeColumn  col, [MarshalAs(UnmanagedType.LPStruct)] nsAString  childElt);
		
		/// <summary>Member GetCoordsForCellItem </summary>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		/// <param name='element'> </param>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetCoordsForCellItem(System.Int32  row, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col, [MarshalAs(UnmanagedType.LPStruct)] nsAString  element, out System.Int32  x, out System.Int32  y, out System.Int32  width, out System.Int32  height);
		
		/// <summary>Member IsCellCropped </summary>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsCellCropped(System.Int32  row, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col);
		
		/// <summary>Member RowCountChanged </summary>
		/// <param name='index'> </param>
		/// <param name='count'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RowCountChanged(System.Int32  index, System.Int32  count);
		
		/// <summary>Member BeginUpdateBatch </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BeginUpdateBatch();
		
		/// <summary>Member EndUpdateBatch </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void EndUpdateBatch();
		
		/// <summary>Member ClearStyleAndImageCaches </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ClearStyleAndImageCaches();
	}
}
