// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsISupportsIterators.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsISupportsIterators.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIOutputIterator </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("7330650e-1dd2-11b2-a0c2-9ff86ee97bed")]
	public interface nsIOutputIterator
	{
		
		/// <summary>Member PutElement </summary>
		/// <param name='anElementToPut'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void PutElement([MarshalAs(UnmanagedType.Interface)] nsISupports  anElementToPut);
		
		/// <summary>Member StepForward </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void StepForward();
	}
	
	/// <summary>nsIInputIterator </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("85585e12-1dd2-11b2-a930-f6929058269a")]
	public interface nsIInputIterator
	{
		
		/// <summary>Member GetElement </summary>
		/// <returns>A nsISupports</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports GetElement();
		
		/// <summary>Member StepForward </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void StepForward();
		
		/// <summary>Member IsEqualTo </summary>
		/// <param name='anotherIterator'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsEqualTo([MarshalAs(UnmanagedType.Interface)] nsISupports  anotherIterator);
		
		/// <summary>Member Clone </summary>
		/// <returns>A nsISupports</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports Clone();
	}
	
	/// <summary>nsIForwardIterator </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("8da01646-1dd2-11b2-98a7-c7009045be7e")]
	public interface nsIForwardIterator
	{
		
		/// <summary>Member GetElement </summary>
		/// <returns>A nsISupports</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports GetElement();
		
		/// <summary>Member PutElement </summary>
		/// <param name='anElementToPut'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void PutElement([MarshalAs(UnmanagedType.Interface)] nsISupports  anElementToPut);
		
		/// <summary>Member StepForward </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void StepForward();
		
		/// <summary>Member IsEqualTo </summary>
		/// <param name='anotherIterator'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsEqualTo([MarshalAs(UnmanagedType.Interface)] nsISupports  anotherIterator);
		
		/// <summary>Member Clone </summary>
		/// <returns>A nsISupports</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports Clone();
	}
	
	/// <summary>nsIBidirectionalIterator </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("948defaa-1dd1-11b2-89f6-8ce81f5ebda9")]
	public interface nsIBidirectionalIterator
	{
		
		/// <summary>Member GetElement </summary>
		/// <returns>A nsISupports</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports GetElement();
		
		/// <summary>Member PutElement </summary>
		/// <param name='anElementToPut'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void PutElement([MarshalAs(UnmanagedType.Interface)] nsISupports  anElementToPut);
		
		/// <summary>Member StepForward </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void StepForward();
		
		/// <summary>Member StepBackward </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void StepBackward();
		
		/// <summary>Member IsEqualTo </summary>
		/// <param name='anotherIterator'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsEqualTo([MarshalAs(UnmanagedType.Interface)] nsISupports  anotherIterator);
		
		/// <summary>Member Clone </summary>
		/// <returns>A nsISupports</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports Clone();
	}
	
	/// <summary>nsIRandomAccessIterator </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("9bd6fdb0-1dd1-11b2-9101-d15375968230")]
	public interface nsIRandomAccessIterator
	{
		
		/// <summary>Member GetElement </summary>
		/// <returns>A nsISupports</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports GetElement();
		
		/// <summary>Member GetElementAt </summary>
		/// <param name='anOffset'> </param>
		/// <returns>A nsISupports</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports GetElementAt(System.Int32  anOffset);
		
		/// <summary>Member PutElement </summary>
		/// <param name='anElementToPut'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void PutElement([MarshalAs(UnmanagedType.Interface)] nsISupports  anElementToPut);
		
		/// <summary>Member PutElementAt </summary>
		/// <param name='anOffset'> </param>
		/// <param name='anElementToPut'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void PutElementAt(System.Int32  anOffset, [MarshalAs(UnmanagedType.Interface)] nsISupports  anElementToPut);
		
		/// <summary>Member StepForward </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void StepForward();
		
		/// <summary>Member StepForwardBy </summary>
		/// <param name='anOffset'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void StepForwardBy(System.Int32  anOffset);
		
		/// <summary>Member StepBackward </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void StepBackward();
		
		/// <summary>Member StepBackwardBy </summary>
		/// <param name='anOffset'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void StepBackwardBy(System.Int32  anOffset);
		
		/// <summary>Member IsEqualTo </summary>
		/// <param name='anotherIterator'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsEqualTo([MarshalAs(UnmanagedType.Interface)] nsISupports  anotherIterator);
		
		/// <summary>Member Clone </summary>
		/// <returns>A nsISupports</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports Clone();
	}
}
