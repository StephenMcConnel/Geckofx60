// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMSVGLength.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;

	
	
	/// <summary>nsIDOMSVGLength </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("2596325c-aed0-487e-96a1-0a6d589b9c6b")]
	public interface nsIDOMSVGLength
	{
		
		/// <summary>Member GetUnitTypeAttribute </summary>
		/// <returns>A System.UInt16</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		ushort GetUnitTypeAttribute();
		
		/// <summary>Member GetValueAttribute </summary>
		/// <returns>A System.Single</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		float GetValueAttribute();
		
		/// <summary>Member SetValueAttribute </summary>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetValueAttribute(float aValue);
		
		/// <summary>
        /// raises DOMException on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		float GetValueInSpecifiedUnitsAttribute();
		
		/// <summary>
        /// raises DOMException on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetValueInSpecifiedUnitsAttribute(float aValueInSpecifiedUnits);
		
		/// <summary>
        /// raises DOMException on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetValueAsStringAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aValueAsString);
		
		/// <summary>
        /// raises DOMException on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetValueAsStringAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAStringBase aValueAsString);
		
		/// <summary>
        /// raises DOMException on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void NewValueSpecifiedUnits(ushort unitType, float valueInSpecifiedUnits);
		
		/// <summary>Member ConvertToSpecifiedUnits </summary>
		/// <param name='unitType'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ConvertToSpecifiedUnits(ushort unitType);
	}
	
	/// <summary>nsIDOMSVGLengthConsts </summary>
	public class nsIDOMSVGLengthConsts
	{
		
		// <summary>
        // Length Unit Types
        // </summary>
		public const ulong SVG_LENGTHTYPE_UNKNOWN = 0;
		
		// 
		public const ulong SVG_LENGTHTYPE_NUMBER = 1;
		
		// 
		public const ulong SVG_LENGTHTYPE_PERCENTAGE = 2;
		
		// 
		public const ulong SVG_LENGTHTYPE_EMS = 3;
		
		// 
		public const ulong SVG_LENGTHTYPE_EXS = 4;
		
		// 
		public const ulong SVG_LENGTHTYPE_PX = 5;
		
		// 
		public const ulong SVG_LENGTHTYPE_CM = 6;
		
		// 
		public const ulong SVG_LENGTHTYPE_MM = 7;
		
		// 
		public const ulong SVG_LENGTHTYPE_IN = 8;
		
		// 
		public const ulong SVG_LENGTHTYPE_PT = 9;
		
		// 
		public const ulong SVG_LENGTHTYPE_PC = 10;
	}
}
