// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIDOMDataTransfer.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMDataTransfer.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIDOMDataTransfer </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("34042440-60A8-4992-AE5C-798E69148955")]
	public interface nsIDOMDataTransfer
	{
		
		/// <summary>Member GetDropEffectAttribute </summary>
		/// <param name='aDropEffect'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetDropEffectAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aDropEffect);
		
		/// <summary>Member SetDropEffectAttribute </summary>
		/// <param name='aDropEffect'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetDropEffectAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aDropEffect);
		
		/// <summary>Member GetEffectAllowedAttribute </summary>
		/// <param name='aEffectAllowed'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetEffectAllowedAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aEffectAllowed);
		
		/// <summary>Member SetEffectAllowedAttribute </summary>
		/// <param name='aEffectAllowed'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetEffectAllowedAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aEffectAllowed);
		
		/// <summary>Member GetFilesAttribute </summary>
		/// <returns>A nsIDOMFileList </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMFileList  GetFilesAttribute();
		
		/// <summary>Member GetTypesAttribute </summary>
		/// <returns>A System.IntPtr</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr GetTypesAttribute();
		
		/// <summary>Member ClearData </summary>
		/// <param name='format'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ClearData([MarshalAs(UnmanagedType.LPStruct)] nsAString format);
		
		/// <summary>Member SetData </summary>
		/// <param name='format'> </param>
		/// <param name='data'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetData([MarshalAs(UnmanagedType.LPStruct)] nsAString format, [MarshalAs(UnmanagedType.LPStruct)] nsAString data);
		
		/// <summary>Member GetData </summary>
		/// <param name='format'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetData([MarshalAs(UnmanagedType.LPStruct)] nsAString format);
		
		/// <summary>Member SetDragImage </summary>
		/// <param name='image'> </param>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetDragImage([MarshalAs(UnmanagedType.Interface)] nsIDOMElement  image, System.Int32  x, System.Int32  y);
		
		/// <summary>Member AddElement </summary>
		/// <param name='element'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AddElement([MarshalAs(UnmanagedType.Interface)] nsIDOMElement  element);
	}
	
	/// <summary>nsIDOMNSDataTransfer </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("AE6DF4E2-FA37-4701-A33E-A5678F826EED")]
	public interface nsIDOMNSDataTransfer
	{
		
		/// <summary>Member GetDropEffectIntAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetDropEffectIntAttribute();
		
		/// <summary>Member SetDropEffectIntAttribute </summary>
		/// <param name='aDropEffectInt'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetDropEffectIntAttribute(System.UInt32  aDropEffectInt);
		
		/// <summary>Member GetEffectAllowedIntAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetEffectAllowedIntAttribute();
		
		/// <summary>Member SetEffectAllowedIntAttribute </summary>
		/// <param name='aEffectAllowedInt'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetEffectAllowedIntAttribute(System.UInt32  aEffectAllowedInt);
		
		/// <summary>Member Clone </summary>
		/// <param name='aEventType'> </param>
		/// <param name='aUserCancelled'> </param>
		/// <returns>A nsIDOMDataTransfer</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMDataTransfer Clone(System.UInt32  aEventType, System.Boolean  aUserCancelled);
		
		/// <summary>Member GetMozItemCountAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetMozItemCountAttribute();
		
		/// <summary>Member GetMozCursorAttribute </summary>
		/// <param name='aMozCursor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMozCursorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aMozCursor);
		
		/// <summary>Member SetMozCursorAttribute </summary>
		/// <param name='aMozCursor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMozCursorAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aMozCursor);
		
		/// <summary>Member MozTypesAt </summary>
		/// <param name='index'> </param>
		/// <returns>A System.IntPtr</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr MozTypesAt(System.UInt32  index);
		
		/// <summary>Member MozClearDataAt </summary>
		/// <param name='format'> </param>
		/// <param name='index'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void MozClearDataAt([MarshalAs(UnmanagedType.LPStruct)] nsAString format, System.UInt32  index);
		
		/// <summary>Member MozSetDataAt </summary>
		/// <param name='format'> </param>
		/// <param name='data'> </param>
		/// <param name='index'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void MozSetDataAt([MarshalAs(UnmanagedType.LPStruct)] nsAString format, [MarshalAs(UnmanagedType.Interface)] nsIVariant  data, System.UInt32  index);
		
		/// <summary>Member MozGetDataAt </summary>
		/// <param name='format'> </param>
		/// <param name='index'> </param>
		/// <returns>A nsIVariant</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant MozGetDataAt([MarshalAs(UnmanagedType.LPStruct)] nsAString format, System.UInt32  index);
		
		/// <summary>Member GetMozUserCancelledAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetMozUserCancelledAttribute();
		
		/// <summary>Member GetMozSourceNodeAttribute </summary>
		/// <returns>A nsIDOMNode </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMNode  GetMozSourceNodeAttribute();
	}
}
