// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIIDBDatabase.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIIDBDatabase.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIIDBDatabase </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("42b38d02-1a29-45f0-99ef-04fd5b441270")]
	public interface nsIIDBDatabase
	{
		
		/// <summary>Member GetNameAttribute </summary>
		/// <param name='aName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNameAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aName);
		
		/// <summary>Member GetVersionAttribute </summary>
		/// <param name='aVersion'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetVersionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aVersion);
		
		/// <summary>Member GetObjectStoreNamesAttribute </summary>
		/// <returns>A System.IntPtr</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr GetObjectStoreNamesAttribute();
		
		/// <summary>Member CreateObjectStore </summary>
		/// <param name='name'> </param>
		/// <param name='options'> </param>
		/// <returns>A nsIIDBObjectStore</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIIDBObjectStore CreateObjectStore([MarshalAs(UnmanagedType.LPStruct)] nsAString name, System.IntPtr options);
		
		/// <summary>Member DeleteObjectStore </summary>
		/// <param name='name'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DeleteObjectStore([MarshalAs(UnmanagedType.LPStruct)] nsAString name);
		
		/// <summary>Member SetVersion </summary>
		/// <param name='version'> </param>
		/// <returns>A nsIIDBRequest</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIIDBRequest SetVersion([MarshalAs(UnmanagedType.LPStruct)] nsAString version);
		
		/// <summary>Member Transaction </summary>
		/// <param name='storeNames'> </param>
		/// <param name='mode'> </param>
		/// <param name='timeout'> </param>
		/// <returns>A nsIIDBTransaction</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIIDBTransaction Transaction([MarshalAs(UnmanagedType.Interface)] nsIVariant  storeNames, ushort mode, System.UInt32  timeout);
		
		/// <summary>Member Close </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Close();
		
		/// <summary>Member GetOnerrorAttribute </summary>
		/// <returns>A nsIDOMEventListener </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMEventListener  GetOnerrorAttribute();
		
		/// <summary>Member SetOnerrorAttribute </summary>
		/// <param name='aOnerror'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOnerrorAttribute([MarshalAs(UnmanagedType.Interface)] nsIDOMEventListener  aOnerror);
		
		/// <summary>Member GetOnversionchangeAttribute </summary>
		/// <returns>A nsIDOMEventListener </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMEventListener  GetOnversionchangeAttribute();
		
		/// <summary>Member SetOnversionchangeAttribute </summary>
		/// <param name='aOnversionchange'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOnversionchangeAttribute([MarshalAs(UnmanagedType.Interface)] nsIDOMEventListener  aOnversionchange);
	}
}
