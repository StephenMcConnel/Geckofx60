// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIFormatConverter.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIFormatConverter.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIFormatConverter </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("948A0023-E3A7-11d2-96CF-0060B0FB9956")]
	public interface nsIFormatConverter
	{
		
		/// <summary>Member GetInputDataFlavors </summary>
		/// <returns>A nsISupportsArray</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupportsArray GetInputDataFlavors();
		
		/// <summary>Member GetOutputDataFlavors </summary>
		/// <returns>A nsISupportsArray</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupportsArray GetOutputDataFlavors();
		
		/// <summary>Member CanConvert </summary>
		/// <param name='aFromDataFlavor'> </param>
		/// <param name='aToDataFlavor'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool CanConvert([MarshalAs(UnmanagedType.LPStr)] System.String  aFromDataFlavor, [MarshalAs(UnmanagedType.LPStr)] System.String  aToDataFlavor);
		
		/// <summary>Member Convert </summary>
		/// <param name='aFromDataFlavor'> </param>
		/// <param name='aFromData'> </param>
		/// <param name='aDataLen'> </param>
		/// <param name='aToDataFlavor'> </param>
		/// <param name='aToData'> </param>
		/// <param name='aDataToLen'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Convert([MarshalAs(UnmanagedType.LPStr)] System.String  aFromDataFlavor, [MarshalAs(UnmanagedType.Interface)] nsISupports  aFromData, System.UInt32  aDataLen, [MarshalAs(UnmanagedType.LPStr)] System.String  aToDataFlavor, [MarshalAs(UnmanagedType.Interface)] out nsISupports  aToData, out System.UInt32  aDataToLen);
	}
}
