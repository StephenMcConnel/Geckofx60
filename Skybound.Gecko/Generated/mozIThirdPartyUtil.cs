// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: mozIThirdPartyUtil.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file mozIThirdPartyUtil.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>mozIThirdPartyUtil </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("55385caa-1b94-4376-a34c-b47c51ef0837")]
	public interface mozIThirdPartyUtil
	{
		
		/// <summary>Member IsThirdPartyURI </summary>
		/// <param name='aFirstURI'> </param>
		/// <param name='aSecondURI'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsThirdPartyURI([MarshalAs(UnmanagedType.Interface)] nsIURI  aFirstURI, [MarshalAs(UnmanagedType.Interface)] nsIURI  aSecondURI);
		
		/// <summary>Member IsThirdPartyWindow </summary>
		/// <param name='aWindow'> </param>
		/// <param name='aURI'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsThirdPartyWindow([MarshalAs(UnmanagedType.Interface)] nsIDOMWindow  aWindow, [MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
		
		/// <summary>Member IsThirdPartyChannel </summary>
		/// <param name='aChannel'> </param>
		/// <param name='aURI'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsThirdPartyChannel([MarshalAs(UnmanagedType.Interface)] nsIChannel  aChannel, [MarshalAs(UnmanagedType.Interface)] nsIURI  aURI);
	}
}
