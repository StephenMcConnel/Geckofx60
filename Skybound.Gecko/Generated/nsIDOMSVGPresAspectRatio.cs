// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMSVGPresAspectRatio.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;

	
	
	/// <summary>nsIDOMSVGPreserveAspectRatio </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("7ae42f27-4799-4e7c-86c6-e1dae6ad5157")]
	public interface nsIDOMSVGPreserveAspectRatio
	{
		
		/// <summary>Member GetAlignAttribute </summary>
		/// <returns>A System.UInt16</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		ushort GetAlignAttribute();
		
		/// <summary>Member SetAlignAttribute </summary>
		/// <param name='aAlign'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetAlignAttribute(ushort aAlign);
		
		/// <summary>
        /// raises DOMException on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		ushort GetMeetOrSliceAttribute();
		
		/// <summary>
        /// raises DOMException on setting
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetMeetOrSliceAttribute(ushort aMeetOrSlice);
	}
	
	/// <summary>nsIDOMSVGPreserveAspectRatioConsts </summary>
	public class nsIDOMSVGPreserveAspectRatioConsts
	{
		
		// <summary>
        // Alignment Types
        // </summary>
		public const ulong SVG_PRESERVEASPECTRATIO_UNKNOWN = 0;
		
		// 
		public const ulong SVG_PRESERVEASPECTRATIO_NONE = 1;
		
		// 
		public const ulong SVG_PRESERVEASPECTRATIO_XMINYMIN = 2;
		
		// 
		public const ulong SVG_PRESERVEASPECTRATIO_XMIDYMIN = 3;
		
		// 
		public const ulong SVG_PRESERVEASPECTRATIO_XMAXYMIN = 4;
		
		// 
		public const ulong SVG_PRESERVEASPECTRATIO_XMINYMID = 5;
		
		// 
		public const ulong SVG_PRESERVEASPECTRATIO_XMIDYMID = 6;
		
		// 
		public const ulong SVG_PRESERVEASPECTRATIO_XMAXYMID = 7;
		
		// 
		public const ulong SVG_PRESERVEASPECTRATIO_XMINYMAX = 8;
		
		// 
		public const ulong SVG_PRESERVEASPECTRATIO_XMIDYMAX = 9;
		
		// 
		public const ulong SVG_PRESERVEASPECTRATIO_XMAXYMAX = 10;
		
		// <summary>
        // Meet-or-slice Types
        // </summary>
		public const ulong SVG_MEETORSLICE_UNKNOWN = 0;
		
		// 
		public const ulong SVG_MEETORSLICE_MEET = 1;
		
		// 
		public const ulong SVG_MEETORSLICE_SLICE = 2;
	}
}
