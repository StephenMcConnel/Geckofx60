// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsICachingChannel.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsICachingChannel.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsICachingChannel </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("830D4BCB-3E46-4011-9BDA-51A5D1AF891F")]
	public interface nsICachingChannel : nsICacheInfoChannel
	{
		
		/// <summary>Member GetCacheTokenExpirationTimeAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.UInt32  GetCacheTokenExpirationTimeAttribute();
		
		/// <summary>Member GetCacheTokenCachedCharsetAttribute </summary>
		/// <param name='aCacheTokenCachedCharset'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void GetCacheTokenCachedCharsetAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aCacheTokenCachedCharset);
		
		/// <summary>Member SetCacheTokenCachedCharsetAttribute </summary>
		/// <param name='aCacheTokenCachedCharset'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void SetCacheTokenCachedCharsetAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aCacheTokenCachedCharset);
		
		/// <summary>Member IsFromCache </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool IsFromCache();
		
		/// <summary>Member GetCacheTokenAttribute </summary>
		/// <returns>A nsISupports </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports  GetCacheTokenAttribute();
		
		/// <summary>Member SetCacheTokenAttribute </summary>
		/// <param name='aCacheToken'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCacheTokenAttribute([MarshalAs(UnmanagedType.Interface)] nsISupports  aCacheToken);
		
		/// <summary>Member GetOfflineCacheTokenAttribute </summary>
		/// <returns>A nsISupports </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports  GetOfflineCacheTokenAttribute();
		
		/// <summary>Member SetOfflineCacheTokenAttribute </summary>
		/// <param name='aOfflineCacheToken'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOfflineCacheTokenAttribute([MarshalAs(UnmanagedType.Interface)] nsISupports  aOfflineCacheToken);
		
		/// <summary>Member GetCacheKeyAttribute </summary>
		/// <returns>A nsISupports </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports  GetCacheKeyAttribute();
		
		/// <summary>Member SetCacheKeyAttribute </summary>
		/// <param name='aCacheKey'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCacheKeyAttribute([MarshalAs(UnmanagedType.Interface)] nsISupports  aCacheKey);
		
		/// <summary>Member GetCacheAsFileAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetCacheAsFileAttribute();
		
		/// <summary>Member SetCacheAsFileAttribute </summary>
		/// <param name='aCacheAsFile'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCacheAsFileAttribute(System.Boolean  aCacheAsFile);
		
		/// <summary>Member GetCacheForOfflineUseAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetCacheForOfflineUseAttribute();
		
		/// <summary>Member SetCacheForOfflineUseAttribute </summary>
		/// <param name='aCacheForOfflineUse'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCacheForOfflineUseAttribute(System.Boolean  aCacheForOfflineUse);
		
		/// <summary>Member GetOfflineCacheClientIDAttribute </summary>
		/// <param name='aOfflineCacheClientID'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetOfflineCacheClientIDAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aOfflineCacheClientID);
		
		/// <summary>Member SetOfflineCacheClientIDAttribute </summary>
		/// <param name='aOfflineCacheClientID'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOfflineCacheClientIDAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString  aOfflineCacheClientID);
		
		/// <summary>Member GetCacheFileAttribute </summary>
		/// <returns>A nsIFile </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIFile  GetCacheFileAttribute();
	}
}
