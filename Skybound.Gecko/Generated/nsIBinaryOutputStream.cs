// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIBinaryOutputStream.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIBinaryOutputStream.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIBinaryOutputStream </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("204ee610-8765-11d3-90cf-0040056a906e")]
	public interface nsIBinaryOutputStream : nsIOutputStream
	{
		
		/// <summary>Member Close </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Close();
		
		/// <summary>Member Flush </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Flush();
		
		/// <summary>Member Write </summary>
		/// <param name='aBuf'> </param>
		/// <param name='aCount'> </param>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new uint Write([MarshalAs(UnmanagedType.LPStr)] System.String  aBuf, System.UInt32  aCount);
		
		/// <summary>Member WriteFrom </summary>
		/// <param name='aFromStream'> </param>
		/// <param name='aCount'> </param>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new uint WriteFrom([MarshalAs(UnmanagedType.Interface)] nsIInputStream  aFromStream, System.UInt32  aCount);
		
		/// <summary>Member WriteSegments </summary>
		/// <param name='aReader'> </param>
		/// <param name='aClosure'> </param>
		/// <param name='aCount'> </param>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new uint WriteSegments(System.IntPtr aReader, System.IntPtr  aClosure, System.UInt32  aCount);
		
		/// <summary>Member IsNonBlocking </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool IsNonBlocking();
		
		/// <summary>Member SetOutputStream </summary>
		/// <param name='aOutputStream'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOutputStream([MarshalAs(UnmanagedType.Interface)] nsIOutputStream  aOutputStream);
		
		/// <summary>Member WriteBoolean </summary>
		/// <param name='aBoolean'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WriteBoolean(System.Boolean  aBoolean);
		
		/// <summary>Member Write8 </summary>
		/// <param name='aByte'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Write8(byte aByte);
		
		/// <summary>Member Write16 </summary>
		/// <param name='a16'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Write16(System.UInt16  a16);
		
		/// <summary>Member Write32 </summary>
		/// <param name='a32'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Write32(System.UInt32  a32);
		
		/// <summary>Member Write64 </summary>
		/// <param name='a64'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Write64(System.UInt64  a64);
		
		/// <summary>Member WriteFloat </summary>
		/// <param name='aFloat'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WriteFloat(double aFloat);
		
		/// <summary>Member WriteDouble </summary>
		/// <param name='aDouble'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WriteDouble(double aDouble);
		
		/// <summary>Member WriteStringZ </summary>
		/// <param name='aString'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WriteStringZ([MarshalAs(UnmanagedType.LPStr)] System.String  aString);
		
		/// <summary>Member WriteWStringZ </summary>
		/// <param name='aString'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WriteWStringZ([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string aString);
		
		/// <summary>Member WriteUtf8Z </summary>
		/// <param name='aString'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WriteUtf8Z([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string aString);
		
		/// <summary>Member WriteBytes </summary>
		/// <param name='aString'> </param>
		/// <param name='aLength'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WriteBytes([MarshalAs(UnmanagedType.LPStr, SizeParamIndex=1)] System.String  aString, System.UInt32  aLength);
		
		/// <summary>Member WriteByteArray </summary>
		/// <param name='aBytes'> </param>
		/// <param name='aLength'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WriteByteArray(byte aBytes, System.UInt32  aLength);
	}
}
