// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIAppShellService.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIAppShellService.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIAppShellService </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("361facd0-6e9a-4ff1-a0d4-450744cf0023")]
	public interface nsIAppShellService
	{
		
		/// <summary>Member CreateTopLevelWindow </summary>
		/// <param name='aParent'> </param>
		/// <param name='aUrl'> </param>
		/// <param name='aChromeMask'> </param>
		/// <param name='aInitialWidth'> </param>
		/// <param name='aInitialHeight'> </param>
		/// <param name='aAppShell'> </param>
		/// <returns>A nsIXULWindow</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIXULWindow CreateTopLevelWindow([MarshalAs(UnmanagedType.Interface)] nsIXULWindow  aParent, [MarshalAs(UnmanagedType.Interface)] nsIURI  aUrl, System.UInt32  aChromeMask, System.Int32  aInitialWidth, System.Int32  aInitialHeight, [MarshalAs(UnmanagedType.Interface)] nsIAppShell  aAppShell);
		
		/// <summary>Member CreateHiddenWindow </summary>
		/// <param name='aAppShell'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CreateHiddenWindow([MarshalAs(UnmanagedType.Interface)] nsIAppShell  aAppShell);
		
		/// <summary>Member DestroyHiddenWindow </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DestroyHiddenWindow();
		
		/// <summary>Member GetHiddenWindowAttribute </summary>
		/// <returns>A nsIXULWindow </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIXULWindow  GetHiddenWindowAttribute();
		
		/// <summary>Member GetHiddenDOMWindowAttribute </summary>
		/// <returns>A nsIDOMWindowInternal </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMWindowInternal  GetHiddenDOMWindowAttribute();
		
		/// <summary>Member GetHiddenWindowAndJSContext </summary>
		/// <param name='aHiddenDOMWindow'> </param>
		/// <param name='aJSContext'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetHiddenWindowAndJSContext([MarshalAs(UnmanagedType.Interface)] out nsIDOMWindowInternal  aHiddenDOMWindow, out System.IntPtr  aJSContext);
		
		/// <summary>Member GetApplicationProvidedHiddenWindowAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetApplicationProvidedHiddenWindowAttribute();
		
		/// <summary>Member RegisterTopLevelWindow </summary>
		/// <param name='aWindow'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RegisterTopLevelWindow([MarshalAs(UnmanagedType.Interface)] nsIXULWindow  aWindow);
		
		/// <summary>Member UnregisterTopLevelWindow </summary>
		/// <param name='aWindow'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void UnregisterTopLevelWindow([MarshalAs(UnmanagedType.Interface)] nsIXULWindow  aWindow);
	}
}
