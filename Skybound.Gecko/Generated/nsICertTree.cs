// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsICertTree.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsICertTree.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsICertTreeItem </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("d0180863-606e-49e6-8324-cf45ed4dd891")]
	public interface nsICertTreeItem
	{
		
		/// <summary>Member GetCertAttribute </summary>
		/// <returns>A nsIX509Cert </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIX509Cert  GetCertAttribute();
		
		/// <summary>Member GetHostPortAttribute </summary>
		/// <param name='aHostPort'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetHostPortAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aHostPort);
	}
	
	/// <summary>nsICertTree </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("a8cd1c89-a901-4735-831b-7198b7b8b6b1")]
	public interface nsICertTree : nsITreeView
	{
		
		/// <summary>Member GetRowCountAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.Int32  GetRowCountAttribute();
		
		/// <summary>Member GetSelectionAttribute </summary>
		/// <returns>A nsITreeSelection </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsITreeSelection  GetSelectionAttribute();
		
		/// <summary>Member SetSelectionAttribute </summary>
		/// <param name='aSelection'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void SetSelectionAttribute([MarshalAs(UnmanagedType.Interface)] nsITreeSelection  aSelection);
		
		/// <summary>Member GetRowProperties </summary>
		/// <param name='index'> </param>
		/// <param name='properties'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void GetRowProperties(System.Int32  index, [MarshalAs(UnmanagedType.Interface)] nsISupportsArray  properties);
		
		/// <summary>Member GetCellProperties </summary>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		/// <param name='properties'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void GetCellProperties(System.Int32  row, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col, [MarshalAs(UnmanagedType.Interface)] nsISupportsArray  properties);
		
		/// <summary>Member GetColumnProperties </summary>
		/// <param name='col'> </param>
		/// <param name='properties'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void GetColumnProperties([MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col, [MarshalAs(UnmanagedType.Interface)] nsISupportsArray  properties);
		
		/// <summary>Member IsContainer </summary>
		/// <param name='index'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool IsContainer(System.Int32  index);
		
		/// <summary>Member IsContainerOpen </summary>
		/// <param name='index'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool IsContainerOpen(System.Int32  index);
		
		/// <summary>Member IsContainerEmpty </summary>
		/// <param name='index'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool IsContainerEmpty(System.Int32  index);
		
		/// <summary>Member IsSeparator </summary>
		/// <param name='index'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool IsSeparator(System.Int32  index);
		
		/// <summary>Member IsSorted </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool IsSorted();
		
		/// <summary>Member CanDrop </summary>
		/// <param name='index'> </param>
		/// <param name='orientation'> </param>
		/// <param name='dataTransfer'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool CanDrop(System.Int32  index, System.Int32  orientation, [MarshalAs(UnmanagedType.Interface)] nsIDOMDataTransfer  dataTransfer);
		
		/// <summary>Member Drop </summary>
		/// <param name='row'> </param>
		/// <param name='orientation'> </param>
		/// <param name='dataTransfer'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Drop(System.Int32  row, System.Int32  orientation, [MarshalAs(UnmanagedType.Interface)] nsIDOMDataTransfer  dataTransfer);
		
		/// <summary>Member GetParentIndex </summary>
		/// <param name='rowIndex'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new int GetParentIndex(System.Int32  rowIndex);
		
		/// <summary>Member HasNextSibling </summary>
		/// <param name='rowIndex'> </param>
		/// <param name='afterIndex'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool HasNextSibling(System.Int32  rowIndex, System.Int32  afterIndex);
		
		/// <summary>Member GetLevel </summary>
		/// <param name='index'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new int GetLevel(System.Int32  index);
		
		/// <summary>Member GetImageSrc </summary>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsAString GetImageSrc(System.Int32  row, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col);
		
		/// <summary>Member GetProgressMode </summary>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new int GetProgressMode(System.Int32  row, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col);
		
		/// <summary>Member GetCellValue </summary>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsAString GetCellValue(System.Int32  row, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col);
		
		/// <summary>Member GetCellText </summary>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsAString GetCellText(System.Int32  row, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col);
		
		/// <summary>Member SetTree </summary>
		/// <param name='tree'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void SetTree([MarshalAs(UnmanagedType.Interface)] nsITreeBoxObject  tree);
		
		/// <summary>Member ToggleOpenState </summary>
		/// <param name='index'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void ToggleOpenState(System.Int32  index);
		
		/// <summary>Member CycleHeader </summary>
		/// <param name='col'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void CycleHeader([MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col);
		
		/// <summary>Member SelectionChanged </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void SelectionChanged();
		
		/// <summary>Member CycleCell </summary>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void CycleCell(System.Int32  row, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col);
		
		/// <summary>Member IsEditable </summary>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool IsEditable(System.Int32  row, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col);
		
		/// <summary>Member IsSelectable </summary>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool IsSelectable(System.Int32  row, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col);
		
		/// <summary>Member SetCellValue </summary>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void SetCellValue(System.Int32  row, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col, [MarshalAs(UnmanagedType.LPStruct)] nsAString value);
		
		/// <summary>Member SetCellText </summary>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void SetCellText(System.Int32  row, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col, [MarshalAs(UnmanagedType.LPStruct)] nsAString value);
		
		/// <summary>Member PerformAction </summary>
		/// <param name='action'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void PerformAction([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string action);
		
		/// <summary>Member PerformActionOnRow </summary>
		/// <param name='action'> </param>
		/// <param name='row'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void PerformActionOnRow([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string action, System.Int32  row);
		
		/// <summary>Member PerformActionOnCell </summary>
		/// <param name='action'> </param>
		/// <param name='row'> </param>
		/// <param name='col'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void PerformActionOnCell([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Skybound.Gecko.XpCom.WStringMarshaler")] string action, System.Int32  row, [MarshalAs(UnmanagedType.Interface)] nsITreeColumn  col);
		
		/// <summary>Member LoadCerts </summary>
		/// <param name='type'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void LoadCerts(System.UInt32  type);
		
		/// <summary>Member LoadCertsFromCache </summary>
		/// <param name='cache'> </param>
		/// <param name='type'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void LoadCertsFromCache([MarshalAs(UnmanagedType.Interface)] nsINSSCertCache  cache, System.UInt32  type);
		
		/// <summary>Member GetCert </summary>
		/// <param name='index'> </param>
		/// <returns>A nsIX509Cert</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIX509Cert GetCert(System.UInt32  index);
		
		/// <summary>Member GetTreeItem </summary>
		/// <param name='index'> </param>
		/// <returns>A nsICertTreeItem</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsICertTreeItem GetTreeItem(System.UInt32  index);
		
		/// <summary>Member IsHostPortOverride </summary>
		/// <param name='index'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsHostPortOverride(System.UInt32  index);
		
		/// <summary>Member DeleteEntryObject </summary>
		/// <param name='index'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DeleteEntryObject(System.UInt32  index);
	}
}
