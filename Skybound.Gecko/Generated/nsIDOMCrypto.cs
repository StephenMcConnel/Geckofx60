// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIDOMCrypto.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMCrypto.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIDOMCrypto </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("12b6d899-2aed-4ea9-8c02-2223ab7ab592")]
	public interface nsIDOMCrypto
	{
		
		/// <summary>Member GetVersionAttribute </summary>
		/// <param name='aVersion'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetVersionAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aVersion);
		
		/// <summary>Member GetEnableSmartCardEventsAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetEnableSmartCardEventsAttribute();
		
		/// <summary>Member SetEnableSmartCardEventsAttribute </summary>
		/// <param name='aEnableSmartCardEvents'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetEnableSmartCardEventsAttribute(System.Boolean  aEnableSmartCardEvents);
		
		/// <summary>Member GenerateCRMFRequest </summary>
		/// <returns>A nsIDOMCRMFObject</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMCRMFObject GenerateCRMFRequest();
		
		/// <summary>Member ImportUserCertificates </summary>
		/// <param name='nickname'> </param>
		/// <param name='cmmfResponse'> </param>
		/// <param name='doForcedBackup'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString ImportUserCertificates([MarshalAs(UnmanagedType.LPStruct)] nsAString nickname, [MarshalAs(UnmanagedType.LPStruct)] nsAString cmmfResponse, System.Boolean  doForcedBackup);
		
		/// <summary>Member PopChallengeResponse </summary>
		/// <param name='challenge'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString PopChallengeResponse([MarshalAs(UnmanagedType.LPStruct)] nsAString challenge);
		
		/// <summary>Member Random </summary>
		/// <param name='numBytes'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString Random(System.Int32  numBytes);
		
		/// <summary>Member SignText </summary>
		/// <param name='stringToSign'> </param>
		/// <param name='caOption'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString SignText([MarshalAs(UnmanagedType.LPStruct)] nsAString stringToSign, [MarshalAs(UnmanagedType.LPStruct)] nsAString caOption);
		
		/// <summary>Member Logout </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Logout();
		
		/// <summary>Member DisableRightClick </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DisableRightClick();
	}
}
