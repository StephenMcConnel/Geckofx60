// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIURIRefObject.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIURIRefObject.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIURIRefObject </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("2226927e-1dd2-11b2-b57f-faab47288563")]
	public interface nsIURIRefObject
	{
		
		/// <summary>Member GetNodeAttribute </summary>
		/// <returns>A nsIDOMNode </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMNode  GetNodeAttribute();
		
		/// <summary>Member SetNodeAttribute </summary>
		/// <param name='aNode'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetNodeAttribute([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aNode);
		
		/// <summary>Member Reset </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Reset();
		
		/// <summary>Member GetNextURI </summary>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetNextURI();
		
		/// <summary>Member RewriteAllURIs </summary>
		/// <param name='aOldPat'> </param>
		/// <param name='aNewPat'> </param>
		/// <param name='aMakeRel'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RewriteAllURIs([MarshalAs(UnmanagedType.LPStruct)] nsAString aOldPat, [MarshalAs(UnmanagedType.LPStruct)] nsAString aNewPat, System.Boolean  aMakeRel);
	}
}
