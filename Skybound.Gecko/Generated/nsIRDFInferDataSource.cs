// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIRDFInferDataSource.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIRDFInferDataSource.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIRDFInferDataSource </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("2b04860f-4017-40f6-8a57-784a1e35077a")]
	public interface nsIRDFInferDataSource : nsIRDFDataSource
	{
		
		/// <summary>Member GetURIAttribute </summary>
		/// <returns>A System.String </returns>
		[return: MarshalAs(UnmanagedType.LPStr)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new System.String  GetURIAttribute();
		
		/// <summary>Member GetSource </summary>
		/// <param name='aProperty'> </param>
		/// <param name='aTarget'> </param>
		/// <param name='aTruthValue'> </param>
		/// <returns>A nsIRDFResource</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIRDFResource GetSource([MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aProperty, [MarshalAs(UnmanagedType.Interface)] nsIRDFNode  aTarget, System.Boolean  aTruthValue);
		
		/// <summary>Member GetSources </summary>
		/// <param name='aProperty'> </param>
		/// <param name='aTarget'> </param>
		/// <param name='aTruthValue'> </param>
		/// <returns>A nsISimpleEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsISimpleEnumerator GetSources([MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aProperty, [MarshalAs(UnmanagedType.Interface)] nsIRDFNode  aTarget, System.Boolean  aTruthValue);
		
		/// <summary>Member GetTarget </summary>
		/// <param name='aSource'> </param>
		/// <param name='aProperty'> </param>
		/// <param name='aTruthValue'> </param>
		/// <returns>A nsIRDFNode</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIRDFNode GetTarget([MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aSource, [MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aProperty, System.Boolean  aTruthValue);
		
		/// <summary>Member GetTargets </summary>
		/// <param name='aSource'> </param>
		/// <param name='aProperty'> </param>
		/// <param name='aTruthValue'> </param>
		/// <returns>A nsISimpleEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsISimpleEnumerator GetTargets([MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aSource, [MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aProperty, System.Boolean  aTruthValue);
		
		/// <summary>Member Assert </summary>
		/// <param name='aSource'> </param>
		/// <param name='aProperty'> </param>
		/// <param name='aTarget'> </param>
		/// <param name='aTruthValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Assert([MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aSource, [MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aProperty, [MarshalAs(UnmanagedType.Interface)] nsIRDFNode  aTarget, System.Boolean  aTruthValue);
		
		/// <summary>Member Unassert </summary>
		/// <param name='aSource'> </param>
		/// <param name='aProperty'> </param>
		/// <param name='aTarget'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Unassert([MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aSource, [MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aProperty, [MarshalAs(UnmanagedType.Interface)] nsIRDFNode  aTarget);
		
		/// <summary>Member Change </summary>
		/// <param name='aSource'> </param>
		/// <param name='aProperty'> </param>
		/// <param name='aOldTarget'> </param>
		/// <param name='aNewTarget'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Change([MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aSource, [MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aProperty, [MarshalAs(UnmanagedType.Interface)] nsIRDFNode  aOldTarget, [MarshalAs(UnmanagedType.Interface)] nsIRDFNode  aNewTarget);
		
		/// <summary>Member Move </summary>
		/// <param name='aOldSource'> </param>
		/// <param name='aNewSource'> </param>
		/// <param name='aProperty'> </param>
		/// <param name='aTarget'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void Move([MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aOldSource, [MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aNewSource, [MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aProperty, [MarshalAs(UnmanagedType.Interface)] nsIRDFNode  aTarget);
		
		/// <summary>Member HasAssertion </summary>
		/// <param name='aSource'> </param>
		/// <param name='aProperty'> </param>
		/// <param name='aTarget'> </param>
		/// <param name='aTruthValue'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool HasAssertion([MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aSource, [MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aProperty, [MarshalAs(UnmanagedType.Interface)] nsIRDFNode  aTarget, System.Boolean  aTruthValue);
		
		/// <summary>Member AddObserver </summary>
		/// <param name='aObserver'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void AddObserver([MarshalAs(UnmanagedType.Interface)] nsIRDFObserver  aObserver);
		
		/// <summary>Member RemoveObserver </summary>
		/// <param name='aObserver'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void RemoveObserver([MarshalAs(UnmanagedType.Interface)] nsIRDFObserver  aObserver);
		
		/// <summary>Member ArcLabelsIn </summary>
		/// <param name='aNode'> </param>
		/// <returns>A nsISimpleEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsISimpleEnumerator ArcLabelsIn([MarshalAs(UnmanagedType.Interface)] nsIRDFNode  aNode);
		
		/// <summary>Member ArcLabelsOut </summary>
		/// <param name='aSource'> </param>
		/// <returns>A nsISimpleEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsISimpleEnumerator ArcLabelsOut([MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aSource);
		
		/// <summary>Member GetAllResources </summary>
		/// <returns>A nsISimpleEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsISimpleEnumerator GetAllResources();
		
		/// <summary>Member IsCommandEnabled </summary>
		/// <param name='aSources'> </param>
		/// <param name='aCommand'> </param>
		/// <param name='aArguments'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool IsCommandEnabled([MarshalAs(UnmanagedType.Interface)] nsISupportsArray  aSources, [MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aCommand, [MarshalAs(UnmanagedType.Interface)] nsISupportsArray  aArguments);
		
		/// <summary>Member DoCommand </summary>
		/// <param name='aSources'> </param>
		/// <param name='aCommand'> </param>
		/// <param name='aArguments'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void DoCommand([MarshalAs(UnmanagedType.Interface)] nsISupportsArray  aSources, [MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aCommand, [MarshalAs(UnmanagedType.Interface)] nsISupportsArray  aArguments);
		
		/// <summary>Member GetAllCmds </summary>
		/// <param name='aSource'> </param>
		/// <returns>A nsISimpleEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsISimpleEnumerator GetAllCmds([MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aSource);
		
		/// <summary>Member HasArcIn </summary>
		/// <param name='aNode'> </param>
		/// <param name='aArc'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool HasArcIn([MarshalAs(UnmanagedType.Interface)] nsIRDFNode  aNode, [MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aArc);
		
		/// <summary>Member HasArcOut </summary>
		/// <param name='aSource'> </param>
		/// <param name='aArc'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new bool HasArcOut([MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aSource, [MarshalAs(UnmanagedType.Interface)] nsIRDFResource  aArc);
		
		/// <summary>Member BeginUpdateBatch </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void BeginUpdateBatch();
		
		/// <summary>Member EndUpdateBatch </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new void EndUpdateBatch();
		
		/// <summary>Member GetBaseDataSourceAttribute </summary>
		/// <returns>A nsIRDFDataSource </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIRDFDataSource  GetBaseDataSourceAttribute();
		
		/// <summary>Member SetBaseDataSourceAttribute </summary>
		/// <param name='aBaseDataSource'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBaseDataSourceAttribute([MarshalAs(UnmanagedType.Interface)] nsIRDFDataSource  aBaseDataSource);
	}
}
