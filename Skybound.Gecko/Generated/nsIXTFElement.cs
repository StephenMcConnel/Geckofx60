// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIXTFElement.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIXTFElement.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIXTFElement </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("4f144387-796d-4baf-8641-5db45dba1808")]
	public interface nsIXTFElement
	{
		
		/// <summary>Member OnCreated </summary>
		/// <param name='wrapper'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnCreated([MarshalAs(UnmanagedType.Interface)] nsIXTFElementWrapper  wrapper);
		
		/// <summary>Member OnDestroyed </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void OnDestroyed();
		
		/// <summary>Member GetIsAttributeHandlerAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetIsAttributeHandlerAttribute();
		
		/// <summary>Member GetScriptingInterfaces </summary>
		/// <param name='count'> </param>
		/// <returns>A System.Guid</returns>
		System.Guid GetScriptingInterfaces(out System.UInt32  count);
		
		/// <summary>Member WillChangeDocument </summary>
		/// <param name='newDoc'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WillChangeDocument([MarshalAs(UnmanagedType.Interface)] nsIDOMDocument  newDoc);
		
		/// <summary>Member DocumentChanged </summary>
		/// <param name='newDoc'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DocumentChanged([MarshalAs(UnmanagedType.Interface)] nsIDOMDocument  newDoc);
		
		/// <summary>Member WillChangeParent </summary>
		/// <param name='newParent'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WillChangeParent([MarshalAs(UnmanagedType.Interface)] nsIDOMElement  newParent);
		
		/// <summary>Member ParentChanged </summary>
		/// <param name='newParent'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ParentChanged([MarshalAs(UnmanagedType.Interface)] nsIDOMElement  newParent);
		
		/// <summary>Member WillInsertChild </summary>
		/// <param name='child'> </param>
		/// <param name='index'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WillInsertChild([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  child, System.UInt32  index);
		
		/// <summary>Member ChildInserted </summary>
		/// <param name='child'> </param>
		/// <param name='index'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ChildInserted([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  child, System.UInt32  index);
		
		/// <summary>Member WillAppendChild </summary>
		/// <param name='child'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WillAppendChild([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  child);
		
		/// <summary>Member ChildAppended </summary>
		/// <param name='child'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ChildAppended([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  child);
		
		/// <summary>Member WillRemoveChild </summary>
		/// <param name='index'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WillRemoveChild(System.UInt32  index);
		
		/// <summary>Member ChildRemoved </summary>
		/// <param name='index'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ChildRemoved(System.UInt32  index);
		
		/// <summary>Member WillSetAttribute </summary>
		/// <param name='name'> </param>
		/// <param name='newValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WillSetAttribute([MarshalAs(UnmanagedType.Interface)] nsIAtom  name, [MarshalAs(UnmanagedType.LPStruct)] nsAString newValue);
		
		/// <summary>Member AttributeSet </summary>
		/// <param name='name'> </param>
		/// <param name='newValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AttributeSet([MarshalAs(UnmanagedType.Interface)] nsIAtom  name, [MarshalAs(UnmanagedType.LPStruct)] nsAString newValue);
		
		/// <summary>Member WillRemoveAttribute </summary>
		/// <param name='name'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void WillRemoveAttribute([MarshalAs(UnmanagedType.Interface)] nsIAtom  name);
		
		/// <summary>Member AttributeRemoved </summary>
		/// <param name='name'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AttributeRemoved([MarshalAs(UnmanagedType.Interface)] nsIAtom  name);
		
		/// <summary>Member BeginAddingChildren </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BeginAddingChildren();
		
		/// <summary>Member DoneAddingChildren </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DoneAddingChildren();
		
		/// <summary>Member HandleDefault </summary>
		/// <param name='aEvent'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool HandleDefault([MarshalAs(UnmanagedType.Interface)] nsIDOMEvent  aEvent);
		
		/// <summary>Member CloneState </summary>
		/// <param name='aElement'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CloneState([MarshalAs(UnmanagedType.Interface)] nsIDOMElement  aElement);
		
		/// <summary>Member GetAccesskeyNodeAttribute </summary>
		/// <returns>A nsIDOMAttr </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMAttr  GetAccesskeyNodeAttribute();
		
		/// <summary>Member PerformAccesskey </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void PerformAccesskey();
	}
}
