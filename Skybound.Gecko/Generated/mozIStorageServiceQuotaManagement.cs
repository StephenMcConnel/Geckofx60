// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: mozIStorageServiceQuotaManagement.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file mozIStorageServiceQuotaManagement.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>mozIStorageQuotaCallback </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("ae94f0a5-ebdf-48f4-9959-085e13235d8d")]
	public interface mozIStorageQuotaCallback
	{
		
		/// <summary>Member QuotaExceeded </summary>
		/// <param name='aFilename'> </param>
		/// <param name='aCurrentSizeLimit'> </param>
		/// <param name='aCurrentTotalSize'> </param>
		/// <param name='aUserData'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int QuotaExceeded([MarshalAs(UnmanagedType.LPStruct)] nsAString  aFilename, System.Int32  aCurrentSizeLimit, System.Int32  aCurrentTotalSize, [MarshalAs(UnmanagedType.Interface)] nsISupports  aUserData);
	}
	
	/// <summary>mozIStorageServiceQuotaManagement </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("11def472-446f-4635-a1d8-8856e85aac50")]
	public interface mozIStorageServiceQuotaManagement
	{
		
		/// <summary>Member OpenDatabaseWithVFS </summary>
		/// <param name='aDatabaseFile'> </param>
		/// <param name='aVFSName'> </param>
		/// <returns>A mozIStorageConnection</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		mozIStorageConnection OpenDatabaseWithVFS([MarshalAs(UnmanagedType.Interface)] nsIFile  aDatabaseFile, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aVFSName);
		
		/// <summary>Member SetQuotaForFilenamePattern </summary>
		/// <param name='aPattern'> </param>
		/// <param name='aSizeLimit'> </param>
		/// <param name='aCallback'> </param>
		/// <param name='aUserData'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetQuotaForFilenamePattern([MarshalAs(UnmanagedType.LPStruct)] nsAString  aPattern, System.Int32  aSizeLimit, mozIStorageQuotaCallback  aCallback, [MarshalAs(UnmanagedType.Interface)] nsISupports  aUserData);
	}
}
