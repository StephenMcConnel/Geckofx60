// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIDOMWebGLRenderingContext.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMWebGLRenderingContext.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIWebGLTexture </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("3b43762a-8305-11de-98ab-000c29206271")]
	public interface nsIWebGLTexture
	{
		
		/// <summary>Member GetNameAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetNameAttribute();
		
		/// <summary>Member SetNameAttribute </summary>
		/// <param name='aName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetNameAttribute(System.UInt32  aName);
	}
	
	/// <summary>nsIWebGLBuffer </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("9eca9c32-8305-11de-b89b-000c29206271")]
	public interface nsIWebGLBuffer
	{
		
		/// <summary>Member GetNameAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetNameAttribute();
		
		/// <summary>Member SetNameAttribute </summary>
		/// <param name='aName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetNameAttribute(System.UInt32  aName);
	}
	
	/// <summary>nsIWebGLProgram </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("a6a19e74-8305-11de-9ce9-000c29206271")]
	public interface nsIWebGLProgram
	{
		
		/// <summary>Member GetNameAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetNameAttribute();
		
		/// <summary>Member SetNameAttribute </summary>
		/// <param name='aName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetNameAttribute(System.UInt32  aName);
	}
	
	/// <summary>nsIWebGLShader </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("ac7440a4-8305-11de-807b-000c29206271")]
	public interface nsIWebGLShader
	{
		
		/// <summary>Member GetNameAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetNameAttribute();
		
		/// <summary>Member SetNameAttribute </summary>
		/// <param name='aName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetNameAttribute(System.UInt32  aName);
	}
	
	/// <summary>nsIWebGLShaderArray </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("beea4b38-3094-4e8d-b6e6-8b21d07e8994")]
	public interface nsIWebGLShaderArray
	{
		
		/// <summary>Member GetLengthAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetLengthAttribute();
		
		/// <summary>Member Item </summary>
		/// <param name='index'> </param>
		/// <returns>A nsIWebGLShader</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIWebGLShader Item(System.UInt32  index);
	}
	
	/// <summary>nsIWebGLFramebuffer </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("bce8be60-8305-11de-9f3c-000c29206271")]
	public interface nsIWebGLFramebuffer
	{
		
		/// <summary>Member GetNameAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetNameAttribute();
		
		/// <summary>Member SetNameAttribute </summary>
		/// <param name='aName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetNameAttribute(System.UInt32  aName);
	}
	
	/// <summary>nsIWebGLRenderbuffer </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("c82eacd0-8305-11de-9de9-000c29206271")]
	public interface nsIWebGLRenderbuffer
	{
		
		/// <summary>Member GetNameAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetNameAttribute();
		
		/// <summary>Member SetNameAttribute </summary>
		/// <param name='aName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetNameAttribute(System.UInt32  aName);
	}
	
	/// <summary>nsIWebGLActiveInfo </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("a85d4fd0-5b9f-4cb8-aeee-5a2c5c5bad76")]
	public interface nsIWebGLActiveInfo
	{
		
		/// <summary>Member GetSizeAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetSizeAttribute();
		
		/// <summary>Member GetTypeAttribute </summary>
		/// <returns>A System.UInt32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.UInt32  GetTypeAttribute();
		
		/// <summary>Member GetNameAttribute </summary>
		/// <param name='aName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNameAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aName);
	}
	
	/// <summary>nsIWebGLUniformLocation </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("d38b0467-623e-4c82-9140-5f14a3bd1bad")]
	public interface nsIWebGLUniformLocation
	{
		
		/// <summary>Member GetLocationAttribute </summary>
		/// <returns>A System.Int32 </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Int32  GetLocationAttribute();
		
		/// <summary>Member SetLocationAttribute </summary>
		/// <param name='aLocation'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetLocationAttribute(System.Int32  aLocation);
	}
	
	/// <summary>nsIDOMWebGLRenderingContext </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("2f21ca21-9720-4eee-ad94-27eefe4f72dc")]
	public interface nsIDOMWebGLRenderingContext
	{
		
		/// <summary>Member GetCanvasAttribute </summary>
		/// <returns>A nsIDOMHTMLCanvasElement </returns>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMHTMLCanvasElement  GetCanvasAttribute();
		
		/// <summary>Member GetContextAttributes </summary>
		/// <returns>A System.IntPtr</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr GetContextAttributes();
		
		/// <summary>Member ActiveTexture </summary>
		/// <param name='texture'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ActiveTexture(System.UInt32  texture);
		
		/// <summary>Member AttachShader </summary>
		/// <param name='program'> </param>
		/// <param name='shader'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AttachShader([MarshalAs(UnmanagedType.Interface)] nsIWebGLProgram  program, [MarshalAs(UnmanagedType.Interface)] nsIWebGLShader  shader);
		
		/// <summary>Member BindAttribLocation </summary>
		/// <param name='program'> </param>
		/// <param name='index'> </param>
		/// <param name='name'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BindAttribLocation([MarshalAs(UnmanagedType.Interface)] nsIWebGLProgram  program, System.UInt32  index, [MarshalAs(UnmanagedType.LPStruct)] nsAString name);
		
		/// <summary>Member BindBuffer </summary>
		/// <param name='target'> </param>
		/// <param name='buffer'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BindBuffer(System.UInt32  target, [MarshalAs(UnmanagedType.Interface)] nsIWebGLBuffer  buffer);
		
		/// <summary>Member BindFramebuffer </summary>
		/// <param name='target'> </param>
		/// <param name='framebuffer'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BindFramebuffer(System.UInt32  target, [MarshalAs(UnmanagedType.Interface)] nsIWebGLFramebuffer  framebuffer);
		
		/// <summary>Member BindRenderbuffer </summary>
		/// <param name='target'> </param>
		/// <param name='renderbuffer'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BindRenderbuffer(System.UInt32  target, [MarshalAs(UnmanagedType.Interface)] nsIWebGLRenderbuffer  renderbuffer);
		
		/// <summary>Member BindTexture </summary>
		/// <param name='target'> </param>
		/// <param name='texture'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BindTexture(System.UInt32  target, [MarshalAs(UnmanagedType.Interface)] nsIWebGLTexture  texture);
		
		/// <summary>Member BlendColor </summary>
		/// <param name='red'> </param>
		/// <param name='green'> </param>
		/// <param name='blue'> </param>
		/// <param name='alpha'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BlendColor(System.Double  red, System.Double  green, System.Double  blue, System.Double  alpha);
		
		/// <summary>Member BlendEquation </summary>
		/// <param name='mode'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BlendEquation(System.UInt32  mode);
		
		/// <summary>Member BlendEquationSeparate </summary>
		/// <param name='modeRGB'> </param>
		/// <param name='modeAlpha'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BlendEquationSeparate(System.UInt32  modeRGB, System.UInt32  modeAlpha);
		
		/// <summary>Member BlendFunc </summary>
		/// <param name='sfactor'> </param>
		/// <param name='dfactor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BlendFunc(System.UInt32  sfactor, System.UInt32  dfactor);
		
		/// <summary>Member BlendFuncSeparate </summary>
		/// <param name='srcRGB'> </param>
		/// <param name='dstRGB'> </param>
		/// <param name='srcAlpha'> </param>
		/// <param name='dstAlpha'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BlendFuncSeparate(System.UInt32  srcRGB, System.UInt32  dstRGB, System.UInt32  srcAlpha, System.UInt32  dstAlpha);
		
		/// <summary>Member BufferData </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BufferData(System.Int32  dummy);
		
		/// <summary>Member BufferData_size </summary>
		/// <param name='target'> </param>
		/// <param name='size'> </param>
		/// <param name='usage'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BufferData_size(System.UInt32  target, System.Int32  size, System.UInt32  usage);
		
		/// <summary>Member BufferData_buf </summary>
		/// <param name='target'> </param>
		/// <param name='data'> </param>
		/// <param name='usage'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BufferData_buf(System.UInt32  target, System.IntPtr  data, System.UInt32  usage);
		
		/// <summary>Member BufferData_array </summary>
		/// <param name='target'> </param>
		/// <param name='data'> </param>
		/// <param name='usage'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BufferData_array(System.UInt32  target, System.IntPtr  data, System.UInt32  usage);
		
		/// <summary>Member BufferData_null </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BufferData_null();
		
		/// <summary>Member BufferSubData </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BufferSubData(System.Int32  dummy);
		
		/// <summary>Member BufferSubData_buf </summary>
		/// <param name='target'> </param>
		/// <param name='offset'> </param>
		/// <param name='data'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BufferSubData_buf(System.UInt32  target, System.Int32  offset, System.IntPtr  data);
		
		/// <summary>Member BufferSubData_array </summary>
		/// <param name='target'> </param>
		/// <param name='offset'> </param>
		/// <param name='data'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BufferSubData_array(System.UInt32  target, System.Int32  offset, System.IntPtr  data);
		
		/// <summary>Member BufferSubData_null </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void BufferSubData_null();
		
		/// <summary>Member CheckFramebufferStatus </summary>
		/// <param name='target'> </param>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint CheckFramebufferStatus(System.UInt32  target);
		
		/// <summary>Member Clear </summary>
		/// <param name='mask'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Clear(System.UInt32  mask);
		
		/// <summary>Member ClearColor </summary>
		/// <param name='red'> </param>
		/// <param name='green'> </param>
		/// <param name='blue'> </param>
		/// <param name='alpha'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ClearColor(System.Double  red, System.Double  green, System.Double  blue, System.Double  alpha);
		
		/// <summary>Member ClearDepth </summary>
		/// <param name='depth'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ClearDepth(System.Double  depth);
		
		/// <summary>Member ClearStencil </summary>
		/// <param name='s'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ClearStencil(System.Int32  s);
		
		/// <summary>Member ColorMask </summary>
		/// <param name='red'> </param>
		/// <param name='green'> </param>
		/// <param name='blue'> </param>
		/// <param name='alpha'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ColorMask(System.Boolean  red, System.Boolean  green, System.Boolean  blue, System.Boolean  alpha);
		
		/// <summary>Member CompileShader </summary>
		/// <param name='shader'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CompileShader([MarshalAs(UnmanagedType.Interface)] nsIWebGLShader  shader);
		
		/// <summary>Member CopyTexImage2D </summary>
		/// <param name='target'> </param>
		/// <param name='level'> </param>
		/// <param name='internalformat'> </param>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		/// <param name='border'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CopyTexImage2D(System.UInt32  target, System.Int32  level, System.UInt32  internalformat, System.Int32  x, System.Int32  y, System.Int32  width, System.Int32  height, System.Int32  border);
		
		/// <summary>Member CopyTexSubImage2D </summary>
		/// <param name='target'> </param>
		/// <param name='level'> </param>
		/// <param name='xoffset'> </param>
		/// <param name='yoffset'> </param>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CopyTexSubImage2D(System.UInt32  target, System.Int32  level, System.Int32  xoffset, System.Int32  yoffset, System.Int32  x, System.Int32  y, System.Int32  width, System.Int32  height);
		
		/// <summary>Member CreateBuffer </summary>
		/// <returns>A nsIWebGLBuffer</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIWebGLBuffer CreateBuffer();
		
		/// <summary>Member CreateProgram </summary>
		/// <returns>A nsIWebGLProgram</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIWebGLProgram CreateProgram();
		
		/// <summary>Member CreateFramebuffer </summary>
		/// <returns>A nsIWebGLFramebuffer</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIWebGLFramebuffer CreateFramebuffer();
		
		/// <summary>Member CreateRenderbuffer </summary>
		/// <returns>A nsIWebGLRenderbuffer</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIWebGLRenderbuffer CreateRenderbuffer();
		
		/// <summary>Member CreateShader </summary>
		/// <param name='type'> </param>
		/// <returns>A nsIWebGLShader</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIWebGLShader CreateShader(System.UInt32  type);
		
		/// <summary>Member CreateTexture </summary>
		/// <returns>A nsIWebGLTexture</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIWebGLTexture CreateTexture();
		
		/// <summary>Member CullFace </summary>
		/// <param name='mode'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CullFace(System.UInt32  mode);
		
		/// <summary>Member DeleteBuffer </summary>
		/// <param name='buffer'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DeleteBuffer([MarshalAs(UnmanagedType.Interface)] nsIWebGLBuffer  buffer);
		
		/// <summary>Member DeleteProgram </summary>
		/// <param name='program'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DeleteProgram([MarshalAs(UnmanagedType.Interface)] nsIWebGLProgram  program);
		
		/// <summary>Member DeleteFramebuffer </summary>
		/// <param name='framebuffer'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DeleteFramebuffer([MarshalAs(UnmanagedType.Interface)] nsIWebGLFramebuffer  framebuffer);
		
		/// <summary>Member DeleteRenderbuffer </summary>
		/// <param name='renderbuffer'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DeleteRenderbuffer([MarshalAs(UnmanagedType.Interface)] nsIWebGLRenderbuffer  renderbuffer);
		
		/// <summary>Member DeleteShader </summary>
		/// <param name='shader'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DeleteShader([MarshalAs(UnmanagedType.Interface)] nsIWebGLShader  shader);
		
		/// <summary>Member DeleteTexture </summary>
		/// <param name='texture'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DeleteTexture([MarshalAs(UnmanagedType.Interface)] nsIWebGLTexture  texture);
		
		/// <summary>Member DepthFunc </summary>
		/// <param name='func'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DepthFunc(System.UInt32  func);
		
		/// <summary>Member DepthMask </summary>
		/// <param name='flag'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DepthMask(System.Boolean  flag);
		
		/// <summary>Member DepthRange </summary>
		/// <param name='zNear'> </param>
		/// <param name='zFar'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DepthRange(System.Double  zNear, System.Double  zFar);
		
		/// <summary>Member DetachShader </summary>
		/// <param name='program'> </param>
		/// <param name='shader'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DetachShader([MarshalAs(UnmanagedType.Interface)] nsIWebGLProgram  program, [MarshalAs(UnmanagedType.Interface)] nsIWebGLShader  shader);
		
		/// <summary>Member Disable </summary>
		/// <param name='cap'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Disable(System.UInt32  cap);
		
		/// <summary>Member DisableVertexAttribArray </summary>
		/// <param name='index'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DisableVertexAttribArray(System.UInt32  index);
		
		/// <summary>Member DrawArrays </summary>
		/// <param name='mode'> </param>
		/// <param name='first'> </param>
		/// <param name='count'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DrawArrays(System.UInt32  mode, System.Int32  first, System.Int32  count);
		
		/// <summary>Member DrawElements </summary>
		/// <param name='mode'> </param>
		/// <param name='count'> </param>
		/// <param name='type'> </param>
		/// <param name='offset'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DrawElements(System.UInt32  mode, System.Int32  count, System.UInt32  type, System.Int32  offset);
		
		/// <summary>Member Enable </summary>
		/// <param name='cap'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Enable(System.UInt32  cap);
		
		/// <summary>Member EnableVertexAttribArray </summary>
		/// <param name='index'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void EnableVertexAttribArray(System.UInt32  index);
		
		/// <summary>Member Finish </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Finish();
		
		/// <summary>Member Flush </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Flush();
		
		/// <summary>Member FramebufferRenderbuffer </summary>
		/// <param name='target'> </param>
		/// <param name='attachment'> </param>
		/// <param name='renderbuffertarget'> </param>
		/// <param name='renderbuffer'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void FramebufferRenderbuffer(System.UInt32  target, System.UInt32  attachment, System.UInt32  renderbuffertarget, [MarshalAs(UnmanagedType.Interface)] nsIWebGLRenderbuffer  renderbuffer);
		
		/// <summary>Member FramebufferTexture2D </summary>
		/// <param name='target'> </param>
		/// <param name='attachment'> </param>
		/// <param name='textarget'> </param>
		/// <param name='texture'> </param>
		/// <param name='level'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void FramebufferTexture2D(System.UInt32  target, System.UInt32  attachment, System.UInt32  textarget, [MarshalAs(UnmanagedType.Interface)] nsIWebGLTexture  texture, System.Int32  level);
		
		/// <summary>Member FrontFace </summary>
		/// <param name='mode'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void FrontFace(System.UInt32  mode);
		
		/// <summary>Member GenerateMipmap </summary>
		/// <param name='target'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GenerateMipmap(System.UInt32  target);
		
		/// <summary>Member GetActiveAttrib </summary>
		/// <param name='program'> </param>
		/// <param name='index'> </param>
		/// <returns>A nsIWebGLActiveInfo</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIWebGLActiveInfo GetActiveAttrib([MarshalAs(UnmanagedType.Interface)] nsIWebGLProgram  program, System.UInt32  index);
		
		/// <summary>Member GetActiveUniform </summary>
		/// <param name='program'> </param>
		/// <param name='index'> </param>
		/// <returns>A nsIWebGLActiveInfo</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIWebGLActiveInfo GetActiveUniform([MarshalAs(UnmanagedType.Interface)] nsIWebGLProgram  program, System.UInt32  index);
		
		/// <summary>Member GetAttachedShaders </summary>
		/// <param name='program'> </param>
		/// <returns>A nsIVariant</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant GetAttachedShaders([MarshalAs(UnmanagedType.Interface)] nsIWebGLProgram  program);
		
		/// <summary>Member GetAttribLocation </summary>
		/// <param name='program'> </param>
		/// <param name='name'> </param>
		/// <returns>A System.Int32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetAttribLocation([MarshalAs(UnmanagedType.Interface)] nsIWebGLProgram  program, [MarshalAs(UnmanagedType.LPStruct)] nsAString name);
		
		/// <summary>Member GetParameter </summary>
		/// <param name='pname'> </param>
		/// <returns>A nsIVariant</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant GetParameter(System.UInt32  pname);
		
		/// <summary>Member GetBufferParameter </summary>
		/// <param name='target'> </param>
		/// <param name='pname'> </param>
		/// <returns>A nsIVariant</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant GetBufferParameter(System.UInt32  target, System.UInt32  pname);
		
		/// <summary>Member GetError </summary>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetError();
		
		/// <summary>Member GetFramebufferAttachmentParameter </summary>
		/// <param name='target'> </param>
		/// <param name='attachment'> </param>
		/// <param name='pname'> </param>
		/// <returns>A nsIVariant</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant GetFramebufferAttachmentParameter(System.UInt32  target, System.UInt32  attachment, System.UInt32  pname);
		
		/// <summary>Member GetProgramParameter </summary>
		/// <param name='program'> </param>
		/// <param name='pname'> </param>
		/// <returns>A nsIVariant</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant GetProgramParameter([MarshalAs(UnmanagedType.Interface)] nsIWebGLProgram  program, System.UInt32  pname);
		
		/// <summary>Member GetProgramInfoLog </summary>
		/// <param name='program'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetProgramInfoLog([MarshalAs(UnmanagedType.Interface)] nsIWebGLProgram  program);
		
		/// <summary>Member GetRenderbufferParameter </summary>
		/// <param name='target'> </param>
		/// <param name='pname'> </param>
		/// <returns>A nsIVariant</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant GetRenderbufferParameter(System.UInt32  target, System.UInt32  pname);
		
		/// <summary>Member GetShaderParameter </summary>
		/// <param name='shader'> </param>
		/// <param name='pname'> </param>
		/// <returns>A nsIVariant</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant GetShaderParameter([MarshalAs(UnmanagedType.Interface)] nsIWebGLShader  shader, System.UInt32  pname);
		
		/// <summary>Member GetShaderInfoLog </summary>
		/// <param name='shader'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetShaderInfoLog([MarshalAs(UnmanagedType.Interface)] nsIWebGLShader  shader);
		
		/// <summary>Member GetShaderSource </summary>
		/// <param name='shader'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetShaderSource([MarshalAs(UnmanagedType.Interface)] nsIWebGLShader  shader);
		
		/// <summary>Member GetTexParameter </summary>
		/// <param name='target'> </param>
		/// <param name='pname'> </param>
		/// <returns>A nsIVariant</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant GetTexParameter(System.UInt32  target, System.UInt32  pname);
		
		/// <summary>Member GetUniform </summary>
		/// <param name='program'> </param>
		/// <param name='location'> </param>
		/// <returns>A nsIVariant</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant GetUniform([MarshalAs(UnmanagedType.Interface)] nsIWebGLProgram  program, [MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location);
		
		/// <summary>Member GetUniformLocation </summary>
		/// <param name='program'> </param>
		/// <param name='name'> </param>
		/// <returns>A nsIWebGLUniformLocation</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIWebGLUniformLocation GetUniformLocation([MarshalAs(UnmanagedType.Interface)] nsIWebGLProgram  program, [MarshalAs(UnmanagedType.LPStruct)] nsAString name);
		
		/// <summary>Member GetVertexAttrib </summary>
		/// <param name='index'> </param>
		/// <param name='pname'> </param>
		/// <returns>A nsIVariant</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant GetVertexAttrib(System.UInt32  index, System.UInt32  pname);
		
		/// <summary>Member GetVertexAttribOffset </summary>
		/// <param name='index'> </param>
		/// <param name='pname'> </param>
		/// <returns>A System.UInt32</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetVertexAttribOffset(System.UInt32  index, System.UInt32  pname);
		
		/// <summary>Member Hint </summary>
		/// <param name='target'> </param>
		/// <param name='mode'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Hint(System.UInt32  target, System.UInt32  mode);
		
		/// <summary>Member IsBuffer </summary>
		/// <param name='buffer'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsBuffer([MarshalAs(UnmanagedType.Interface)] nsIWebGLBuffer  buffer);
		
		/// <summary>Member IsFramebuffer </summary>
		/// <param name='framebuffer'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsFramebuffer([MarshalAs(UnmanagedType.Interface)] nsIWebGLFramebuffer  framebuffer);
		
		/// <summary>Member IsProgram </summary>
		/// <param name='program'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsProgram([MarshalAs(UnmanagedType.Interface)] nsIWebGLProgram  program);
		
		/// <summary>Member IsRenderbuffer </summary>
		/// <param name='renderbuffer'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsRenderbuffer([MarshalAs(UnmanagedType.Interface)] nsIWebGLRenderbuffer  renderbuffer);
		
		/// <summary>Member IsShader </summary>
		/// <param name='shader'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsShader([MarshalAs(UnmanagedType.Interface)] nsIWebGLShader  shader);
		
		/// <summary>Member IsTexture </summary>
		/// <param name='texture'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsTexture([MarshalAs(UnmanagedType.Interface)] nsIWebGLTexture  texture);
		
		/// <summary>Member IsEnabled </summary>
		/// <param name='cap'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsEnabled(System.UInt32  cap);
		
		/// <summary>Member LineWidth </summary>
		/// <param name='width'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void LineWidth(System.Double  width);
		
		/// <summary>Member LinkProgram </summary>
		/// <param name='program'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void LinkProgram([MarshalAs(UnmanagedType.Interface)] nsIWebGLProgram  program);
		
		/// <summary>Member PixelStorei </summary>
		/// <param name='pname'> </param>
		/// <param name='param'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void PixelStorei(System.UInt32  pname, System.Int32  param);
		
		/// <summary>Member PolygonOffset </summary>
		/// <param name='factor'> </param>
		/// <param name='units'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void PolygonOffset(System.Double  factor, System.Double  units);
		
		/// <summary>Member ReadPixels </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ReadPixels(System.Int32  dummy);
		
		/// <summary>Member ReadPixels_array </summary>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		/// <param name='format'> </param>
		/// <param name='type'> </param>
		/// <param name='pixels'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ReadPixels_array(System.Int32  x, System.Int32  y, System.Int32  width, System.Int32  height, System.UInt32  format, System.UInt32  type, System.IntPtr  pixels);
		
		/// <summary>Member ReadPixels_buf </summary>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		/// <param name='format'> </param>
		/// <param name='type'> </param>
		/// <param name='pixels'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ReadPixels_buf(System.Int32  x, System.Int32  y, System.Int32  width, System.Int32  height, System.UInt32  format, System.UInt32  type, System.IntPtr  pixels);
		
		/// <summary>Member RenderbufferStorage </summary>
		/// <param name='target'> </param>
		/// <param name='internalformat'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RenderbufferStorage(System.UInt32  target, System.UInt32  internalformat, System.Int32  width, System.Int32  height);
		
		/// <summary>Member SampleCoverage </summary>
		/// <param name='value'> </param>
		/// <param name='invert'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SampleCoverage(System.Double  value, System.Boolean  invert);
		
		/// <summary>Member Scissor </summary>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Scissor(System.Int32  x, System.Int32  y, System.Int32  width, System.Int32  height);
		
		/// <summary>Member ShaderSource </summary>
		/// <param name='shader'> </param>
		/// <param name='source'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ShaderSource([MarshalAs(UnmanagedType.Interface)] nsIWebGLShader  shader, [MarshalAs(UnmanagedType.LPStruct)] nsAString source);
		
		/// <summary>Member StencilFunc </summary>
		/// <param name='func'> </param>
		/// <param name='ref'> </param>
		/// <param name='mask'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void StencilFunc(System.UInt32  func, System.Int32  @ref, System.UInt32  mask);
		
		/// <summary>Member StencilFuncSeparate </summary>
		/// <param name='face'> </param>
		/// <param name='func'> </param>
		/// <param name='ref'> </param>
		/// <param name='mask'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void StencilFuncSeparate(System.UInt32  face, System.UInt32  func, System.Int32  @ref, System.UInt32  mask);
		
		/// <summary>Member StencilMask </summary>
		/// <param name='mask'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void StencilMask(System.UInt32  mask);
		
		/// <summary>Member StencilMaskSeparate </summary>
		/// <param name='face'> </param>
		/// <param name='mask'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void StencilMaskSeparate(System.UInt32  face, System.UInt32  mask);
		
		/// <summary>Member StencilOp </summary>
		/// <param name='fail'> </param>
		/// <param name='zfail'> </param>
		/// <param name='zpass'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void StencilOp(System.UInt32  fail, System.UInt32  zfail, System.UInt32  zpass);
		
		/// <summary>Member StencilOpSeparate </summary>
		/// <param name='face'> </param>
		/// <param name='fail'> </param>
		/// <param name='zfail'> </param>
		/// <param name='zpass'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void StencilOpSeparate(System.UInt32  face, System.UInt32  fail, System.UInt32  zfail, System.UInt32  zpass);
		
		/// <summary>Member TexImage2D </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TexImage2D(System.Int32  dummy);
		
		/// <summary>Member TexImage2D_buf </summary>
		/// <param name='target'> </param>
		/// <param name='level'> </param>
		/// <param name='internalformat'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		/// <param name='border'> </param>
		/// <param name='format'> </param>
		/// <param name='type'> </param>
		/// <param name='pixels'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TexImage2D_buf(System.UInt32  target, System.Int32  level, System.UInt32  internalformat, System.Int32  width, System.Int32  height, System.Int32  border, System.UInt32  format, System.UInt32  type, System.IntPtr  pixels);
		
		/// <summary>Member TexImage2D_array </summary>
		/// <param name='target'> </param>
		/// <param name='level'> </param>
		/// <param name='internalformat'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		/// <param name='border'> </param>
		/// <param name='format'> </param>
		/// <param name='type'> </param>
		/// <param name='pixels'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TexImage2D_array(System.UInt32  target, System.Int32  level, System.UInt32  internalformat, System.Int32  width, System.Int32  height, System.Int32  border, System.UInt32  format, System.UInt32  type, System.IntPtr  pixels);
		
		/// <summary>Member TexImage2D_imageData </summary>
		/// <param name='target'> </param>
		/// <param name='level'> </param>
		/// <param name='internalformat'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		/// <param name='border'> </param>
		/// <param name='format'> </param>
		/// <param name='type'> </param>
		/// <param name='pixels'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TexImage2D_imageData(System.UInt32  target, System.Int32  level, System.UInt32  internalformat, System.Int32  width, System.Int32  height, System.Int32  border, System.UInt32  format, System.UInt32  type, System.IntPtr  pixels);
		
		/// <summary>Member TexImage2D_dom </summary>
		/// <param name='target'> </param>
		/// <param name='level'> </param>
		/// <param name='internalformat'> </param>
		/// <param name='format'> </param>
		/// <param name='type'> </param>
		/// <param name='element'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TexImage2D_dom(System.UInt32  target, System.Int32  level, System.UInt32  internalformat, System.UInt32  format, System.UInt32  type, [MarshalAs(UnmanagedType.Interface)] nsIDOMElement  element);
		
		/// <summary>Member TexSubImage2D </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TexSubImage2D(System.Int32  dummy);
		
		/// <summary>Member TexSubImage2D_buf </summary>
		/// <param name='target'> </param>
		/// <param name='level'> </param>
		/// <param name='xoffset'> </param>
		/// <param name='yoffset'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		/// <param name='format'> </param>
		/// <param name='type'> </param>
		/// <param name='pixels'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TexSubImage2D_buf(System.UInt32  target, System.Int32  level, System.Int32  xoffset, System.Int32  yoffset, System.Int32  width, System.Int32  height, System.UInt32  format, System.UInt32  type, System.IntPtr  pixels);
		
		/// <summary>Member TexSubImage2D_array </summary>
		/// <param name='target'> </param>
		/// <param name='level'> </param>
		/// <param name='xoffset'> </param>
		/// <param name='yoffset'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		/// <param name='format'> </param>
		/// <param name='type'> </param>
		/// <param name='pixels'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TexSubImage2D_array(System.UInt32  target, System.Int32  level, System.Int32  xoffset, System.Int32  yoffset, System.Int32  width, System.Int32  height, System.UInt32  format, System.UInt32  type, System.IntPtr  pixels);
		
		/// <summary>Member TexSubImage2D_imageData </summary>
		/// <param name='target'> </param>
		/// <param name='level'> </param>
		/// <param name='xoffset'> </param>
		/// <param name='yoffset'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		/// <param name='format'> </param>
		/// <param name='type'> </param>
		/// <param name='pixels'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TexSubImage2D_imageData(System.UInt32  target, System.Int32  level, System.Int32  xoffset, System.Int32  yoffset, System.Int32  width, System.Int32  height, System.UInt32  format, System.UInt32  type, System.IntPtr  pixels);
		
		/// <summary>Member TexSubImage2D_dom </summary>
		/// <param name='target'> </param>
		/// <param name='level'> </param>
		/// <param name='xoffset'> </param>
		/// <param name='yoffset'> </param>
		/// <param name='format'> </param>
		/// <param name='type'> </param>
		/// <param name='element'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TexSubImage2D_dom(System.UInt32  target, System.Int32  level, System.Int32  xoffset, System.Int32  yoffset, System.UInt32  format, System.UInt32  type, [MarshalAs(UnmanagedType.Interface)] nsIDOMElement  element);
		
		/// <summary>Member TexParameterf </summary>
		/// <param name='target'> </param>
		/// <param name='pname'> </param>
		/// <param name='param'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TexParameterf(System.UInt32  target, System.UInt32  pname, System.Double  param);
		
		/// <summary>Member TexParameteri </summary>
		/// <param name='target'> </param>
		/// <param name='pname'> </param>
		/// <param name='param'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TexParameteri(System.UInt32  target, System.UInt32  pname, System.Int32  param);
		
		/// <summary>Member Uniform1f </summary>
		/// <param name='location'> </param>
		/// <param name='x'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform1f([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.Double  x);
		
		/// <summary>Member Uniform1i </summary>
		/// <param name='location'> </param>
		/// <param name='x'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform1i([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.Int32  x);
		
		/// <summary>Member Uniform2f </summary>
		/// <param name='location'> </param>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform2f([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.Double  x, System.Double  y);
		
		/// <summary>Member Uniform2i </summary>
		/// <param name='location'> </param>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform2i([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.Int32  x, System.Int32  y);
		
		/// <summary>Member Uniform3f </summary>
		/// <param name='location'> </param>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='z'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform3f([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.Double  x, System.Double  y, System.Double  z);
		
		/// <summary>Member Uniform3i </summary>
		/// <param name='location'> </param>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='z'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform3i([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.Int32  x, System.Int32  y, System.Int32  z);
		
		/// <summary>Member Uniform4f </summary>
		/// <param name='location'> </param>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='z'> </param>
		/// <param name='w'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform4f([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.Double  x, System.Double  y, System.Double  z, System.Double  w);
		
		/// <summary>Member Uniform4i </summary>
		/// <param name='location'> </param>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='z'> </param>
		/// <param name='w'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform4i([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.Int32  x, System.Int32  y, System.Int32  z, System.Int32  w);
		
		/// <summary>Member Uniform1fv </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform1fv(System.Int32  dummy);
		
		/// <summary>Member Uniform1iv </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform1iv(System.Int32  dummy);
		
		/// <summary>Member Uniform2fv </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform2fv(System.Int32  dummy);
		
		/// <summary>Member Uniform2iv </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform2iv(System.Int32  dummy);
		
		/// <summary>Member Uniform3fv </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform3fv(System.Int32  dummy);
		
		/// <summary>Member Uniform3iv </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform3iv(System.Int32  dummy);
		
		/// <summary>Member Uniform4fv </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform4fv(System.Int32  dummy);
		
		/// <summary>Member Uniform4iv </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform4iv(System.Int32  dummy);
		
		/// <summary>Member Uniform1fv_array </summary>
		/// <param name='location'> </param>
		/// <param name='v'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform1fv_array([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.IntPtr  v);
		
		/// <summary>Member Uniform1iv_array </summary>
		/// <param name='location'> </param>
		/// <param name='v'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform1iv_array([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.IntPtr  v);
		
		/// <summary>Member Uniform2fv_array </summary>
		/// <param name='location'> </param>
		/// <param name='v'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform2fv_array([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.IntPtr  v);
		
		/// <summary>Member Uniform2iv_array </summary>
		/// <param name='location'> </param>
		/// <param name='v'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform2iv_array([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.IntPtr  v);
		
		/// <summary>Member Uniform3fv_array </summary>
		/// <param name='location'> </param>
		/// <param name='v'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform3fv_array([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.IntPtr  v);
		
		/// <summary>Member Uniform3iv_array </summary>
		/// <param name='location'> </param>
		/// <param name='v'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform3iv_array([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.IntPtr  v);
		
		/// <summary>Member Uniform4fv_array </summary>
		/// <param name='location'> </param>
		/// <param name='v'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform4fv_array([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.IntPtr  v);
		
		/// <summary>Member Uniform4iv_array </summary>
		/// <param name='location'> </param>
		/// <param name='v'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Uniform4iv_array([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.IntPtr  v);
		
		/// <summary>Member UniformMatrix2fv </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void UniformMatrix2fv(System.Int32  dummy);
		
		/// <summary>Member UniformMatrix3fv </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void UniformMatrix3fv(System.Int32  dummy);
		
		/// <summary>Member UniformMatrix4fv </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void UniformMatrix4fv(System.Int32  dummy);
		
		/// <summary>Member UniformMatrix2fv_array </summary>
		/// <param name='location'> </param>
		/// <param name='transpose'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void UniformMatrix2fv_array([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.Boolean  transpose, System.IntPtr  value);
		
		/// <summary>Member UniformMatrix3fv_array </summary>
		/// <param name='location'> </param>
		/// <param name='transpose'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void UniformMatrix3fv_array([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.Boolean  transpose, System.IntPtr  value);
		
		/// <summary>Member UniformMatrix4fv_array </summary>
		/// <param name='location'> </param>
		/// <param name='transpose'> </param>
		/// <param name='value'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void UniformMatrix4fv_array([MarshalAs(UnmanagedType.Interface)] nsIWebGLUniformLocation  location, System.Boolean  transpose, System.IntPtr  value);
		
		/// <summary>Member UseProgram </summary>
		/// <param name='program'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void UseProgram([MarshalAs(UnmanagedType.Interface)] nsIWebGLProgram  program);
		
		/// <summary>Member ValidateProgram </summary>
		/// <param name='program'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ValidateProgram([MarshalAs(UnmanagedType.Interface)] nsIWebGLProgram  program);
		
		/// <summary>Member VertexAttrib1f </summary>
		/// <param name='indx'> </param>
		/// <param name='x'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void VertexAttrib1f(System.UInt32  indx, System.Double  x);
		
		/// <summary>Member VertexAttrib2f </summary>
		/// <param name='indx'> </param>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void VertexAttrib2f(System.UInt32  indx, System.Double  x, System.Double  y);
		
		/// <summary>Member VertexAttrib3f </summary>
		/// <param name='indx'> </param>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='z'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void VertexAttrib3f(System.UInt32  indx, System.Double  x, System.Double  y, System.Double  z);
		
		/// <summary>Member VertexAttrib4f </summary>
		/// <param name='indx'> </param>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='z'> </param>
		/// <param name='w'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void VertexAttrib4f(System.UInt32  indx, System.Double  x, System.Double  y, System.Double  z, System.Double  w);
		
		/// <summary>Member VertexAttrib1fv </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void VertexAttrib1fv(System.Int32  dummy);
		
		/// <summary>Member VertexAttrib2fv </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void VertexAttrib2fv(System.Int32  dummy);
		
		/// <summary>Member VertexAttrib3fv </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void VertexAttrib3fv(System.Int32  dummy);
		
		/// <summary>Member VertexAttrib4fv </summary>
		/// <param name='dummy'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void VertexAttrib4fv(System.Int32  dummy);
		
		/// <summary>Member VertexAttrib1fv_array </summary>
		/// <param name='indx'> </param>
		/// <param name='values'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void VertexAttrib1fv_array(System.UInt32  indx, System.IntPtr  values);
		
		/// <summary>Member VertexAttrib2fv_array </summary>
		/// <param name='indx'> </param>
		/// <param name='values'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void VertexAttrib2fv_array(System.UInt32  indx, System.IntPtr  values);
		
		/// <summary>Member VertexAttrib3fv_array </summary>
		/// <param name='indx'> </param>
		/// <param name='values'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void VertexAttrib3fv_array(System.UInt32  indx, System.IntPtr  values);
		
		/// <summary>Member VertexAttrib4fv_array </summary>
		/// <param name='indx'> </param>
		/// <param name='values'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void VertexAttrib4fv_array(System.UInt32  indx, System.IntPtr  values);
		
		/// <summary>Member VertexAttribPointer </summary>
		/// <param name='idx'> </param>
		/// <param name='size'> </param>
		/// <param name='type'> </param>
		/// <param name='normalized'> </param>
		/// <param name='stride'> </param>
		/// <param name='offset'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void VertexAttribPointer(System.UInt32  idx, System.Int32  size, System.UInt32  type, System.Boolean  normalized, System.Int32  stride, System.IntPtr  offset);
		
		/// <summary>Member Viewport </summary>
		/// <param name='x'> </param>
		/// <param name='y'> </param>
		/// <param name='width'> </param>
		/// <param name='height'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Viewport(System.Int32  x, System.Int32  y, System.Int32  width, System.Int32  height);
		
		/// <summary>Member MozGetUnderlyingParamString </summary>
		/// <param name='pname'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString MozGetUnderlyingParamString(System.UInt32  pname);
		
		/// <summary>Member GetExtension </summary>
		/// <param name='name'> </param>
		/// <returns>A nsISupports</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports GetExtension([MarshalAs(UnmanagedType.LPStruct)] nsAString name);
	}
	
	/// <summary>nsIDOMWebGLRenderingContext_MOZILLA_2_0_BRANCH </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("23182042-3d92-407d-9b9b-37c9886398f7")]
	public interface nsIDOMWebGLRenderingContext_MOZILLA_2_0_BRANCH
	{
		
		/// <summary>Member GetSupportedExtensions </summary>
		/// <returns>A nsIVariant</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIVariant GetSupportedExtensions();
		
		/// <summary>Member IsContextLost </summary>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsContextLost();
	}
}
