// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIDNSService.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIDNSService.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIDNSService </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("c1a56a45-8fa3-44e6-9f01-38c91c858cf9")]
	public interface nsIDNSService
	{
		
		/// <summary>Member AsyncResolve </summary>
		/// <param name='aHostName'> </param>
		/// <param name='aFlags'> </param>
		/// <param name='aListener'> </param>
		/// <param name='aListenerTarget'> </param>
		/// <returns>A nsICancelable</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsICancelable AsyncResolve([MarshalAs(UnmanagedType.LPStruct)] nsAUTF8String  aHostName, System.UInt32  aFlags, [MarshalAs(UnmanagedType.Interface)] nsIDNSListener  aListener, [MarshalAs(UnmanagedType.Interface)] nsIEventTarget  aListenerTarget);
		
		/// <summary>Member Resolve </summary>
		/// <param name='aHostName'> </param>
		/// <param name='aFlags'> </param>
		/// <returns>A nsIDNSRecord</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDNSRecord Resolve([MarshalAs(UnmanagedType.LPStruct)] nsAUTF8String  aHostName, System.UInt32  aFlags);
		
		/// <summary>Member GetMyHostNameAttribute </summary>
		/// <param name='aMyHostName'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetMyHostNameAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAUTF8String  aMyHostName);
	}
}
