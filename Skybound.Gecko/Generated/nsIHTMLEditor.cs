// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIHTMLEditor.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIHTMLEditor.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIHTMLEditor </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("afc36593-5787-4420-93d9-b2c0ccbf0cad")]
	public interface nsIHTMLEditor
	{
		
		/// <summary>Member AddDefaultProperty </summary>
		/// <param name='aProperty'> </param>
		/// <param name='aAttribute'> </param>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AddDefaultProperty([MarshalAs(UnmanagedType.Interface)] nsIAtom  aProperty, [MarshalAs(UnmanagedType.LPStruct)] nsAString aAttribute, [MarshalAs(UnmanagedType.LPStruct)] nsAString aValue);
		
		/// <summary>Member RemoveDefaultProperty </summary>
		/// <param name='aProperty'> </param>
		/// <param name='aAttribute'> </param>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveDefaultProperty([MarshalAs(UnmanagedType.Interface)] nsIAtom  aProperty, [MarshalAs(UnmanagedType.LPStruct)] nsAString aAttribute, [MarshalAs(UnmanagedType.LPStruct)] nsAString aValue);
		
		/// <summary>Member RemoveAllDefaultProperties </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveAllDefaultProperties();
		
		/// <summary>Member SetCSSInlineProperty </summary>
		/// <param name='aProperty'> </param>
		/// <param name='aAttribute'> </param>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCSSInlineProperty([MarshalAs(UnmanagedType.Interface)] nsIAtom  aProperty, [MarshalAs(UnmanagedType.LPStruct)] nsAString aAttribute, [MarshalAs(UnmanagedType.LPStruct)] nsAString aValue);
		
		/// <summary>Member SetInlineProperty </summary>
		/// <param name='aProperty'> </param>
		/// <param name='aAttribute'> </param>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetInlineProperty([MarshalAs(UnmanagedType.Interface)] nsIAtom  aProperty, [MarshalAs(UnmanagedType.LPStruct)] nsAString aAttribute, [MarshalAs(UnmanagedType.LPStruct)] nsAString aValue);
		
		/// <summary>Member GetInlineProperty </summary>
		/// <param name='aProperty'> </param>
		/// <param name='aAttribute'> </param>
		/// <param name='aValue'> </param>
		/// <param name='aFirst'> </param>
		/// <param name='aAny'> </param>
		/// <param name='aAll'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetInlineProperty([MarshalAs(UnmanagedType.Interface)] nsIAtom  aProperty, [MarshalAs(UnmanagedType.LPStruct)] nsAString aAttribute, [MarshalAs(UnmanagedType.LPStruct)] nsAString aValue, out System.Boolean  aFirst, out System.Boolean  aAny, out System.Boolean  aAll);
		
		/// <summary>Member GetInlinePropertyWithAttrValue </summary>
		/// <param name='aProperty'> </param>
		/// <param name='aAttribute'> </param>
		/// <param name='aValue'> </param>
		/// <param name='aFirst'> </param>
		/// <param name='aAny'> </param>
		/// <param name='aAll'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetInlinePropertyWithAttrValue([MarshalAs(UnmanagedType.Interface)] nsIAtom  aProperty, [MarshalAs(UnmanagedType.LPStruct)] nsAString aAttribute, [MarshalAs(UnmanagedType.LPStruct)] nsAString aValue, out System.Boolean  aFirst, out System.Boolean  aAny, out System.Boolean  aAll);
		
		/// <summary>Member RemoveAllInlineProperties </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveAllInlineProperties();
		
		/// <summary>Member RemoveInlineProperty </summary>
		/// <param name='aProperty'> </param>
		/// <param name='aAttribute'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveInlineProperty([MarshalAs(UnmanagedType.Interface)] nsIAtom  aProperty, [MarshalAs(UnmanagedType.LPStruct)] nsAString aAttribute);
		
		/// <summary>Member IncreaseFontSize </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void IncreaseFontSize();
		
		/// <summary>Member DecreaseFontSize </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DecreaseFontSize();
		
		/// <summary>Member CanDrag </summary>
		/// <param name='aEvent'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool CanDrag([MarshalAs(UnmanagedType.Interface)] nsIDOMEvent  aEvent);
		
		/// <summary>Member DoDrag </summary>
		/// <param name='aEvent'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DoDrag([MarshalAs(UnmanagedType.Interface)] nsIDOMEvent  aEvent);
		
		/// <summary>Member InsertFromDrop </summary>
		/// <param name='aEvent'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InsertFromDrop([MarshalAs(UnmanagedType.Interface)] nsIDOMEvent  aEvent);
		
		/// <summary>Member NodeIsBlock </summary>
		/// <param name='node'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool NodeIsBlock([MarshalAs(UnmanagedType.Interface)] nsIDOMNode  node);
		
		/// <summary>Member InsertHTML </summary>
		/// <param name='aInputString'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InsertHTML([MarshalAs(UnmanagedType.LPStruct)] nsAString aInputString);
		
		/// <summary>Member PasteNoFormatting </summary>
		/// <param name='aSelectionType'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void PasteNoFormatting(System.Int32  aSelectionType);
		
		/// <summary>Member RebuildDocumentFromSource </summary>
		/// <param name='aSourceString'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RebuildDocumentFromSource([MarshalAs(UnmanagedType.LPStruct)] nsAString aSourceString);
		
		/// <summary>Member InsertHTMLWithContext </summary>
		/// <param name='aInputString'> </param>
		/// <param name='aContextStr'> </param>
		/// <param name='aInfoStr'> </param>
		/// <param name='aFlavor'> </param>
		/// <param name='aSourceDoc'> </param>
		/// <param name='aDestinationNode'> </param>
		/// <param name='aDestinationOffset'> </param>
		/// <param name='aDeleteSelection'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InsertHTMLWithContext([MarshalAs(UnmanagedType.LPStruct)] nsAString aInputString, [MarshalAs(UnmanagedType.LPStruct)] nsAString aContextStr, [MarshalAs(UnmanagedType.LPStruct)] nsAString aInfoStr, [MarshalAs(UnmanagedType.LPStruct)] nsAString aFlavor, [MarshalAs(UnmanagedType.Interface)] nsIDOMDocument  aSourceDoc, [MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aDestinationNode, System.Int32  aDestinationOffset, System.Boolean  aDeleteSelection);
		
		/// <summary>Member InsertElementAtSelection </summary>
		/// <param name='aElement'> </param>
		/// <param name='aDeleteSelection'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InsertElementAtSelection([MarshalAs(UnmanagedType.Interface)] nsIDOMElement  aElement, System.Boolean  aDeleteSelection);
		
		/// <summary>Member SetDocumentTitle </summary>
		/// <param name='aTitle'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetDocumentTitle([MarshalAs(UnmanagedType.LPStruct)] nsAString aTitle);
		
		/// <summary>Member UpdateBaseURL </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void UpdateBaseURL();
		
		/// <summary>Member SelectElement </summary>
		/// <param name='aElement'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SelectElement([MarshalAs(UnmanagedType.Interface)] nsIDOMElement  aElement);
		
		/// <summary>Member SetCaretAfterElement </summary>
		/// <param name='aElement'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetCaretAfterElement([MarshalAs(UnmanagedType.Interface)] nsIDOMElement  aElement);
		
		/// <summary>Member SetParagraphFormat </summary>
		/// <param name='aParagraphFormat'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetParagraphFormat([MarshalAs(UnmanagedType.LPStruct)] nsAString aParagraphFormat);
		
		/// <summary>Member GetParagraphState </summary>
		/// <param name='aMixed'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetParagraphState(out System.Boolean  aMixed);
		
		/// <summary>Member GetFontFaceState </summary>
		/// <param name='aMixed'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetFontFaceState(out System.Boolean  aMixed);
		
		/// <summary>Member GetFontColorState </summary>
		/// <param name='aMixed'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetFontColorState(out System.Boolean  aMixed);
		
		/// <summary>Member GetBackgroundColorState </summary>
		/// <param name='aMixed'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetBackgroundColorState(out System.Boolean  aMixed);
		
		/// <summary>Member GetHighlightColorState </summary>
		/// <param name='aMixed'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetHighlightColorState(out System.Boolean  aMixed);
		
		/// <summary>Member GetListState </summary>
		/// <param name='aMixed'> </param>
		/// <param name='aOL'> </param>
		/// <param name='aUL'> </param>
		/// <param name='aDL'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetListState(out System.Boolean  aMixed, out System.Boolean  aOL, out System.Boolean  aUL, out System.Boolean  aDL);
		
		/// <summary>Member GetListItemState </summary>
		/// <param name='aMixed'> </param>
		/// <param name='aLI'> </param>
		/// <param name='aDT'> </param>
		/// <param name='aDD'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetListItemState(out System.Boolean  aMixed, out System.Boolean  aLI, out System.Boolean  aDT, out System.Boolean  aDD);
		
		/// <summary>Member GetAlignment </summary>
		/// <param name='aMixed'> </param>
		/// <param name='aAlign'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetAlignment(out System.Boolean  aMixed, out short aAlign);
		
		/// <summary>Member GetIndentState </summary>
		/// <param name='aCanIndent'> </param>
		/// <param name='aCanOutdent'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetIndentState(out System.Boolean  aCanIndent, out System.Boolean  aCanOutdent);
		
		/// <summary>Member MakeOrChangeList </summary>
		/// <param name='aListType'> </param>
		/// <param name='entireList'> </param>
		/// <param name='aBulletType'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void MakeOrChangeList([MarshalAs(UnmanagedType.LPStruct)] nsAString aListType, System.Boolean  entireList, [MarshalAs(UnmanagedType.LPStruct)] nsAString aBulletType);
		
		/// <summary>Member RemoveList </summary>
		/// <param name='aListType'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveList([MarshalAs(UnmanagedType.LPStruct)] nsAString aListType);
		
		/// <summary>Member Indent </summary>
		/// <param name='aIndent'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Indent([MarshalAs(UnmanagedType.LPStruct)] nsAString aIndent);
		
		/// <summary>Member Align </summary>
		/// <param name='aAlign'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Align([MarshalAs(UnmanagedType.LPStruct)] nsAString aAlign);
		
		/// <summary>Member GetElementOrParentByTagName </summary>
		/// <param name='aTagName'> </param>
		/// <param name='aNode'> </param>
		/// <returns>A nsIDOMElement</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMElement GetElementOrParentByTagName([MarshalAs(UnmanagedType.LPStruct)] nsAString aTagName, [MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aNode);
		
		/// <summary>Member GetSelectedElement </summary>
		/// <param name='aTagName'> </param>
		/// <returns>A nsIDOMElement</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMElement GetSelectedElement([MarshalAs(UnmanagedType.LPStruct)] nsAString aTagName);
		
		/// <summary>Member GetHeadContentsAsHTML </summary>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetHeadContentsAsHTML();
		
		/// <summary>Member ReplaceHeadContentsWithHTML </summary>
		/// <param name='aSourceToInsert'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void ReplaceHeadContentsWithHTML([MarshalAs(UnmanagedType.LPStruct)] nsAString aSourceToInsert);
		
		/// <summary>Member CreateElementWithDefaults </summary>
		/// <param name='aTagName'> </param>
		/// <returns>A nsIDOMElement</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMElement CreateElementWithDefaults([MarshalAs(UnmanagedType.LPStruct)] nsAString aTagName);
		
		/// <summary>Member InsertLinkAroundSelection </summary>
		/// <param name='aAnchorElement'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void InsertLinkAroundSelection([MarshalAs(UnmanagedType.Interface)] nsIDOMElement  aAnchorElement);
		
		/// <summary>Member SetBackgroundColor </summary>
		/// <param name='aColor'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBackgroundColor([MarshalAs(UnmanagedType.LPStruct)] nsAString aColor);
		
		/// <summary>Member SetBodyAttribute </summary>
		/// <param name='aAttr'> </param>
		/// <param name='aValue'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetBodyAttribute([MarshalAs(UnmanagedType.LPStruct)] nsAString aAttr, [MarshalAs(UnmanagedType.LPStruct)] nsAString aValue);
		
		/// <summary>Member IgnoreSpuriousDragEvent </summary>
		/// <param name='aIgnoreSpuriousDragEvent'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void IgnoreSpuriousDragEvent(System.Boolean  aIgnoreSpuriousDragEvent);
		
		/// <summary>Member GetLinkedObjects </summary>
		/// <returns>A nsISupportsArray</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupportsArray GetLinkedObjects();
		
		/// <summary>Member GetIsCSSEnabledAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetIsCSSEnabledAttribute();
		
		/// <summary>Member SetIsCSSEnabledAttribute </summary>
		/// <param name='aIsCSSEnabled'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetIsCSSEnabledAttribute(System.Boolean  aIsCSSEnabled);
		
		/// <summary>Member AddInsertionListener </summary>
		/// <param name='inFilter'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AddInsertionListener(System.IntPtr inFilter);
		
		/// <summary>Member RemoveInsertionListener </summary>
		/// <param name='inFilter'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveInsertionListener(System.IntPtr inFilter);
		
		/// <summary>Member CreateAnonymousElement </summary>
		/// <param name='aTag'> </param>
		/// <param name='aParentNode'> </param>
		/// <param name='aAnonClass'> </param>
		/// <param name='aIsCreatedHidden'> </param>
		/// <returns>A nsIDOMElement</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMElement CreateAnonymousElement([MarshalAs(UnmanagedType.LPStruct)] nsAString aTag, [MarshalAs(UnmanagedType.Interface)] nsIDOMNode  aParentNode, [MarshalAs(UnmanagedType.LPStruct)] nsAString aAnonClass, System.Boolean  aIsCreatedHidden);
		
		/// <summary>Member GetSelectionContainer </summary>
		/// <returns>A nsIDOMElement</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMElement GetSelectionContainer();
		
		/// <summary>Member CheckSelectionStateForAnonymousButtons </summary>
		/// <param name='aSelection'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void CheckSelectionStateForAnonymousButtons([MarshalAs(UnmanagedType.Interface)] nsISelection  aSelection);
		
		/// <summary>Member IsAnonymousElement </summary>
		/// <param name='aElement'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool IsAnonymousElement([MarshalAs(UnmanagedType.Interface)] nsIDOMElement  aElement);
		
		/// <summary>Member GetReturnInParagraphCreatesNewParagraphAttribute </summary>
		/// <returns>A System.Boolean </returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.Boolean  GetReturnInParagraphCreatesNewParagraphAttribute();
		
		/// <summary>Member SetReturnInParagraphCreatesNewParagraphAttribute </summary>
		/// <param name='aReturnInParagraphCreatesNewParagraph'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetReturnInParagraphCreatesNewParagraphAttribute(System.Boolean  aReturnInParagraphCreatesNewParagraph);
	}
}
