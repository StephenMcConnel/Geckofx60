// --------------------------------------------------------------------------------------------
// Copyright (c) 2011, SIL International. All rights reserved.
// 
// File: nsIHandlerService.cs
// Responsibility: Generated by IDLImporter
// Last reviewed: 
// 
// <remarks>
// Generated by IDLImporter from file nsIHandlerService.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Skybound.Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	using System.Windows.Forms;
	
	
	/// <summary>nsIHandlerService </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("53f0ad17-ec62-46a1-adbc-efccc06babcd")]
	public interface nsIHandlerService
	{
		
		/// <summary>Member Enumerate </summary>
		/// <returns>A nsISimpleEnumerator</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISimpleEnumerator Enumerate();
		
		/// <summary>Member FillHandlerInfo </summary>
		/// <param name='aHandlerInfo'> </param>
		/// <param name='aOverrideType'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void FillHandlerInfo([MarshalAs(UnmanagedType.Interface)] nsIHandlerInfo  aHandlerInfo, [MarshalAs(UnmanagedType.LPStruct)] nsAString  aOverrideType);
		
		/// <summary>Member Store </summary>
		/// <param name='aHandlerInfo'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Store([MarshalAs(UnmanagedType.Interface)] nsIHandlerInfo  aHandlerInfo);
		
		/// <summary>Member Exists </summary>
		/// <param name='aHandlerInfo'> </param>
		/// <returns>A System.Boolean</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool Exists([MarshalAs(UnmanagedType.Interface)] nsIHandlerInfo  aHandlerInfo);
		
		/// <summary>Member Remove </summary>
		/// <param name='aHandlerInfo'> </param>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Remove([MarshalAs(UnmanagedType.Interface)] nsIHandlerInfo  aHandlerInfo);
		
		/// <summary>Member GetTypeFromExtension </summary>
		/// <param name='aFileExtension'> </param>
		/// <returns>A nsAString</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsAString GetTypeFromExtension([MarshalAs(UnmanagedType.LPStruct)] nsAString  aFileExtension);
	}
}
